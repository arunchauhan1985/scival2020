CREATE DATABASE  IF NOT EXISTS `scival` /*!40100 DEFAULT CHARACTER SET latin1 */;
USE `scival`;
-- MySQL dump 10.13  Distrib 8.0.21, for Win64 (x86_64)
--
-- Host: localhost    Database: scival
-- ------------------------------------------------------
-- Server version	5.7.31-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `about`
--

DROP TABLE IF EXISTS `about`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `about` (
  `ABOUT_ID` bigint(20) NOT NULL,
  `FUNDINGBODY_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`ABOUT_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `about`
--

LOCK TABLES `about` WRITE;
/*!40000 ALTER TABLE `about` DISABLE KEYS */;
INSERT INTO `about` VALUES (1,501100000003),(2,501100000009);
/*!40000 ALTER TABLE `about` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `address`
--

DROP TABLE IF EXISTS `address`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `address` (
  `COUNTRYTEST` varchar(2000) NOT NULL DEFAULT '',
  `ROOM` varchar(2000) DEFAULT '',
  `STREET` varchar(2000) DEFAULT '',
  `CITY` varchar(2000) DEFAULT '',
  `STATE` varchar(2000) DEFAULT '',
  `POSTALCODE` varchar(2000) DEFAULT '',
  `CONTACT_ID` bigint(20) DEFAULT NULL,
  `AWARDMANAGER_ID` bigint(20) DEFAULT NULL,
  `AFFILIATION_ID` bigint(20) DEFAULT NULL,
  `Id` int(11) NOT NULL,
  PRIMARY KEY (`Id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `address`
--

LOCK TABLES `address` WRITE;
/*!40000 ALTER TABLE `address` DISABLE KEYS */;
INSERT INTO `address` VALUES ('','39','Gali 3','Noida','Uttar Pradesh','201301',1,NULL,NULL,1);
/*!40000 ALTER TABLE `address` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `amount`
--

DROP TABLE IF EXISTS `amount`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `amount` (
  `CURRENCY` varchar(2000) DEFAULT '',
  `AMOUNT_TEXT` bigint(20) NOT NULL,
  `AWARD_ID` bigint(20) NOT NULL,
  `AWARDEE_ID` bigint(20) DEFAULT NULL,
  `CREATE_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`AWARD_ID`,`AMOUNT_TEXT`),
  KEY `IND_AMNT` (`AWARD_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `amount`
--

LOCK TABLES `amount` WRITE;
/*!40000 ALTER TABLE `amount` DISABLE KEYS */;
/*!40000 ALTER TABLE `amount` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `award`
--

DROP TABLE IF EXISTS `award`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `award` (
  `ID` bigint(20) NOT NULL,
  `FUNDINGBODY_ID` bigint(20) NOT NULL,
  `FUNDINGBODYAWARDID` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `TYPE` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `TRUSTING` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `COLLECTIONCODE` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `HIDDEN` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `NAME` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `STARTDATE` date DEFAULT NULL,
  `LASTAMENDEDDATE` date DEFAULT NULL,
  `ENDDATE` date DEFAULT NULL,
  `AWARD_ID` bigint(20) DEFAULT NULL,
  `ABSTRACT` blob,
  `RECORDSOURCE` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `AWARDNOTICEDATE` date DEFAULT NULL,
  `APTARAIDENTIFIER` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `award`
--

LOCK TABLES `award` WRITE;
/*!40000 ALTER TABLE `award` DISABLE KEYS */;
/*!40000 ALTER TABLE `award` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `award_location`
--

DROP TABLE IF EXISTS `award_location`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `award_location` (
  `LOCATION_ID` bigint(20) NOT NULL,
  `COUNTRYTEST` varchar(2000) DEFAULT '',
  `COUNTRY` varchar(2000) DEFAULT '',
  `ROOM` varchar(2000) DEFAULT '',
  `STREET` varchar(2000) DEFAULT '',
  `CITY` varchar(2000) DEFAULT '',
  `STATE` varchar(2000) DEFAULT '',
  `POSTALCODE` varchar(2000) DEFAULT '',
  `AWARD_ID` bigint(20) DEFAULT NULL,
  `CREATED_DATE` datetime DEFAULT NULL,
  PRIMARY KEY (`LOCATION_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `award_location`
--

LOCK TABLES `award_location` WRITE;
/*!40000 ALTER TABLE `award_location` DISABLE KEYS */;
/*!40000 ALTER TABLE `award_location` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `award_main`
--

DROP TABLE IF EXISTS `award_main`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `award_main` (
  `AWARDID` bigint(20) NOT NULL,
  `DATAJSON` json DEFAULT NULL,
  PRIMARY KEY (`AWARDID`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `award_main`
--

LOCK TABLES `award_main` WRITE;
/*!40000 ALTER TABLE `award_main` DISABLE KEYS */;
INSERT INTO `award_main` VALUES (1,'{\"TYPE\": \"gov\", \"WFID\": \"4285\", \"STATE\": \"DELHI\", \"CapOpp\": \"\", \"HIDDEN\": \"False\", \"OPPSup\": \"\", \"profit\": \"True\", \"COMMENT\": \"No Comments\", \"COUNTRY\": \"afg\", \"DEFUNCT\": \"False\", \"LOGINId\": \"51\", \"PAGENAME\": \"FUNDINGBASE.ASPX\", \"TRUSTING\": \"True\", \"TierInfo\": \"2\", \"AwardsSup\": \"\", \"CapAwards\": \"\", \"SUBTYPEID\": \"academ\", \"ABBREVNAME\": \"\", \"CROSSREFID\": \"\", \"ORGDBID_ID\": \"1\", \"CONTEXTNAME\": \"\", \"RECORDSOURCE\": \"https://arcticnet.ulaval.ca/\", \"SUBTYPE_TEXT\": \"Universities (academic only)\", \"CANONICALNAME\": \"System.Byte[]\", \"COLLECTIONCODE\": \"ABC\", \"FUNDINGBODY_ID\": \"501100000003\", \"extendedRecord\": \"False\", \"AWARDSUCCESRATE\": \"100.00\", \"awardsFrequency\": \"\", \"PREFERREDORGNAME\": \"System.Byte[]\", \"ELIGIBILITYDESCRIPTION\": \"System.Byte[]\", \"opportunitiesFrequency\": \"\"}');
/*!40000 ALTER TABLE `award_main` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `award_master`
--

DROP TABLE IF EXISTS `award_master`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `award_master` (
  `AWARDID` bigint(20) NOT NULL,
  `FUNDINGBODYID` bigint(20) DEFAULT NULL,
  `AWARDNAME` varchar(2000) DEFAULT '',
  `URL` varchar(2000) DEFAULT '',
  `CREATEDDATE` datetime DEFAULT NULL,
  `CREATEDBY` bigint(20) DEFAULT NULL,
  `CYCLECOMPLETIONDATE` datetime DEFAULT NULL,
  `CYCLECOMPLETEDBY` bigint(20) DEFAULT NULL,
  `LASTUPDATEDBY` bigint(20) DEFAULT NULL,
  `CYCLE` bigint(20) DEFAULT NULL,
  `STATUSCODE` bigint(20) DEFAULT NULL,
  `RUSH` bigint(20) DEFAULT NULL,
  `RUSHBY` bigint(20) DEFAULT NULL,
  `ALLOCATIONMODE` varchar(2000) DEFAULT '',
  `ISAUTOMATED` bigint(20) DEFAULT NULL,
  `ISOUTOFCMS` bigint(20) DEFAULT NULL,
  `OUTOFCMSCOMPLETIONDATE` datetime DEFAULT NULL,
  PRIMARY KEY (`AWARDID`),
  KEY `IND_SCIAWARDMST` (`CYCLECOMPLETIONDATE`),
  KEY `IND_SCI_AWRD_MSTER` (`FUNDINGBODYID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `award_master`
--

LOCK TABLES `award_master` WRITE;
/*!40000 ALTER TABLE `award_master` DISABLE KEYS */;
INSERT INTO `award_master` VALUES (123456789010,501100000312,'Bursary fund to cover counselling sessions and supervision costs','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789011,501100000312,'AbleWeb Digital Inclusion Training Programme','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789012,501100000312,'Funding for equipment trailer required for camping trips','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789013,501100000312,'Moving on from domestic abuse','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789014,501100000312,'Funding for subsidised childcare places','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789015,501100000312,'Funding towards refurbishment of community hall (sanitary ware upgrade)','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789016,501100000312,'Progression Pathways','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789017,501100000312,'Anne Frank: A History for Today exhibition','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789018,501100000312,'Funding to support network and activities for fathers, male carers and children','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789019,501100000312,'Weekly outreach advice service in Acomb','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789020,501100000312,'Community Sparks','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789021,501100000312,'4-weekly training and employment and programme for people aged 50+','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789022,501100000312,'Support to families with children under the age of 5','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789023,501100000312,'Employment and training scheme for ex-offenders','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789024,501100000312,'Subsidised treatment (min massages) for people on low incomes','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789025,501100000312,'Funding for a 9-seater second-hand minibus for transportation and delivery purposes','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789026,501100000312,'York Pedals to work','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789027,501100000312,'York Bus Forum - funding towards costs and access costs associated with running the organisation','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789028,501100000312,'Resettlement grants and Hardship and Discretionary Fund for refugees and asylum seekers','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789029,501100000312,'Pop-ip café in Derwenthorpe','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789030,501100000312,'Care Stories','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789031,501100000312,'Financial Capability Coach for a project entitled ‘My Money, My Life‘','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789032,501100000312,'Funding towards Refugee Action York\'s core costs for existing services','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789033,501100000312,'York 50+ Festival','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789034,501100000312,'Continuation of the ‘PIP’ Tea Party Project','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789035,501100000312,'Inditeens Project\' – activities supporting disabled children','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789036,501100000312,'Funding towards staffing costs of a project worker who will support the Rethink York Carers Group','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789037,501100000312,'Funding for Summer Holiday Club 2017 bursary','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789038,501100000312,'Groves Association Community Awards Ceremony','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789039,501100000312,'Funding towards engaging a planning consultant to work on the organisation\'s response to the Local Plan in York','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789040,501100000312,'Counselling changes lives: addressing the consequences of poverty in York','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789041,501100000312,'Community Cinema Chairs','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789042,501100000312,'Balanced Lives Clifton: alleviating symptoms of poverty by transforming the health, wellbeing and social capital of older residents of Clifton, York','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789043,501100000312,'Money Matters (Benefits Advice Service) and Befriending Good Neighbourhood Scheme','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789044,501100000312,'Helping Kids Build Great Lives – Closing the attainment gap for disadvantaged children through emotional wellbeing and life skills development for children and their families','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789045,501100000312,'GEM (Greet, Eat and Meet) over-50s lunch','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789046,501100000312,'Community Kitchen','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789047,501100000312,'Kyra Reaching Out','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789048,501100000312,'Digital Pathways','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789049,501100000312,'Funding towards The Engagement Plan: 2017 – 2018','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789050,501100000312,'Benefits Advocacy: help with applications, assessments and appeals','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789051,501100000312,'SASH – improving financial capabilities','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789052,501100000312,'The Island – mentoring sessions','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789053,501100000312,'Welfare Benefits Unit Development Project','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789054,501100000312,'Advocacy Support: Access to Benefits and Debt Advice','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789055,501100000312,'Ways to Wellbeing Tang Hall','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789056,501100000312,'Celebrating Disability Pride in York','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789057,501100000312,'Reducing Isolation and Building Community Through Time Banking','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789058,501100000312,'Breaking Bread: Tackling Isolation through Social Eating','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL),(123456789059,501100000312,'Community Sparks (2018)','NA',NULL,1,NULL,1,NULL,0,1,NULL,NULL,NULL,0,1,NULL);
/*!40000 ALTER TABLE `award_master` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `awardceiling`
--

DROP TABLE IF EXISTS `awardceiling`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `awardceiling` (
  `CURRENCY` varchar(2000) DEFAULT '',
  `AWARDCEILING_TEXT` bigint(20) NOT NULL,
  `OPPORTUNITY_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`AWARDCEILING_TEXT`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `awardceiling`
--

LOCK TABLES `awardceiling` WRITE;
/*!40000 ALTER TABLE `awardceiling` DISABLE KEYS */;
/*!40000 ALTER TABLE `awardceiling` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `awardees`
--

DROP TABLE IF EXISTS `awardees`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `awardees` (
  `AWARD_ID` bigint(20) DEFAULT NULL,
  `AWARDEES_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`AWARDEES_ID`),
  KEY `IND_SCI_AWARDEES` (`AWARD_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `awardees`
--

LOCK TABLES `awardees` WRITE;
/*!40000 ALTER TABLE `awardees` DISABLE KEYS */;
/*!40000 ALTER TABLE `awardees` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `awardfloor`
--

DROP TABLE IF EXISTS `awardfloor`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `awardfloor` (
  `CURRENCY` varchar(200) NOT NULL DEFAULT '',
  `ESTIMATEDFUNDING_TEXT` varchar(1000) DEFAULT '',
  `OPPORTUNITY_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`CURRENCY`,`OPPORTUNITY_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `awardfloor`
--

LOCK TABLES `awardfloor` WRITE;
/*!40000 ALTER TABLE `awardfloor` DISABLE KEYS */;
/*!40000 ALTER TABLE `awardfloor` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `awardmanagers`
--

DROP TABLE IF EXISTS `awardmanagers`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `awardmanagers` (
  `AWARDMANAGERS_ID` bigint(20) NOT NULL,
  `AWARD_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`AWARDMANAGERS_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `awardmanagers`
--

LOCK TABLES `awardmanagers` WRITE;
/*!40000 ALTER TABLE `awardmanagers` DISABLE KEYS */;
/*!40000 ALTER TABLE `awardmanagers` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `awardssource`
--

DROP TABLE IF EXISTS `awardssource`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `awardssource` (
  `AWARD_SOURCE_ID` decimal(38,0) DEFAULT NULL,
  `URL` varchar(500) DEFAULT NULL,
  `STATUS` varchar(50) DEFAULT NULL,
  `LASTVISITED` datetime DEFAULT NULL,
  `FUNDINGBODY_ID` decimal(38,0) DEFAULT NULL,
  `CREATED_DATE` datetime DEFAULT NULL,
  `LANG` varchar(25) DEFAULT NULL,
  `NAME` longtext,
  `AW_COMMENT` longtext,
  `FREQUENCY` varchar(200) DEFAULT NULL,
  `CAPTURESTART` datetime DEFAULT NULL,
  `CAPTUREEND` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `awardssource`
--

LOCK TABLES `awardssource` WRITE;
/*!40000 ALTER TABLE `awardssource` DISABLE KEYS */;
/*!40000 ALTER TABLE `awardssource` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `awardsuccessratedesc`
--

DROP TABLE IF EXISTS `awardsuccessratedesc`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `awardsuccessratedesc` (
  `AWARDSUCCESSRATE_ID` decimal(20,0) DEFAULT NULL,
  `LANG` varchar(20) DEFAULT NULL,
  `DESCRIPTION` longtext,
  `SOURCE` longtext,
  `FUNDINGBODY_ID` decimal(20,0) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `awardsuccessratedesc`
--

LOCK TABLES `awardsuccessratedesc` WRITE;
/*!40000 ALTER TABLE `awardsuccessratedesc` DISABLE KEYS */;
/*!40000 ALTER TABLE `awardsuccessratedesc` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `change`
--

DROP TABLE IF EXISTS `change`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `change` (
  `TYPE` varchar(2000) NOT NULL DEFAULT '',
  `POSTDATE` datetime DEFAULT NULL,
  `VERSION` bigint(20) NOT NULL,
  `CHANGE_TEXT` varchar(4000) DEFAULT '',
  `CHANGEHISTORY_ID` bigint(20) DEFAULT NULL,
  `POSTDATE_IS_SAVE` bigint(20) DEFAULT NULL,
  `CREATED_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `CHANGE_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`CHANGE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `change`
--

LOCK TABLES `change` WRITE;
/*!40000 ALTER TABLE `change` DISABLE KEYS */;
/*!40000 ALTER TABLE `change` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `changehistory`
--

DROP TABLE IF EXISTS `changehistory`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `changehistory` (
  `CHANGEHISTORY_ID` bigint(20) NOT NULL,
  `OPPORTUNITY_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`CHANGEHISTORY_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `changehistory`
--

LOCK TABLES `changehistory` WRITE;
/*!40000 ALTER TABLE `changehistory` DISABLE KEYS */;
/*!40000 ALTER TABLE `changehistory` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `classification`
--

DROP TABLE IF EXISTS `classification`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `classification` (
  `FREQUENCY` bigint(20) NOT NULL,
  `CODE` varchar(2000) NOT NULL DEFAULT '',
  `CLASSIFICATION_TEXT` varchar(2000) NOT NULL DEFAULT '',
  `CLASSIFICATIONS_ID` bigint(20) NOT NULL,
  KEY `IDX_CLASSIFICATION` (`CLASSIFICATIONS_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `classification`
--

LOCK TABLES `classification` WRITE;
/*!40000 ALTER TABLE `classification` DISABLE KEYS */;
/*!40000 ALTER TABLE `classification` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `classificationgroup`
--

DROP TABLE IF EXISTS `classificationgroup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `classificationgroup` (
  `CLASSIFICATIONGROUP_ID` bigint(20) NOT NULL,
  `FUNDINGBODY_ID` bigint(20) DEFAULT NULL,
  `AWARD_ID` bigint(20) DEFAULT NULL,
  `OPPORTUNITY_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`CLASSIFICATIONGROUP_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `classificationgroup`
--

LOCK TABLES `classificationgroup` WRITE;
/*!40000 ALTER TABLE `classificationgroup` DISABLE KEYS */;
INSERT INTO `classificationgroup` VALUES (1,501100000003,NULL,NULL),(2,501100000009,NULL,NULL);
/*!40000 ALTER TABLE `classificationgroup` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `classifications`
--

DROP TABLE IF EXISTS `classifications`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `classifications` (
  `TYPE` varchar(2000) DEFAULT '',
  `CLASSIFICATIONS_ID` bigint(20) NOT NULL,
  `CLASSIFICATIONGROUP_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`CLASSIFICATIONS_ID`),
  KEY `INX_CLASSIFICATIONS` (`CLASSIFICATIONGROUP_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `classifications`
--

LOCK TABLES `classifications` WRITE;
/*!40000 ALTER TABLE `classifications` DISABLE KEYS */;
INSERT INTO `classifications` VALUES ('GOV',1,1),('GOV',2,2);
/*!40000 ALTER TABLE `classifications` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `contactinfo`
--

DROP TABLE IF EXISTS `contactinfo`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `contactinfo` (
  `CONTACTINFO_ID` bigint(20) NOT NULL,
  `FUNDINGBODY_ID` bigint(20) DEFAULT NULL,
  `OPPORTUNITY_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`CONTACTINFO_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `contactinfo`
--

LOCK TABLES `contactinfo` WRITE;
/*!40000 ALTER TABLE `contactinfo` DISABLE KEYS */;
INSERT INTO `contactinfo` VALUES (1,501100000003,NULL),(2,501100000009,NULL);
/*!40000 ALTER TABLE `contactinfo` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `contacts`
--

DROP TABLE IF EXISTS `contacts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `contacts` (
  `CONTACTS_ID` bigint(20) NOT NULL,
  `FUNDINGBODY_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`CONTACTS_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `contacts`
--

LOCK TABLES `contacts` WRITE;
/*!40000 ALTER TABLE `contacts` DISABLE KEYS */;
INSERT INTO `contacts` VALUES (1,501100000003),(2,501100000009);
/*!40000 ALTER TABLE `contacts` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `createddate`
--

DROP TABLE IF EXISTS `createddate`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `createddate` (
  `VERSION` bigint(20) NOT NULL,
  `CREATEDDATE_TEXT` datetime DEFAULT NULL,
  `REVISIONHISTORY_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`VERSION`),
  KEY `IND_SCI_CREADATE` (`REVISIONHISTORY_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `createddate`
--

LOCK TABLES `createddate` WRITE;
/*!40000 ALTER TABLE `createddate` DISABLE KEYS */;
INSERT INTO `createddate` VALUES (1,'2020-08-27 20:14:06',1),(2,'2020-08-27 20:14:06',2);
/*!40000 ALTER TABLE `createddate` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `eligibilityclassification`
--

DROP TABLE IF EXISTS `eligibilityclassification`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `eligibilityclassification` (
  `TYPE` varchar(2000) DEFAULT '',
  `ID` varchar(2000) DEFAULT '',
  `ELIGIBILITYCLASSIFICATION_TEXT` varchar(2000) DEFAULT '',
  `OPPORTUNITY_ID` bigint(20) DEFAULT NULL,
  `REGION_SPECIFIC_ID` bigint(20) DEFAULT NULL,
  `ELIGIBILITYCLASSIFICATION_ID` bigint(20) NOT NULL,
  `LANG` varchar(10) DEFAULT '',
  PRIMARY KEY (`ELIGIBILITYCLASSIFICATION_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `eligibilityclassification`
--

LOCK TABLES `eligibilityclassification` WRITE;
/*!40000 ALTER TABLE `eligibilityclassification` DISABLE KEYS */;
/*!40000 ALTER TABLE `eligibilityclassification` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `eligibilitydescription`
--

DROP TABLE IF EXISTS `eligibilitydescription`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `eligibilitydescription` (
  `ELIGIBILITYDESCRIPTION_ID` bigint(20) NOT NULL,
  `OPPORTUNITY_ID` bigint(20) DEFAULT NULL,
  `CREATED_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`ELIGIBILITYDESCRIPTION_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `eligibilitydescription`
--

LOCK TABLES `eligibilitydescription` WRITE;
/*!40000 ALTER TABLE `eligibilitydescription` DISABLE KEYS */;
/*!40000 ALTER TABLE `eligibilitydescription` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `establishmentinfo`
--

DROP TABLE IF EXISTS `establishmentinfo`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `establishmentinfo` (
  `ESTABLISHMENTDATE` varchar(2000) DEFAULT NULL,
  `ESTABLISHMENTCITY` varchar(2000) DEFAULT NULL,
  `ESTABLISHMENTSTATE` varchar(2000) DEFAULT NULL,
  `ESTABLISHMENTCOUNTRYCODE` varchar(2000) DEFAULT NULL,
  `ESTABLISHMENTDESCRIPTION` longtext,
  `FUNDINGBODY_ID` decimal(20,0) NOT NULL,
  `LANG` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`FUNDINGBODY_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `establishmentinfo`
--

LOCK TABLES `establishmentinfo` WRITE;
/*!40000 ALTER TABLE `establishmentinfo` DISABLE KEYS */;
INSERT INTO `establishmentinfo` VALUES ('2020','Noida','Uttar Pradesh','ind','Description Test',501100000003,'en');
/*!40000 ALTER TABLE `establishmentinfo` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `estimatedamountdescription`
--

DROP TABLE IF EXISTS `estimatedamountdescription`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `estimatedamountdescription` (
  `ESTIMATEDAMOUNTDESCRIPTION_ID` bigint(20) NOT NULL,
  `OPPORTUNITY_ID` bigint(20) DEFAULT NULL,
  `CREATED_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`ESTIMATEDAMOUNTDESCRIPTION_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `estimatedamountdescription`
--

LOCK TABLES `estimatedamountdescription` WRITE;
/*!40000 ALTER TABLE `estimatedamountdescription` DISABLE KEYS */;
/*!40000 ALTER TABLE `estimatedamountdescription` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `estimatedfunding`
--

DROP TABLE IF EXISTS `estimatedfunding`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `estimatedfunding` (
  `CURRENCY` varchar(2000) DEFAULT '',
  `ESTIMATEDFUNDING_TEXT` varchar(2000) DEFAULT '',
  `OPPORTUNITY_ID` bigint(20) NOT NULL,
  `AMOUNT_DESCRIPTION` varchar(3000) DEFAULT '',
  PRIMARY KEY (`OPPORTUNITY_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `estimatedfunding`
--

LOCK TABLES `estimatedfunding` WRITE;
/*!40000 ALTER TABLE `estimatedfunding` DISABLE KEYS */;
/*!40000 ALTER TABLE `estimatedfunding` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `fbprogress`
--

DROP TABLE IF EXISTS `fbprogress`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `fbprogress` (
  `FUNDINGBODY_ID` bigint(20) NOT NULL,
  `FUNDINGBODYNAME` varchar(2000) DEFAULT '',
  `FBUPDATE` datetime DEFAULT NULL,
  `FBSTATUS` varchar(200) DEFAULT '',
  `OPUPDATE` datetime DEFAULT NULL,
  `OPSTATUS` varchar(200) DEFAULT '',
  `AWUPDATE` datetime DEFAULT NULL,
  `AWSTATUS` varchar(200) DEFAULT '',
  PRIMARY KEY (`FUNDINGBODY_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `fbprogress`
--

LOCK TABLES `fbprogress` WRITE;
/*!40000 ALTER TABLE `fbprogress` DISABLE KEYS */;
/*!40000 ALTER TABLE `fbprogress` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `fundedprogramstypes`
--

DROP TABLE IF EXISTS `fundedprogramstypes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `fundedprogramstypes` (
  `FUNDEDPROGRAMSTYPES_ID` bigint(20) NOT NULL,
  `FUNDINGBODY_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`FUNDEDPROGRAMSTYPES_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `fundedprogramstypes`
--

LOCK TABLES `fundedprogramstypes` WRITE;
/*!40000 ALTER TABLE `fundedprogramstypes` DISABLE KEYS */;
INSERT INTO `fundedprogramstypes`
/*!40000 ALTER TABLE `fundedprogramstypes` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `fundedprojectdetail`
--

DROP TABLE IF EXISTS `fundedprojectdetail`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `fundedprojectdetail` (
  `FUND_ID` bigint(20) NOT NULL,
  `AWARD_ID` bigint(20) DEFAULT NULL,
  `ACRONYM` varchar(200) DEFAULT NULL,
  `BUDGET_AMOUNT` bigint(20) DEFAULT NULL,
  `BUDGET_CURRENCY` varchar(200) DEFAULT NULL,
  `ENDDATE` date DEFAULT NULL,
  `FUNDINGBODYPROJECTID` varchar(200) DEFAULT NULL,
  `STARTDATE` date DEFAULT NULL,
  `STATUS` varchar(200) DEFAULT NULL,
  `COUNTRY` varchar(20) DEFAULT NULL,
  `LOCALITY` varchar(200) DEFAULT NULL,
  `POSTALCODE` varchar(200) DEFAULT NULL,
  `REGION` varchar(200) DEFAULT NULL,
  `STREET` varchar(200) DEFAULT NULL,
  `POSTOFFICEBOXNUMBER` varchar(200) DEFAULT NULL,
  `LINK` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`FUND_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `fundedprojectdetail`
--

LOCK TABLES `fundedprojectdetail` WRITE;
/*!40000 ALTER TABLE `fundedprojectdetail` DISABLE KEYS */;
/*!40000 ALTER TABLE `fundedprojectdetail` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `fundedsubproject`
--

DROP TABLE IF EXISTS `fundedsubproject`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `fundedsubproject` (
  `SUBFUND_ID` bigint(20) NOT NULL,
  `FUND_ID` bigint(20) NOT NULL,
  `AWARD_ID` bigint(20) NOT NULL,
  `FUNDINGBODYPROJECTID` varchar(2000) DEFAULT '',
  `AMOUNT` bigint(20) DEFAULT NULL,
  `CURRENCY` varchar(2000) DEFAULT ''
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `fundedsubproject`
--

LOCK TABLES `fundedsubproject` WRITE;
/*!40000 ALTER TABLE `fundedsubproject` DISABLE KEYS */;
/*!40000 ALTER TABLE `fundedsubproject` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `fundingbody`
--

DROP TABLE IF EXISTS `fundingbody`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `fundingbody` (
  `FUNDINGBODY_ID` bigint(20) NOT NULL,
  `ORGDBID` int(11) DEFAULT NULL,
  `TYPE` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `TRUSTING` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `COUNTRY` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `STATE` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `COLLECTIONCODE` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `HIDDEN` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `CANONICALNAME` longtext,
  `PREFERREDORGNAME` longtext,
  `CONTEXTNAME` longtext,
  `ABBREVNAME` longtext,
  `ELIGIBILITYDESCRIPTION` longtext,
  `RECORDSOURCE` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `AWARDSUCCESRATE` decimal(10,2) DEFAULT NULL,
  `COMMENT_DESC` longtext,
  `DEFUNCT` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `CROSSREFID` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `EXTENDEDRECORD` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `CAPTUREAWARDS` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `CAPTUREOPPORTUNITIES` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `TIERINFO` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `AWARDSSUPPLIER` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `OPPORTUNITIESSUPPLIER` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `AWARDSFREQUENCY` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `OPPORTUNITIESFREQUENCY` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `PROFIT` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`FUNDINGBODY_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `fundingbody`
--

LOCK TABLES `fundingbody` WRITE;
/*!40000 ALTER TABLE `fundingbody` DISABLE KEYS */;
INSERT INTO `fundingbody` VALUES (501100000003,1,'gov','True','afg','DELHI','ABC','False',NULL,NULL,NULL,NULL,'Association of Medical Microbiology and Infectious Disease Canada ','https://arcticnet.ulaval.ca/',100.00,'Test Commenst','False','','False','','','2','','','','','True'),(501100000009,1,'gov','True','asm','UP','Aptara','False',NULL,NULL,NULL,NULL,'Association of Medical Microbiology and Infectious Disease Canada 1','http://www.casa-acea.ca/',200.00,'Test Comments','False','','False','','','3','','','','','False'),(501100000012,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
/*!40000 ALTER TABLE `fundingbody` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `fundingbody_main`
--

DROP TABLE IF EXISTS `fundingbody_main`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `fundingbody_main` (
  `FUNDINGBODY_ID` bigint(20) NOT NULL,
  `DATAJSON` longtext,
  `CreatedBy` varchar(45) DEFAULT NULL,
  `CreatedTime` varchar(100) DEFAULT NULL,
  `ModifiedBy` varchar(45) DEFAULT NULL,
  `ModifiedTime` varchar(100) DEFAULT NULL,
  `orgid` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`FUNDINGBODY_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `fundingbody_main`
--

LOCK TABLES `fundingbody_main` WRITE;
/*!40000 ALTER TABLE `fundingbody_main` DISABLE KEYS */;
INSERT INTO `fundingbody_main` VALUES (501100000003,'{ \"status\": \"Not Available\", \"fundingBodyId\": 1, \"homePage\": \"https://arcticnet.ulaval.ca/\", \"preferredName\": [ { \"language\": \"en\", \"value\": \"Test3\" } ], \"acronym\": [ { \"language\": \"af\", \"value\": \"Test Acry1\" }, { \"language\": \"afr\", \"value\": \"Test Acry1\" }, { \"language\": \"afrk\", \"value\": \"Test Acry1\" }, { \"language\": \"sq\", \"value\": \"Test Acry1\" }, { \"language\": \"alb\", \"value\": \"Test Acry1\" }, { \"language\": \"alba\", \"value\": \"Test Acry1\" }, { \"language\": \"ar\", \"value\": \"Test Acry1\" }, { \"language\": \"ara\", \"value\": \"Test Acry1\" }, { \"language\": \"arab\", \"value\": \"Test Acry1\" }, { \"language\": \"hy\", \"value\": \"Test Acry1\" }, { \"language\": \"arm\", \"value\": \"Test Acry1\" }, { \"language\": \"arme\", \"value\": \"Test Acry1\" }, { \"language\": \"az\", \"value\": \"Test Acry1\" }, { \"language\": \"aze\", \"value\": \"Test Acry1\" }, { \"language\": \"azrb\", \"value\": \"Test Acry1\" }, { \"language\": \"eu\", \"value\": \"Test Acry1\" }, { \"language\": \"baq\", \"value\": \"Test Acry1\" }, { \"language\": \"basq\", \"value\": \"Test Acry1\" }, { \"language\": \"be\", \"value\": \"Test Acry1\" }, { \"language\": \"bel\", \"value\": \"Test Acry1\" }, { \"language\": \"byel\", \"value\": \"Test Acry1\" }, { \"language\": \"bn\", \"value\": \"Test Acry1\" }, { \"language\": \"ben\", \"value\": \"Test Acry1\" }, { \"language\": \"beng\", \"value\": \"Test Acry1\" }, { \"language\": \"bs\", \"value\": \"Test Acry1\" }, { \"language\": \"bos\", \"value\": \"Test Acry1\" }, { \"language\": \"bosn\", \"value\": \"Test Acry1\" }, { \"language\": \"bg\", \"value\": \"Test Acry1\" }, { \"language\": \"bul\", \"value\": \"Test Acry1\" }, { \"language\": \"bulg\", \"value\": \"Test Acry1\" }, { \"language\": \"my\", \"value\": \"Test Acry1\" }, { \"language\": \"bur\", \"value\": \"Test Acry1\" }, { \"language\": \"burm\", \"value\": \"Test Acry1\" }, { \"language\": \"ca\", \"value\": \"Test Acry1\" }, { \"language\": \"cat\", \"value\": \"Test Acry1\" }, { \"language\": \"cata\", \"value\": \"Test Acry1\" }, { \"language\": \"zh\", \"value\": \"Test Acry1\" }, { \"language\": \"chi\", \"value\": \"Test Acry1\" }, { \"language\": \"chin\", \"value\": \"Test Acry1\" }, { \"language\": \"hr\", \"value\": \"Test Acry1\" }, { \"language\": \"hrv\", \"value\": \"Test Acry1\" }, { \"language\": \"croa\", \"value\": \"Test Acry1\" }, { \"language\": \"cs\", \"value\": \"Test Acry1\" }, { \"language\": \"cze\", \"value\": \"Test Acry1\" }, { \"language\": \"czch\", \"value\": \"Test Acry1\" }, { \"language\": \"da\", \"value\": \"Test Acry1\" }, { \"language\": \"dan\", \"value\": \"Test Acry1\" }, { \"language\": \"dans\", \"value\": \"Test Acry1\" }, { \"language\": \"nl\", \"value\": \"Test Acry1\" }, { \"language\": \"dut\", \"value\": \"Test Acry1\" }, { \"language\": \"dutc\", \"value\": \"Test Acry1\" }, { \"language\": \"en\", \"value\": \"Test Acry1\" }, { \"language\": \"eng\", \"value\": \"Test Acry1\" }, { \"language\": \"engl\", \"value\": \"Test Acry1\" }, { \"language\": \"eo\", \"value\": \"Test Acry1\" }, { \"language\": \"epo\", \"value\": \"Test Acry1\" }, { \"language\": \"espe\", \"value\": \"Test Acry1\" }, { \"language\": \"et\", \"value\": \"Test Acry1\" }, { \"language\": \"est\", \"value\": \"Test Acry1\" }, { \"language\": \"esto\", \"value\": \"Test Acry1\" }, { \"language\": \"fi\", \"value\": \"Test Acry1\" }, { \"language\": \"fin\", \"value\": \"Test Acry1\" }, { \"language\": \"finn\", \"value\": \"Test Acry1\" }, { \"language\": \"fr\", \"value\": \"Test Acry1\" }, { \"language\": \"fre\", \"value\": \"Test Acry1\" }, { \"language\": \"fren\", \"value\": \"Test Acry1\" }, { \"language\": \"gl\", \"value\": \"Test Acry1\" }, { \"language\": \"glg\", \"value\": \"Test Acry1\" }, { \"language\": \"gall\", \"value\": \"Test Acry1\" }, { \"language\": \"ka\", \"value\": \"Test Acry1\" }, { \"language\": \"geo\", \"value\": \"Test Acry1\" }, { \"language\": \"geor\", \"value\": \"Test Acry1\" }, { \"language\": \"de\", \"value\": \"Test Acry1\" }, { \"language\": \"ger\", \"value\": \"Test Acry1\" }, { \"language\": \"germ\", \"value\": \"Test Acry1\" }, { \"language\": \"el\", \"value\": \"Test Acry1\" }, { \"language\": \"gre\", \"value\": \"Test Acry1\" }, { \"language\": \"grek\", \"value\": \"Test Acry1\" }, { \"language\": \"he\", \"value\": \"Test Acry1\" }, { \"language\": \"heb\", \"value\": \"Test Acry1\" }, { \"language\": \"hebr\", \"value\": \"Test Acry1\" }, { \"language\": \"hi\", \"value\": \"Test Acry1\" }, { \"language\": \"hin\", \"value\": \"Test Acry1\" }, { \"language\": \"indi\", \"value\": \"Test Acry1\" }, { \"language\": \"hu\", \"value\": \"Test Acry1\" }, { \"language\": \"hun\", \"value\": \"Test Acry1\" }, { \"language\": \"hung\", \"value\": \"Test Acry1\" }, { \"language\": \"is\", \"value\": \"Test Acry1\" }, { \"language\": \"ice\", \"value\": \"Test Acry1\" }, { \"language\": \"icel\", \"value\": \"Test Acry1\" }, { \"language\": \"id\", \"value\": \"Test Acry1\" }, { \"language\": \"ind\", \"value\": \"Test Acry1\" }, { \"language\": \"baha\", \"value\": \"Test Acry1\" }, { \"language\": \"ga\", \"value\": \"Test Acry1\" }, { \"language\": \"gle\", \"value\": \"Test Acry1\" }, { \"language\": \"gael\", \"value\": \"Test Acry1\" }, { \"language\": \"it\", \"value\": \"Test Acry1\" }, { \"language\": \"ita\", \"value\": \"Test Acry1\" }, { \"language\": \"ital\", \"value\": \"Test Acry1\" }, { \"language\": \"ja\", \"value\": \"Test Acry1\" }, { \"language\": \"jpn\", \"value\": \"Test Acry1\" }, { \"language\": \"japa\", \"value\": \"Test Acry1\" }, { \"language\": \"ko\", \"value\": \"Test Acry1\" }, { \"language\": \"kor\", \"value\": \"Test Acry1\" }, { \"language\": \"kora\", \"value\": \"Test Acry1\" }, { \"language\": \"la\", \"value\": \"Test Acry1\" }, { \"language\": \"lat\", \"value\": \"Test Acry1\" }, { \"language\": \"lati\", \"value\": \"Test Acry1\" }, { \"language\": \"lv\", \"value\": \"Test Acry1\" }, { \"language\": \"lav\", \"value\": \"Test Acry1\" }, { \"language\": \"latv\", \"value\": \"Test Acry1\" }, { \"language\": \"lt\", \"value\": \"Test Acry1\" }, { \"language\": \"lit\", \"value\": \"Test Acry1\" }, { \"language\": \"lith\", \"value\": \"Test Acry1\" }, { \"language\": \"mk\", \"value\": \"Test Acry1\" }, { \"language\": \"mac\", \"value\": \"Test Acry1\" }, { \"language\": \"mace\", \"value\": \"Test Acry1\" }, { \"language\": \"ms\", \"value\": \"Test Acry1\" }, { \"language\": \"may\", \"value\": \"Test Acry1\" }, { \"language\": \"mala\", \"value\": \"Test Acry1\" }, { \"language\": \"mi\", \"value\": \"Test Acry1\" }, { \"language\": \"mao\", \"value\": \"Test Acry1\" }, { \"language\": \"maor\", \"value\": \"Test Acry1\" }, { \"language\": \"mn\", \"value\": \"Test Acry1\" }, { \"language\": \"mon\", \"value\": \"Test Acry1\" }, { \"language\": \"mong\", \"value\": \"Test Acry1\" }, { \"language\": \"no\", \"value\": \"Test Acry1\" }, { \"language\": \"nor\", \"value\": \"Test Acry1\" }, { \"language\": \"norw\", \"value\": \"Test Acry1\" }, { \"language\": \"fa\", \"value\": \"Test Acry1\" }, { \"language\": \"per\", \"value\": \"Test Acry1\" }, { \"language\": \"pers\", \"value\": \"Test Acry1\" }, { \"language\": \"pl\", \"value\": \"Test Acry1\" }, { \"language\": \"pol\", \"value\": \"Test Acry1\" }, { \"language\": \"pols\", \"value\": \"Test Acry1\" }, { \"language\": \"xx\", \"value\": \"Test Acry1\" }, { \"language\": \"map\", \"value\": \"Test Acry1\" }, { \"language\": \"poly\", \"value\": \"Test Acry1\" }, { \"language\": \"pt\", \"value\": \"Test Acry1\" }, { \"language\": \"por\", \"value\": \"Test Acry1\" }, { \"language\": \"port\", \"value\": \"Test Acry1\" }, { \"language\": \"ps\", \"value\": \"Test Acry1\" }, { \"language\": \"pus\", \"value\": \"Test Acry1\" }, { \"language\": \"push\", \"value\": \"Test Acry1\" }, { \"language\": \"ro\", \"value\": \"Test Acry1\" }, { \"language\": \"rum\", \"value\": \"Test Acry1\" }, { \"language\": \"ruma\", \"value\": \"Test Acry1\" }, { \"language\": \"ru\", \"value\": \"Test Acry1\" }, { \"language\": \"rus\", \"value\": \"Test Acry1\" }, { \"language\": \"russ\", \"value\": \"Test Acry1\" }, { \"language\": \"gd\", \"value\": \"Test Acry1\" }, { \"language\": \"gla\", \"value\": \"Test Acry1\" }, { \"language\": \"scot\", \"value\": \"Test Acry1\" }, { \"language\": \"sr\", \"value\": \"Test Acry1\" }, { \"language\": \"srp\", \"value\": \"Test Acry1\" }, { \"language\": \"serb\", \"value\": \"Test Acry1\" }, { \"language\": \"si\", \"value\": \"Test Acry1\" }, { \"language\": \"sin\", \"value\": \"Test Acry1\" }, { \"language\": \"sinh\", \"value\": \"Test Acry1\" }, { \"language\": \"sk\", \"value\": \"Test Acry1\" }, { \"language\": \"slo\", \"value\": \"Test Acry1\" }, { \"language\": \"slvk\", \"value\": \"Test Acry1\" }, { \"language\": \"sl\", \"value\": \"Test Acry1\" }, { \"language\": \"slv\", \"value\": \"Test Acry1\" }, { \"language\": \"slvn\", \"value\": \"Test Acry1\" }, { \"language\": \"es\", \"value\": \"Test Acry1\" }, { \"language\": \"spa\", \"value\": \"Test Acry1\" }, { \"language\": \"span\", \"value\": \"Test Acry1\" }, { \"language\": \"sv\", \"value\": \"Test Acry1\" }, { \"language\": \"swe\", \"value\": \"Test Acry1\" }, { \"language\": \"swed\", \"value\": \"Test Acry1\" }, { \"language\": \"tl\", \"value\": \"Test Acry1\" }, { \"language\": \"tgl\", \"value\": \"Test Acry1\" }, { \"language\": \"taga\", \"value\": \"Test Acry1\" }, { \"language\": \"th\", \"value\": \"Test Acry1\" }, { \"language\": \"tha\", \"value\": \"Test Acry1\" }, { \"language\": \"thai\", \"value\": \"Test Acry1\" }, { \"language\": \"tr\", \"value\": \"Test Acry1\" }, { \"language\": \"tur\", \"value\": \"Test Acry1\" }, { \"language\": \"turk\", \"value\": \"Test Acry1\" }, { \"language\": \"uk\", \"value\": \"Test Acry1\" }, { \"language\": \"ukr\", \"value\": \"Test Acry1\" }, { \"language\": \"ukra\", \"value\": \"Test Acry1\" }, { \"language\": \"ur\", \"value\": \"Test Acry1\" }, { \"language\": \"urd\", \"value\": \"Test Acry1\" }, { \"language\": \"urdu\", \"value\": \"Test Acry1\" }, { \"language\": \"uz\", \"value\": \"Test Acry1\" }, { \"language\": \"uzb\", \"value\": \"Test Acry1\" }, { \"language\": \"uzbe\", \"value\": \"Test Acry1\" }, { \"language\": \"vi\", \"value\": \"Test Acry1\" }, { \"language\": \"vie\", \"value\": \"Test Acry1\" }, { \"language\": \"viet\", \"value\": \"Test Acry1\" }, { \"language\": \"ne\", \"value\": \"Test Acry1\" }, { \"language\": \"nep\", \"value\": \"Test Acry1\" }, { \"language\": \"lo\", \"value\": \"Test Acry1\" }, { \"language\": \"lao\", \"value\": \"Test Acry1\" }, { \"language\": \"kaz\", \"value\": \"Test Acry1\" }, { \"language\": \"kk\", \"value\": \"Test Acry1\" }, { \"language\": \"tgk\", \"value\": \"Test Acry1\" }, { \"language\": \"tg\", \"value\": \"Test Acry1\" }, { \"language\": \"kir\", \"value\": \"Test Acry1\" }, { \"language\": \"ky\", \"value\": \"Test Acry1\" }, { \"language\": \"wel\", \"value\": \"Test Acry1\" }, { \"language\": \"cy\", \"value\": \"Test Acry1\" }, { \"language\": \"rum\", \"value\": \"Test Acry1\" }, { \"language\": \"ro\", \"value\": \"Test Acry1\" } ], \"abbrevName\": [ { \"language\": \"af\", \"value\": \"Test4\" }, { \"language\": \"afr\", \"value\": \"Test4\" }, { \"language\": \"afrk\", \"value\": \"Test4\" }, { \"language\": \"sq\", \"value\": \"Test4\" }, { \"language\": \"alb\", \"value\": \"Test4\" }, { \"language\": \"alba\", \"value\": \"Test4\" }, { \"language\": \"ar\", \"value\": \"Test4\" }, { \"language\": \"ara\", \"value\": \"Test4\" }, { \"language\": \"arab\", \"value\": \"Test4\" }, { \"language\": \"hy\", \"value\": \"Test4\" }, { \"language\": \"arm\", \"value\": \"Test4\" }, { \"language\": \"arme\", \"value\": \"Test4\" }, { \"language\": \"az\", \"value\": \"Test4\" }, { \"language\": \"aze\", \"value\": \"Test4\" }, { \"language\": \"azrb\", \"value\": \"Test4\" }, { \"language\": \"eu\", \"value\": \"Test4\" }, { \"language\": \"baq\", \"value\": \"Test4\" }, { \"language\": \"basq\", \"value\": \"Test4\" }, { \"language\": \"be\", \"value\": \"Test4\" }, { \"language\": \"bel\", \"value\": \"Test4\" }, { \"language\": \"byel\", \"value\": \"Test4\" }, { \"language\": \"bn\", \"value\": \"Test4\" }, { \"language\": \"ben\", \"value\": \"Test4\" }, { \"language\": \"beng\", \"value\": \"Test4\" }, { \"language\": \"bs\", \"value\": \"Test4\" }, { \"language\": \"bos\", \"value\": \"Test4\" }, { \"language\": \"bosn\", \"value\": \"Test4\" }, { \"language\": \"bg\", \"value\": \"Test4\" }, { \"language\": \"bul\", \"value\": \"Test4\" }, { \"language\": \"bulg\", \"value\": \"Test4\" }, { \"language\": \"my\", \"value\": \"Test4\" }, { \"language\": \"bur\", \"value\": \"Test4\" }, { \"language\": \"burm\", \"value\": \"Test4\" }, { \"language\": \"ca\", \"value\": \"Test4\" }, { \"language\": \"cat\", \"value\": \"Test4\" }, { \"language\": \"cata\", \"value\": \"Test4\" }, { \"language\": \"zh\", \"value\": \"Test4\" }, { \"language\": \"chi\", \"value\": \"Test4\" }, { \"language\": \"chin\", \"value\": \"Test4\" }, { \"language\": \"hr\", \"value\": \"Test4\" }, { \"language\": \"hrv\", \"value\": \"Test4\" }, { \"language\": \"croa\", \"value\": \"Test4\" }, { \"language\": \"cs\", \"value\": \"Test4\" }, { \"language\": \"cze\", \"value\": \"Test4\" }, { \"language\": \"czch\", \"value\": \"Test4\" }, { \"language\": \"da\", \"value\": \"Test4\" }, { \"language\": \"dan\", \"value\": \"Test4\" }, { \"language\": \"dans\", \"value\": \"Test4\" }, { \"language\": \"nl\", \"value\": \"Test4\" }, { \"language\": \"dut\", \"value\": \"Test4\" }, { \"language\": \"dutc\", \"value\": \"Test4\" }, { \"language\": \"en\", \"value\": \"Test4\" }, { \"language\": \"eng\", \"value\": \"Test4\" }, { \"language\": \"engl\", \"value\": \"Test4\" }, { \"language\": \"eo\", \"value\": \"Test4\" }, { \"language\": \"epo\", \"value\": \"Test4\" }, { \"language\": \"espe\", \"value\": \"Test4\" }, { \"language\": \"et\", \"value\": \"Test4\" }, { \"language\": \"est\", \"value\": \"Test4\" }, { \"language\": \"esto\", \"value\": \"Test4\" }, { \"language\": \"fi\", \"value\": \"Test4\" }, { \"language\": \"fin\", \"value\": \"Test4\" }, { \"language\": \"finn\", \"value\": \"Test4\" }, { \"language\": \"fr\", \"value\": \"Test4\" }, { \"language\": \"fre\", \"value\": \"Test4\" }, { \"language\": \"fren\", \"value\": \"Test4\" }, { \"language\": \"gl\", \"value\": \"Test4\" }, { \"language\": \"glg\", \"value\": \"Test4\" }, { \"language\": \"gall\", \"value\": \"Test4\" }, { \"language\": \"ka\", \"value\": \"Test4\" }, { \"language\": \"geo\", \"value\": \"Test4\" }, { \"language\": \"geor\", \"value\": \"Test4\" }, { \"language\": \"de\", \"value\": \"Test4\" }, { \"language\": \"ger\", \"value\": \"Test4\" }, { \"language\": \"germ\", \"value\": \"Test4\" }, { \"language\": \"el\", \"value\": \"Test4\" }, { \"language\": \"gre\", \"value\": \"Test4\" }, { \"language\": \"grek\", \"value\": \"Test4\" }, { \"language\": \"he\", \"value\": \"Test4\" }, { \"language\": \"heb\", \"value\": \"Test4\" }, { \"language\": \"hebr\", \"value\": \"Test4\" }, { \"language\": \"hi\", \"value\": \"Test4\" }, { \"language\": \"hin\", \"value\": \"Test4\" }, { \"language\": \"indi\", \"value\": \"Test4\" }, { \"language\": \"hu\", \"value\": \"Test4\" }, { \"language\": \"hun\", \"value\": \"Test4\" }, { \"language\": \"hung\", \"value\": \"Test4\" }, { \"language\": \"is\", \"value\": \"Test4\" }, { \"language\": \"ice\", \"value\": \"Test4\" }, { \"language\": \"icel\", \"value\": \"Test4\" }, { \"language\": \"id\", \"value\": \"Test4\" }, { \"language\": \"ind\", \"value\": \"Test4\" }, { \"language\": \"baha\", \"value\": \"Test4\" }, { \"language\": \"ga\", \"value\": \"Test4\" }, { \"language\": \"gle\", \"value\": \"Test4\" }, { \"language\": \"gael\", \"value\": \"Test4\" }, { \"language\": \"it\", \"value\": \"Test4\" }, { \"language\": \"ita\", \"value\": \"Test4\" }, { \"language\": \"ital\", \"value\": \"Test4\" }, { \"language\": \"ja\", \"value\": \"Test4\" }, { \"language\": \"jpn\", \"value\": \"Test4\" }, { \"language\": \"japa\", \"value\": \"Test4\" }, { \"language\": \"ko\", \"value\": \"Test4\" }, { \"language\": \"kor\", \"value\": \"Test4\" }, { \"language\": \"kora\", \"value\": \"Test4\" }, { \"language\": \"la\", \"value\": \"Test4\" }, { \"language\": \"lat\", \"value\": \"Test4\" }, { \"language\": \"lati\", \"value\": \"Test4\" }, { \"language\": \"lv\", \"value\": \"Test4\" }, { \"language\": \"lav\", \"value\": \"Test4\" }, { \"language\": \"latv\", \"value\": \"Test4\" }, { \"language\": \"lt\", \"value\": \"Test4\" }, { \"language\": \"lit\", \"value\": \"Test4\" }, { \"language\": \"lith\", \"value\": \"Test4\" }, { \"language\": \"mk\", \"value\": \"Test4\" }, { \"language\": \"mac\", \"value\": \"Test4\" }, { \"language\": \"mace\", \"value\": \"Test4\" }, { \"language\": \"ms\", \"value\": \"Test4\" }, { \"language\": \"may\", \"value\": \"Test4\" }, { \"language\": \"mala\", \"value\": \"Test4\" }, { \"language\": \"mi\", \"value\": \"Test4\" }, { \"language\": \"mao\", \"value\": \"Test4\" }, { \"language\": \"maor\", \"value\": \"Test4\" }, { \"language\": \"mn\", \"value\": \"Test4\" }, { \"language\": \"mon\", \"value\": \"Test4\" }, { \"language\": \"mong\", \"value\": \"Test4\" }, { \"language\": \"no\", \"value\": \"Test4\" }, { \"language\": \"nor\", \"value\": \"Test4\" }, { \"language\": \"norw\", \"value\": \"Test4\" }, { \"language\": \"fa\", \"value\": \"Test4\" }, { \"language\": \"per\", \"value\": \"Test4\" }, { \"language\": \"pers\", \"value\": \"Test4\" }, { \"language\": \"pl\", \"value\": \"Test4\" }, { \"language\": \"pol\", \"value\": \"Test4\" }, { \"language\": \"pols\", \"value\": \"Test4\" }, { \"language\": \"xx\", \"value\": \"Test4\" }, { \"language\": \"map\", \"value\": \"Test4\" }, { \"language\": \"poly\", \"value\": \"Test4\" }, { \"language\": \"pt\", \"value\": \"Test4\" }, { \"language\": \"por\", \"value\": \"Test4\" }, { \"language\": \"port\", \"value\": \"Test4\" }, { \"language\": \"ps\", \"value\": \"Test4\" }, { \"language\": \"pus\", \"value\": \"Test4\" }, { \"language\": \"push\", \"value\": \"Test4\" }, { \"language\": \"ro\", \"value\": \"Test4\" }, { \"language\": \"rum\", \"value\": \"Test4\" }, { \"language\": \"ruma\", \"value\": \"Test4\" }, { \"language\": \"ru\", \"value\": \"Test4\" }, { \"language\": \"rus\", \"value\": \"Test4\" }, { \"language\": \"russ\", \"value\": \"Test4\" }, { \"language\": \"gd\", \"value\": \"Test4\" }, { \"language\": \"gla\", \"value\": \"Test4\" }, { \"language\": \"scot\", \"value\": \"Test4\" }, { \"language\": \"sr\", \"value\": \"Test4\" }, { \"language\": \"srp\", \"value\": \"Test4\" }, { \"language\": \"serb\", \"value\": \"Test4\" }, { \"language\": \"si\", \"value\": \"Test4\" }, { \"language\": \"sin\", \"value\": \"Test4\" }, { \"language\": \"sinh\", \"value\": \"Test4\" }, { \"language\": \"sk\", \"value\": \"Test4\" }, { \"language\": \"slo\", \"value\": \"Test4\" }, { \"language\": \"slvk\", \"value\": \"Test4\" }, { \"language\": \"sl\", \"value\": \"Test4\" }, { \"language\": \"slv\", \"value\": \"Test4\" }, { \"language\": \"slvn\", \"value\": \"Test4\" }, { \"language\": \"es\", \"value\": \"Test4\" }, { \"language\": \"spa\", \"value\": \"Test4\" }, { \"language\": \"span\", \"value\": \"Test4\" }, { \"language\": \"sv\", \"value\": \"Test4\" }, { \"language\": \"swe\", \"value\": \"Test4\" }, { \"language\": \"swed\", \"value\": \"Test4\" }, { \"language\": \"tl\", \"value\": \"Test4\" }, { \"language\": \"tgl\", \"value\": \"Test4\" }, { \"language\": \"taga\", \"value\": \"Test4\" }, { \"language\": \"th\", \"value\": \"Test4\" }, { \"language\": \"tha\", \"value\": \"Test4\" }, { \"language\": \"thai\", \"value\": \"Test4\" }, { \"language\": \"tr\", \"value\": \"Test4\" }, { \"language\": \"tur\", \"value\": \"Test4\" }, { \"language\": \"turk\", \"value\": \"Test4\" }, { \"language\": \"uk\", \"value\": \"Test4\" }, { \"language\": \"ukr\", \"value\": \"Test4\" }, { \"language\": \"ukra\", \"value\": \"Test4\" }, { \"language\": \"ur\", \"value\": \"Test4\" }, { \"language\": \"urd\", \"value\": \"Test4\" }, { \"language\": \"urdu\", \"value\": \"Test4\" }, { \"language\": \"uz\", \"value\": \"Test4\" }, { \"language\": \"uzb\", \"value\": \"Test4\" }, { \"language\": \"uzbe\", \"value\": \"Test4\" }, { \"language\": \"vi\", \"value\": \"Test4\" }, { \"language\": \"vie\", \"value\": \"Test4\" }, { \"language\": \"viet\", \"value\": \"Test4\" }, { \"language\": \"ne\", \"value\": \"Test4\" }, { \"language\": \"nep\", \"value\": \"Test4\" }, { \"language\": \"lo\", \"value\": \"Test4\" }, { \"language\": \"lao\", \"value\": \"Test4\" }, { \"language\": \"kaz\", \"value\": \"Test4\" }, { \"language\": \"kk\", \"value\": \"Test4\" }, { \"language\": \"tgk\", \"value\": \"Test4\" }, { \"language\": \"tg\", \"value\": \"Test4\" }, { \"language\": \"kir\", \"value\": \"Test4\" }, { \"language\": \"ky\", \"value\": \"Test4\" }, { \"language\": \"wel\", \"value\": \"Test4\" }, { \"language\": \"cy\", \"value\": \"Test4\" }, { \"language\": \"rum\", \"value\": \"Test4\" }, { \"language\": \"ro\", \"value\": \"Test4\" } ], \"financeType\": \"GOV\", \"activityType\": \"ACADEM\", \"profitabilityType\": \"TRUE\", \"alternateName\": [ { \"language\": \"af\", \"value\": \"TestAlt1\" }, { \"language\": \"af\", \"value\": \"TestAlt2\" }, { \"language\": \"afr\", \"value\": \"TestAlt1\" }, { \"language\": \"afr\", \"value\": \"TestAlt2\" }, { \"language\": \"afrk\", \"value\": \"TestAlt1\" }, { \"language\": \"afrk\", \"value\": \"TestAlt2\" }, { \"language\": \"sq\", \"value\": \"TestAlt1\" }, { \"language\": \"sq\", \"value\": \"TestAlt2\" }, { \"language\": \"alb\", \"value\": \"TestAlt1\" }, { \"language\": \"alb\", \"value\": \"TestAlt2\" }, { \"language\": \"alba\", \"value\": \"TestAlt1\" }, { \"language\": \"alba\", \"value\": \"TestAlt2\" }, { \"language\": \"ar\", \"value\": \"TestAlt1\" }, { \"language\": \"ar\", \"value\": \"TestAlt2\" }, { \"language\": \"ara\", \"value\": \"TestAlt1\" }, { \"language\": \"ara\", \"value\": \"TestAlt2\" }, { \"language\": \"arab\", \"value\": \"TestAlt1\" }, { \"language\": \"arab\", \"value\": \"TestAlt2\" }, { \"language\": \"hy\", \"value\": \"TestAlt1\" }, { \"language\": \"hy\", \"value\": \"TestAlt2\" }, { \"language\": \"arm\", \"value\": \"TestAlt1\" }, { \"language\": \"arm\", \"value\": \"TestAlt2\" }, { \"language\": \"arme\", \"value\": \"TestAlt1\" }, { \"language\": \"arme\", \"value\": \"TestAlt2\" }, { \"language\": \"az\", \"value\": \"TestAlt1\" }, { \"language\": \"az\", \"value\": \"TestAlt2\" }, { \"language\": \"aze\", \"value\": \"TestAlt1\" }, { \"language\": \"aze\", \"value\": \"TestAlt2\" }, { \"language\": \"azrb\", \"value\": \"TestAlt1\" }, { \"language\": \"azrb\", \"value\": \"TestAlt2\" }, { \"language\": \"eu\", \"value\": \"TestAlt1\" }, { \"language\": \"eu\", \"value\": \"TestAlt2\" }, { \"language\": \"baq\", \"value\": \"TestAlt1\" }, { \"language\": \"baq\", \"value\": \"TestAlt2\" }, { \"language\": \"basq\", \"value\": \"TestAlt1\" }, { \"language\": \"basq\", \"value\": \"TestAlt2\" }, { \"language\": \"be\", \"value\": \"TestAlt1\" }, { \"language\": \"be\", \"value\": \"TestAlt2\" }, { \"language\": \"bel\", \"value\": \"TestAlt1\" }, { \"language\": \"bel\", \"value\": \"TestAlt2\" }, { \"language\": \"byel\", \"value\": \"TestAlt1\" }, { \"language\": \"byel\", \"value\": \"TestAlt2\" }, { \"language\": \"bn\", \"value\": \"TestAlt1\" }, { \"language\": \"bn\", \"value\": \"TestAlt2\" }, { \"language\": \"ben\", \"value\": \"TestAlt1\" }, { \"language\": \"ben\", \"value\": \"TestAlt2\" }, { \"language\": \"beng\", \"value\": \"TestAlt1\" }, { \"language\": \"beng\", \"value\": \"TestAlt2\" }, { \"language\": \"bs\", \"value\": \"TestAlt1\" }, { \"language\": \"bs\", \"value\": \"TestAlt2\" }, { \"language\": \"bos\", \"value\": \"TestAlt1\" }, { \"language\": \"bos\", \"value\": \"TestAlt2\" }, { \"language\": \"bosn\", \"value\": \"TestAlt1\" }, { \"language\": \"bosn\", \"value\": \"TestAlt2\" }, { \"language\": \"bg\", \"value\": \"TestAlt1\" }, { \"language\": \"bg\", \"value\": \"TestAlt2\" }, { \"language\": \"bul\", \"value\": \"TestAlt1\" }, { \"language\": \"bul\", \"value\": \"TestAlt2\" }, { \"language\": \"bulg\", \"value\": \"TestAlt1\" }, { \"language\": \"bulg\", \"value\": \"TestAlt2\" }, { \"language\": \"my\", \"value\": \"TestAlt1\" }, { \"language\": \"my\", \"value\": \"TestAlt2\" }, { \"language\": \"bur\", \"value\": \"TestAlt1\" }, { \"language\": \"bur\", \"value\": \"TestAlt2\" }, { \"language\": \"burm\", \"value\": \"TestAlt1\" }, { \"language\": \"burm\", \"value\": \"TestAlt2\" }, { \"language\": \"ca\", \"value\": \"TestAlt1\" }, { \"language\": \"ca\", \"value\": \"TestAlt2\" }, { \"language\": \"cat\", \"value\": \"TestAlt1\" }, { \"language\": \"cat\", \"value\": \"TestAlt2\" }, { \"language\": \"cata\", \"value\": \"TestAlt1\" }, { \"language\": \"cata\", \"value\": \"TestAlt2\" }, { \"language\": \"zh\", \"value\": \"TestAlt1\" }, { \"language\": \"zh\", \"value\": \"TestAlt2\" }, { \"language\": \"chi\", \"value\": \"TestAlt1\" }, { \"language\": \"chi\", \"value\": \"TestAlt2\" }, { \"language\": \"chin\", \"value\": \"TestAlt1\" }, { \"language\": \"chin\", \"value\": \"TestAlt2\" }, { \"language\": \"hr\", \"value\": \"TestAlt1\" }, { \"language\": \"hr\", \"value\": \"TestAlt2\" }, { \"language\": \"hrv\", \"value\": \"TestAlt1\" }, { \"language\": \"hrv\", \"value\": \"TestAlt2\" }, { \"language\": \"croa\", \"value\": \"TestAlt1\" }, { \"language\": \"croa\", \"value\": \"TestAlt2\" }, { \"language\": \"cs\", \"value\": \"TestAlt1\" }, { \"language\": \"cs\", \"value\": \"TestAlt2\" }, { \"language\": \"cze\", \"value\": \"TestAlt1\" }, { \"language\": \"cze\", \"value\": \"TestAlt2\" }, { \"language\": \"czch\", \"value\": \"TestAlt1\" }, { \"language\": \"czch\", \"value\": \"TestAlt2\" }, { \"language\": \"da\", \"value\": \"TestAlt1\" }, { \"language\": \"da\", \"value\": \"TestAlt2\" }, { \"language\": \"dan\", \"value\": \"TestAlt1\" }, { \"language\": \"dan\", \"value\": \"TestAlt2\" }, { \"language\": \"dans\", \"value\": \"TestAlt1\" }, { \"language\": \"dans\", \"value\": \"TestAlt2\" }, { \"language\": \"nl\", \"value\": \"TestAlt1\" }, { \"language\": \"nl\", \"value\": \"TestAlt2\" }, { \"language\": \"dut\", \"value\": \"TestAlt1\" }, { \"language\": \"dut\", \"value\": \"TestAlt2\" }, { \"language\": \"dutc\", \"value\": \"TestAlt1\" }, { \"language\": \"dutc\", \"value\": \"TestAlt2\" }, { \"language\": \"en\", \"value\": \"TestAlt1\" }, { \"language\": \"en\", \"value\": \"TestAlt2\" }, { \"language\": \"eng\", \"value\": \"TestAlt1\" }, { \"language\": \"eng\", \"value\": \"TestAlt2\" }, { \"language\": \"engl\", \"value\": \"TestAlt1\" }, { \"language\": \"engl\", \"value\": \"TestAlt2\" }, { \"language\": \"eo\", \"value\": \"TestAlt1\" }, { \"language\": \"eo\", \"value\": \"TestAlt2\" }, { \"language\": \"epo\", \"value\": \"TestAlt1\" }, { \"language\": \"epo\", \"value\": \"TestAlt2\" }, { \"language\": \"espe\", \"value\": \"TestAlt1\" }, { \"language\": \"espe\", \"value\": \"TestAlt2\" }, { \"language\": \"et\", \"value\": \"TestAlt1\" }, { \"language\": \"et\", \"value\": \"TestAlt2\" }, { \"language\": \"est\", \"value\": \"TestAlt1\" }, { \"language\": \"est\", \"value\": \"TestAlt2\" }, { \"language\": \"esto\", \"value\": \"TestAlt1\" }, { \"language\": \"esto\", \"value\": \"TestAlt2\" }, { \"language\": \"fi\", \"value\": \"TestAlt1\" }, { \"language\": \"fi\", \"value\": \"TestAlt2\" }, { \"language\": \"fin\", \"value\": \"TestAlt1\" }, { \"language\": \"fin\", \"value\": \"TestAlt2\" }, { \"language\": \"finn\", \"value\": \"TestAlt1\" }, { \"language\": \"finn\", \"value\": \"TestAlt2\" }, { \"language\": \"fr\", \"value\": \"TestAlt1\" }, { \"language\": \"fr\", \"value\": \"TestAlt2\" }, { \"language\": \"fre\", \"value\": \"TestAlt1\" }, { \"language\": \"fre\", \"value\": \"TestAlt2\" }, { \"language\": \"fren\", \"value\": \"TestAlt1\" }, { \"language\": \"fren\", \"value\": \"TestAlt2\" }, { \"language\": \"gl\", \"value\": \"TestAlt1\" }, { \"language\": \"gl\", \"value\": \"TestAlt2\" }, { \"language\": \"glg\", \"value\": \"TestAlt1\" }, { \"language\": \"glg\", \"value\": \"TestAlt2\" }, { \"language\": \"gall\", \"value\": \"TestAlt1\" }, { \"language\": \"gall\", \"value\": \"TestAlt2\" }, { \"language\": \"ka\", \"value\": \"TestAlt1\" }, { \"language\": \"ka\", \"value\": \"TestAlt2\" }, { \"language\": \"geo\", \"value\": \"TestAlt1\" }, { \"language\": \"geo\", \"value\": \"TestAlt2\" }, { \"language\": \"geor\", \"value\": \"TestAlt1\" }, { \"language\": \"geor\", \"value\": \"TestAlt2\" }, { \"language\": \"de\", \"value\": \"TestAlt1\" }, { \"language\": \"de\", \"value\": \"TestAlt2\" }, { \"language\": \"ger\", \"value\": \"TestAlt1\" }, { \"language\": \"ger\", \"value\": \"TestAlt2\" }, { \"language\": \"germ\", \"value\": \"TestAlt1\" }, { \"language\": \"germ\", \"value\": \"TestAlt2\" }, { \"language\": \"el\", \"value\": \"TestAlt1\" }, { \"language\": \"el\", \"value\": \"TestAlt2\" }, { \"language\": \"gre\", \"value\": \"TestAlt1\" }, { \"language\": \"gre\", \"value\": \"TestAlt2\" }, { \"language\": \"grek\", \"value\": \"TestAlt1\" }, { \"language\": \"grek\", \"value\": \"TestAlt2\" }, { \"language\": \"he\", \"value\": \"TestAlt1\" }, { \"language\": \"he\", \"value\": \"TestAlt2\" }, { \"language\": \"heb\", \"value\": \"TestAlt1\" }, { \"language\": \"heb\", \"value\": \"TestAlt2\" }, { \"language\": \"hebr\", \"value\": \"TestAlt1\" }, { \"language\": \"hebr\", \"value\": \"TestAlt2\" }, { \"language\": \"hi\", \"value\": \"TestAlt1\" }, { \"language\": \"hi\", \"value\": \"TestAlt2\" }, { \"language\": \"hin\", \"value\": \"TestAlt1\" }, { \"language\": \"hin\", \"value\": \"TestAlt2\" }, { \"language\": \"indi\", \"value\": \"TestAlt1\" }, { \"language\": \"indi\", \"value\": \"TestAlt2\" }, { \"language\": \"hu\", \"value\": \"TestAlt1\" }, { \"language\": \"hu\", \"value\": \"TestAlt2\" }, { \"language\": \"hun\", \"value\": \"TestAlt1\" }, { \"language\": \"hun\", \"value\": \"TestAlt2\" }, { \"language\": \"hung\", \"value\": \"TestAlt1\" }, { \"language\": \"hung\", \"value\": \"TestAlt2\" }, { \"language\": \"is\", \"value\": \"TestAlt1\" }, { \"language\": \"is\", \"value\": \"TestAlt2\" }, { \"language\": \"ice\", \"value\": \"TestAlt1\" }, { \"language\": \"ice\", \"value\": \"TestAlt2\" }, { \"language\": \"icel\", \"value\": \"TestAlt1\" }, { \"language\": \"icel\", \"value\": \"TestAlt2\" }, { \"language\": \"id\", \"value\": \"TestAlt1\" }, { \"language\": \"id\", \"value\": \"TestAlt2\" }, { \"language\": \"ind\", \"value\": \"TestAlt1\" }, { \"language\": \"ind\", \"value\": \"TestAlt2\" }, { \"language\": \"baha\", \"value\": \"TestAlt1\" }, { \"language\": \"baha\", \"value\": \"TestAlt2\" }, { \"language\": \"ga\", \"value\": \"TestAlt1\" }, { \"language\": \"ga\", \"value\": \"TestAlt2\" }, { \"language\": \"gle\", \"value\": \"TestAlt1\" }, { \"language\": \"gle\", \"value\": \"TestAlt2\" }, { \"language\": \"gael\", \"value\": \"TestAlt1\" }, { \"language\": \"gael\", \"value\": \"TestAlt2\" }, { \"language\": \"it\", \"value\": \"TestAlt1\" }, { \"language\": \"it\", \"value\": \"TestAlt2\" }, { \"language\": \"ita\", \"value\": \"TestAlt1\" }, { \"language\": \"ita\", \"value\": \"TestAlt2\" }, { \"language\": \"ital\", \"value\": \"TestAlt1\" }, { \"language\": \"ital\", \"value\": \"TestAlt2\" }, { \"language\": \"ja\", \"value\": \"TestAlt1\" }, { \"language\": \"ja\", \"value\": \"TestAlt2\" }, { \"language\": \"jpn\", \"value\": \"TestAlt1\" }, { \"language\": \"jpn\", \"value\": \"TestAlt2\" }, { \"language\": \"japa\", \"value\": \"TestAlt1\" }, { \"language\": \"japa\", \"value\": \"TestAlt2\" }, { \"language\": \"ko\", \"value\": \"TestAlt1\" }, { \"language\": \"ko\", \"value\": \"TestAlt2\" }, { \"language\": \"kor\", \"value\": \"TestAlt1\" }, { \"language\": \"kor\", \"value\": \"TestAlt2\" }, { \"language\": \"kora\", \"value\": \"TestAlt1\" }, { \"language\": \"kora\", \"value\": \"TestAlt2\" }, { \"language\": \"la\", \"value\": \"TestAlt1\" }, { \"language\": \"la\", \"value\": \"TestAlt2\" }, { \"language\": \"lat\", \"value\": \"TestAlt1\" }, { \"language\": \"lat\", \"value\": \"TestAlt2\" }, { \"language\": \"lati\", \"value\": \"TestAlt1\" }, { \"language\": \"lati\", \"value\": \"TestAlt2\" }, { \"language\": \"lv\", \"value\": \"TestAlt1\" }, { \"language\": \"lv\", \"value\": \"TestAlt2\" }, { \"language\": \"lav\", \"value\": \"TestAlt1\" }, { \"language\": \"lav\", \"value\": \"TestAlt2\" }, { \"language\": \"latv\", \"value\": \"TestAlt1\" }, { \"language\": \"latv\", \"value\": \"TestAlt2\" }, { \"language\": \"lt\", \"value\": \"TestAlt1\" }, { \"language\": \"lt\", \"value\": \"TestAlt2\" }, { \"language\": \"lit\", \"value\": \"TestAlt1\" }, { \"language\": \"lit\", \"value\": \"TestAlt2\" }, { \"language\": \"lith\", \"value\": \"TestAlt1\" }, { \"language\": \"lith\", \"value\": \"TestAlt2\" }, { \"language\": \"mk\", \"value\": \"TestAlt1\" }, { \"language\": \"mk\", \"value\": \"TestAlt2\" }, { \"language\": \"mac\", \"value\": \"TestAlt1\" }, { \"language\": \"mac\", \"value\": \"TestAlt2\" }, { \"language\": \"mace\", \"value\": \"TestAlt1\" }, { \"language\": \"mace\", \"value\": \"TestAlt2\" }, { \"language\": \"ms\", \"value\": \"TestAlt1\" }, { \"language\": \"ms\", \"value\": \"TestAlt2\" }, { \"language\": \"may\", \"value\": \"TestAlt1\" }, { \"language\": \"may\", \"value\": \"TestAlt2\" }, { \"language\": \"mala\", \"value\": \"TestAlt1\" }, { \"language\": \"mala\", \"value\": \"TestAlt2\" }, { \"language\": \"mi\", \"value\": \"TestAlt1\" }, { \"language\": \"mi\", \"value\": \"TestAlt2\" }, { \"language\": \"mao\", \"value\": \"TestAlt1\" }, { \"language\": \"mao\", \"value\": \"TestAlt2\" }, { \"language\": \"maor\", \"value\": \"TestAlt1\" }, { \"language\": \"maor\", \"value\": \"TestAlt2\" }, { \"language\": \"mn\", \"value\": \"TestAlt1\" }, { \"language\": \"mn\", \"value\": \"TestAlt2\" }, { \"language\": \"mon\", \"value\": \"TestAlt1\" }, { \"language\": \"mon\", \"value\": \"TestAlt2\" }, { \"language\": \"mong\", \"value\": \"TestAlt1\" }, { \"language\": \"mong\", \"value\": \"TestAlt2\" }, { \"language\": \"no\", \"value\": \"TestAlt1\" }, { \"language\": \"no\", \"value\": \"TestAlt2\" }, { \"language\": \"nor\", \"value\": \"TestAlt1\" }, { \"language\": \"nor\", \"value\": \"TestAlt2\" }, { \"language\": \"norw\", \"value\": \"TestAlt1\" }, { \"language\": \"norw\", \"value\": \"TestAlt2\" }, { \"language\": \"fa\", \"value\": \"TestAlt1\" }, { \"language\": \"fa\", \"value\": \"TestAlt2\" }, { \"language\": \"per\", \"value\": \"TestAlt1\" }, { \"language\": \"per\", \"value\": \"TestAlt2\" }, { \"language\": \"pers\", \"value\": \"TestAlt1\" }, { \"language\": \"pers\", \"value\": \"TestAlt2\" }, { \"language\": \"pl\", \"value\": \"TestAlt1\" }, { \"language\": \"pl\", \"value\": \"TestAlt2\" }, { \"language\": \"pol\", \"value\": \"TestAlt1\" }, { \"language\": \"pol\", \"value\": \"TestAlt2\" }, { \"language\": \"pols\", \"value\": \"TestAlt1\" }, { \"language\": \"pols\", \"value\": \"TestAlt2\" }, { \"language\": \"xx\", \"value\": \"TestAlt1\" }, { \"language\": \"xx\", \"value\": \"TestAlt2\" }, { \"language\": \"map\", \"value\": \"TestAlt1\" }, { \"language\": \"map\", \"value\": \"TestAlt2\" }, { \"language\": \"poly\", \"value\": \"TestAlt1\" }, { \"language\": \"poly\", \"value\": \"TestAlt2\" }, { \"language\": \"pt\", \"value\": \"TestAlt1\" }, { \"language\": \"pt\", \"value\": \"TestAlt2\" }, { \"language\": \"por\", \"value\": \"TestAlt1\" }, { \"language\": \"por\", \"value\": \"TestAlt2\" }, { \"language\": \"port\", \"value\": \"TestAlt1\" }, { \"language\": \"port\", \"value\": \"TestAlt2\" }, { \"language\": \"ps\", \"value\": \"TestAlt1\" }, { \"language\": \"ps\", \"value\": \"TestAlt2\" }, { \"language\": \"pus\", \"value\": \"TestAlt1\" }, { \"language\": \"pus\", \"value\": \"TestAlt2\" }, { \"language\": \"push\", \"value\": \"TestAlt1\" }, { \"language\": \"push\", \"value\": \"TestAlt2\" }, { \"language\": \"ro\", \"value\": \"TestAlt1\" }, { \"language\": \"ro\", \"value\": \"TestAlt2\" }, { \"language\": \"rum\", \"value\": \"TestAlt1\" }, { \"language\": \"rum\", \"value\": \"TestAlt2\" }, { \"language\": \"ruma\", \"value\": \"TestAlt1\" }, { \"language\": \"ruma\", \"value\": \"TestAlt2\" }, { \"language\": \"ru\", \"value\": \"TestAlt1\" }, { \"language\": \"ru\", \"value\": \"TestAlt2\" }, { \"language\": \"rus\", \"value\": \"TestAlt1\" }, { \"language\": \"rus\", \"value\": \"TestAlt2\" }, { \"language\": \"russ\", \"value\": \"TestAlt1\" }, { \"language\": \"russ\", \"value\": \"TestAlt2\" }, { \"language\": \"gd\", \"value\": \"TestAlt1\" }, { \"language\": \"gd\", \"value\": \"TestAlt2\" }, { \"language\": \"gla\", \"value\": \"TestAlt1\" }, { \"language\": \"gla\", \"value\": \"TestAlt2\" }, { \"language\": \"scot\", \"value\": \"TestAlt1\" }, { \"language\": \"scot\", \"value\": \"TestAlt2\" }, { \"language\": \"sr\", \"value\": \"TestAlt1\" }, { \"language\": \"sr\", \"value\": \"TestAlt2\" }, { \"language\": \"srp\", \"value\": \"TestAlt1\" }, { \"language\": \"srp\", \"value\": \"TestAlt2\" }, { \"language\": \"serb\", \"value\": \"TestAlt1\" }, { \"language\": \"serb\", \"value\": \"TestAlt2\" }, { \"language\": \"si\", \"value\": \"TestAlt1\" }, { \"language\": \"si\", \"value\": \"TestAlt2\" }, { \"language\": \"sin\", \"value\": \"TestAlt1\" }, { \"language\": \"sin\", \"value\": \"TestAlt2\" }, { \"language\": \"sinh\", \"value\": \"TestAlt1\" }, { \"language\": \"sinh\", \"value\": \"TestAlt2\" }, { \"language\": \"sk\", \"value\": \"TestAlt1\" }, { \"language\": \"sk\", \"value\": \"TestAlt2\" }, { \"language\": \"slo\", \"value\": \"TestAlt1\" }, { \"language\": \"slo\", \"value\": \"TestAlt2\" }, { \"language\": \"slvk\", \"value\": \"TestAlt1\" }, { \"language\": \"slvk\", \"value\": \"TestAlt2\" }, { \"language\": \"sl\", \"value\": \"TestAlt1\" }, { \"language\": \"sl\", \"value\": \"TestAlt2\" }, { \"language\": \"slv\", \"value\": \"TestAlt1\" }, { \"language\": \"slv\", \"value\": \"TestAlt2\" }, { \"language\": \"slvn\", \"value\": \"TestAlt1\" }, { \"language\": \"slvn\", \"value\": \"TestAlt2\" }, { \"language\": \"es\", \"value\": \"TestAlt1\" }, { \"language\": \"es\", \"value\": \"TestAlt2\" }, { \"language\": \"spa\", \"value\": \"TestAlt1\" }, { \"language\": \"spa\", \"value\": \"TestAlt2\" }, { \"language\": \"span\", \"value\": \"TestAlt1\" }, { \"language\": \"span\", \"value\": \"TestAlt2\" }, { \"language\": \"sv\", \"value\": \"TestAlt1\" }, { \"language\": \"sv\", \"value\": \"TestAlt2\" }, { \"language\": \"swe\", \"value\": \"TestAlt1\" }, { \"language\": \"swe\", \"value\": \"TestAlt2\" }, { \"language\": \"swed\", \"value\": \"TestAlt1\" }, { \"language\": \"swed\", \"value\": \"TestAlt2\" }, { \"language\": \"tl\", \"value\": \"TestAlt1\" }, { \"language\": \"tl\", \"value\": \"TestAlt2\" }, { \"language\": \"tgl\", \"value\": \"TestAlt1\" }, { \"language\": \"tgl\", \"value\": \"TestAlt2\" }, { \"language\": \"taga\", \"value\": \"TestAlt1\" }, { \"language\": \"taga\", \"value\": \"TestAlt2\" }, { \"language\": \"th\", \"value\": \"TestAlt1\" }, { \"language\": \"th\", \"value\": \"TestAlt2\" }, { \"language\": \"tha\", \"value\": \"TestAlt1\" }, { \"language\": \"tha\", \"value\": \"TestAlt2\" }, { \"language\": \"thai\", \"value\": \"TestAlt1\" }, { \"language\": \"thai\", \"value\": \"TestAlt2\" }, { \"language\": \"tr\", \"value\": \"TestAlt1\" }, { \"language\": \"tr\", \"value\": \"TestAlt2\" }, { \"language\": \"tur\", \"value\": \"TestAlt1\" }, { \"language\": \"tur\", \"value\": \"TestAlt2\" }, { \"language\": \"turk\", \"value\": \"TestAlt1\" }, { \"language\": \"turk\", \"value\": \"TestAlt2\" }, { \"language\": \"uk\", \"value\": \"TestAlt1\" }, { \"language\": \"uk\", \"value\": \"TestAlt2\" }, { \"language\": \"ukr\", \"value\": \"TestAlt1\" }, { \"language\": \"ukr\", \"value\": \"TestAlt2\" }, { \"language\": \"ukra\", \"value\": \"TestAlt1\" }, { \"language\": \"ukra\", \"value\": \"TestAlt2\" }, { \"language\": \"ur\", \"value\": \"TestAlt1\" }, { \"language\": \"ur\", \"value\": \"TestAlt2\" }, { \"language\": \"urd\", \"value\": \"TestAlt1\" }, { \"language\": \"urd\", \"value\": \"TestAlt2\" }, { \"language\": \"urdu\", \"value\": \"TestAlt1\" }, { \"language\": \"urdu\", \"value\": \"TestAlt2\" }, { \"language\": \"uz\", \"value\": \"TestAlt1\" }, { \"language\": \"uz\", \"value\": \"TestAlt2\" }, { \"language\": \"uzb\", \"value\": \"TestAlt1\" }, { \"language\": \"uzb\", \"value\": \"TestAlt2\" }, { \"language\": \"uzbe\", \"value\": \"TestAlt1\" }, { \"language\": \"uzbe\", \"value\": \"TestAlt2\" }, { \"language\": \"vi\", \"value\": \"TestAlt1\" }, { \"language\": \"vi\", \"value\": \"TestAlt2\" }, { \"language\": \"vie\", \"value\": \"TestAlt1\" }, { \"language\": \"vie\", \"value\": \"TestAlt2\" }, { \"language\": \"viet\", \"value\": \"TestAlt1\" }, { \"language\": \"viet\", \"value\": \"TestAlt2\" }, { \"language\": \"ne\", \"value\": \"TestAlt1\" }, { \"language\": \"ne\", \"value\": \"TestAlt2\" }, { \"language\": \"nep\", \"value\": \"TestAlt1\" }, { \"language\": \"nep\", \"value\": \"TestAlt2\" }, { \"language\": \"lo\", \"value\": \"TestAlt1\" }, { \"language\": \"lo\", \"value\": \"TestAlt2\" }, { \"language\": \"lao\", \"value\": \"TestAlt1\" }, { \"language\": \"lao\", \"value\": \"TestAlt2\" }, { \"language\": \"kaz\", \"value\": \"TestAlt1\" }, { \"language\": \"kaz\", \"value\": \"TestAlt2\" }, { \"language\": \"kk\", \"value\": \"TestAlt1\" }, { \"language\": \"kk\", \"value\": \"TestAlt2\" }, { \"language\": \"tgk\", \"value\": \"TestAlt1\" }, { \"language\": \"tgk\", \"value\": \"TestAlt2\" }, { \"language\": \"tg\", \"value\": \"TestAlt1\" }, { \"language\": \"tg\", \"value\": \"TestAlt2\" }, { \"language\": \"kir\", \"value\": \"TestAlt1\" }, { \"language\": \"kir\", \"value\": \"TestAlt2\" }, { \"language\": \"ky\", \"value\": \"TestAlt1\" }, { \"language\": \"ky\", \"value\": \"TestAlt2\" }, { \"language\": \"wel\", \"value\": \"TestAlt1\" }, { \"language\": \"wel\", \"value\": \"TestAlt2\" }, { \"language\": \"cy\", \"value\": \"TestAlt1\" }, { \"language\": \"cy\", \"value\": \"TestAlt2\" }, { \"language\": \"rum\", \"value\": \"TestAlt1\" }, { \"language\": \"rum\", \"value\": \"TestAlt2\" }, { \"language\": \"ro\", \"value\": \"TestAlt1\" }, { \"language\": \"ro\", \"value\": \"TestAlt2\" } ], \"country\": \"afg\", \"state\": \"DELHI\", \"identifier\": [ { \"value\": \"5000000012514\" }, { \"type\": \"GRID\", \"value\": \"50000000125141\" } ], \"description\": [ { \"abstract\": { \"language\": \"en\" }, \"source\": \"www.aptara.com/aptara\" }, { \"abstract\": { \"language\": \"en\" }, \"source\": \"http://www.arcticnet.ulaval.ca/\" } ], \"awardSuccessRate\": { \"percentage\": 100 }, \"establishment\": { \"description\": [ { \"source\": \"https://arcticnet.ulaval.ca/\" } ] }, \"contactInformation\": { \"link\": \"https://arcticnet.ulaval.ca/\", \"hasPostalAddress\": { \"addressRegion\": \"Uttar Pradesh\", \"addressLocality\": \"Noida\", \"addressPostalCode\": \"201301\", \"postOfficeBoxNumber\": \"39\", \"streetAddress\": \"Gali 3\" } }, \"hasProvenance\": { \"contactPoint\": \"fundingprojectteam@aptaracorp.com\", \"createdOn\": \"27-08-2020 20:14:06\", \"defunct\": false, \"derivedFrom\": \"https://arcticnet.ulaval.ca/\", \"hidden\": false, \"lastUpdateOn\": \"27-08-2020 20:14:06\", \"version\": \"1\", \"wasAttributedTo\": \"SUP002\" }}','51','04-09-2020 18:38:06','','',NULL);
/*!40000 ALTER TABLE `fundingbody_main` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `fundingbody_master`
--

DROP TABLE IF EXISTS `fundingbody_master`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `fundingbody_master` (
  `FUNDINGBODY_ID` bigint(20) NOT NULL,
  `FUNDINGBODYNAME` varchar(2000) DEFAULT '',
  `URL` varchar(2000) NOT NULL DEFAULT '',
  `CREATEDDATE` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `CREATEDBY` bigint(20) DEFAULT NULL,
  `CYCLECOMPLETIONDATE` datetime DEFAULT NULL,
  `CYCLECOMPLETEDBY` bigint(20) DEFAULT NULL,
  `LASTUPDATEDDATE` datetime DEFAULT NULL,
  `LASTUPDATEDBY` bigint(20) DEFAULT NULL,
  `CYCLE` bigint(20) DEFAULT NULL,
  `STATUSCODE` bigint(20) DEFAULT NULL,
  `RUSH` bigint(20) DEFAULT NULL,
  `RUSHBY` bigint(20) DEFAULT NULL,
  `ALLOCATIONMODE` varchar(2000) DEFAULT '',
  `ISOPORTUNITY` varchar(2000) DEFAULT '',
  `COUNTRY` varchar(2000) DEFAULT '',
  `DUEDATE` datetime DEFAULT NULL,
  `ISVIEWED` varchar(1) DEFAULT '',
  `BATCHNO` bigint(20) DEFAULT NULL,
  `BATCHRECIEVEDATE` datetime DEFAULT NULL,
  `SUBTYPE` varchar(2000) DEFAULT '',
  `HIDDEN_FLAG` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`FUNDINGBODY_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `fundingbody_master`
--

LOCK TABLES `fundingbody_master` WRITE;
/*!40000 ALTER TABLE `fundingbody_master` DISABLE KEYS */;
INSERT INTO `fundingbody_master` VALUES (111111111111,'Test','NA','2014-04-12 04:42:05',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0),(501100000001,'Alberta Cancer Foundation ','https://albertacancer.ca/sslpage.aspx?pid=882','2011-04-14 00:36:22',51,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:22','pri',0),(501100000002,'Alberta Centre for Child, Family and Community Research','http://www.research4children.com','2011-04-14 00:36:23',51,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','pri',0),(501100000003,'Test3','http://www.arcticnet.ulaval.ca/','2011-04-14 00:36:23',51,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','pri',0),(501100000004,'Asia Pacific Foundation of Canada','http://www.asiapacific.ca/grants','2011-04-14 00:36:23',51,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','pri',0),(501100000005,'Association for Canadian Studies in the United States ','http://www.acsus.org/display.cfm?id=274&Sub=307','2011-04-14 00:36:23',51,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','pri',0),(501100000006,'Association of Medical Microbiology and Infectious Disease Canada ','http://www.ammi.ca/index.php','2011-04-14 00:36:23',51,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','pri',0),(501100000007,'Canadian Aeronautics and Space Institute','http://www.casi.ca/cdhoweaward.aspx','2011-04-14 00:36:23',51,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','pri',0),(501100000008,'Health Canada','http://www.hc-sc.gc.ca/sr-sr/finance/index-eng.php','2011-04-14 00:36:23',51,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000009,'501100000009','http://www.casa-acea.ca/','2011-04-14 00:36:23',51,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','pri',0),(501100000011,'TestOrf','http://www.cagacg.ca/awards/700_e.php','2011-04-14 00:36:23',51,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','pri',0),(501100000012,'Canadian Astronomical Society','http://www.casca.ca/search.php?query=funding&search=1','2011-04-14 00:36:23',51,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','pri',0),(501100000013,'The Canadian Bar Association','http://www.cba.org/CBA/LFFF/main/apply.aspx','2011-04-14 00:36:23',51,NULL,NULL,NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','pri',0),(501100000014,'Canadian Blood Services','http://www.blood.ca/CentreApps/Internet/UW_V502_MainEngine.nsf/page/Home?OpenDocument&CloseMenu','2011-04-14 00:36:23',51,NULL,NULL,NULL,NULL,3,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','pri',0),(501100000015,'Canadian Cancer Society Research Institute','http://www.cancer.ca','2011-04-14 00:36:23',51,NULL,NULL,NULL,NULL,6,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','pri',0),(501100000016,'Canadian Space Agency','http://www.asc-csa.gc.ca/eng/default.asp','2011-04-14 00:36:23',51,NULL,NULL,NULL,NULL,4,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000017,'Canadian Heritage','http://www.pch.gc.ca/eng/1267644605967/1268411954320/s/q.s?S_SEARCH.language=eng&templateId=2&S_SFC.value=001&S_SEARCH.parametricFields=PCH_BREADCRUMB&S_USES_PARAMETRIC.value=true','2011-04-14 00:36:23',51,NULL,NULL,NULL,NULL,4,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000018,'The College of Family Physicians of Canada','http://www.cfpc.ca/Family_Medicine_Researcher_of_the_Year_Award/','2011-04-14 00:36:23',51,NULL,NULL,NULL,NULL,4,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','pri',0),(501100000019,'Crohn\'s and Colitis Foundation of Canada ','http://www.ccfc.ca/site/c.ajIRK4NLLhJ0E/b.6326399/k.4BD2/Opportunities_For_Researchers.htm#grants-in-aid-of-research','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,3,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','pri',0),(501100000020,'Fields Institute for Research in Mathematical Sciences','http://www.fields.utoronto.ca/aboutus/prizes_and_honours.html','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,5,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','pri',0),(501100000021,'The Elizabeth Greenshields Foundation','http://www.elizabethgreenshieldsfoundation.org/main.html','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,3,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','pri',0),(501100000022,'Institute for Work and Health','http://www.iwh.on.ca/','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,4,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','pri',0),(501100000023,'Government of Canada','http://www.canada.gc.ca/home.html','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,6,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000024,'Canadian Institutes of Health Research','http://www.cihr-irsc.gc.ca/e/193.html','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,6,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000025,'Institute of Aboriginal Peoples Health ','http://www.cihr-irsc.gc.ca/e/8668.html','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,5,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000026,'Institute of Aging ','http://www.cihr-irsc.gc.ca/e/8671.html','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,4,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000027,'Institute of Cancer Research *****Deleted For New One*****','http://www.cihr-irsc.gc.ca/e/12506.html*****Deleted For New One*****','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,5,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000028,'Institute of Circulatory and Respiratory Health ','http://www.cihr-irsc.gc.ca/e/8663.html','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,4,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000029,'Institute of Gender and Health ','http://www.cihr-irsc.gc.ca/e/8673.html','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,3,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000030,'Institute of Genetics ','http://www.cihr-irsc.gc.ca/e/13147.html','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,4,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000031,'gfgfg','http://www.cihr-irsc.gc.ca/e/8688.html','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,4,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000032,'Institute of Infection and Immunity ','http://www.cihr-irsc.gc.ca/e/13533.html','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,4,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000033,'kjkh','http://www.cihr-irsc.gc.ca/e/13217.html','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,4,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000034,'Institute of Neurosciences, Mental Health and Addiction ','http://www.cihr-irsc.gc.ca/e/8602.html','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,4,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000035,'Institute of Nutrition, Metabolism and Diabetes ','http://www.cihr-irsc.gc.ca/e/13521.html','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,4,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000036,'Institute of Population and Public Health','http://www.cihr-irsc.gc.ca/e/13777.html','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,4,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000037,'Institute of Health Services and Policy Research','http://www.cihr-irsc.gc.ca/e/13733.html','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,6,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000038,NULL,'http://www.nserc-crsng.gc.ca/index_eng.asp','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,6,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000039,'Environment Canada','http://www.ec.gc.ca/default.asp?lang=En&n=FD9B0E51-1','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,5,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000040,'Agriculture and Agri-Food Canada','http://www.agr.gc.ca/index_e.php','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,5,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000041,'Fisheries and Oceans Canada','http://www.dfo-mpo.gc.ca/index-eng.htm','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,3,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000042,'Status of Women Canada','http://www.swc-cfc.gc.ca/index-eng.html','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,4,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000043,'Foreign Affairs and International Trade Canada','http://www.international.gc.ca/international/index.aspx?lang=eng','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,4,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000044,'Human Resources and Skills Development Canada','http://www.hrsdc.gc.ca/eng/home.shtml','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,4,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000045,'Western Economic Diversification Canada ','http://www.wd-deo.gc.ca/eng/home.asp','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,5,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000046,'National Research Council Canada','http://www.nrc-cnrc.gc.ca/eng/about/index.html','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,4,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000047,'Aboriginal Affairs and Northern Development Canada','http://www.ainc-inac.gc.ca/index-eng.asp','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,5,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000048,'Canada Economic Development for Quebec Regions','http://www.dec-ced.gc.ca/eng/index.html','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,4,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','gov',0),(501100000049,'Ontario Neurotrauma Foundation ','http://www.onf.org/','2011-04-14 00:36:23',1,NULL,NULL,NULL,NULL,3,NULL,NULL,NULL,NULL,NULL,'CAN','2011-04-13 00:00:00',NULL,1,'2011-04-12 17:36:23','pri',0);
/*!40000 ALTER TABLE `fundingbody_master` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `fundingbodyamount`
--

DROP TABLE IF EXISTS `fundingbodyamount`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `fundingbodyamount` (
  `AMOUNT` decimal(20,2) NOT NULL,
  `CURRENCY` varchar(50) DEFAULT '',
  `RELEATEDFUNDINGBODIES_ID` bigint(20) NOT NULL,
  `CREATED_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`RELEATEDFUNDINGBODIES_ID`,`AMOUNT`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `fundingbodyamount`
--

LOCK TABLES `fundingbodyamount` WRITE;
/*!40000 ALTER TABLE `fundingbodyamount` DISABLE KEYS */;
/*!40000 ALTER TABLE `fundingbodyamount` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `fundingbodydataset`
--

DROP TABLE IF EXISTS `fundingbodydataset`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `fundingbodydataset` (
  `FB_SOURCE_ID` decimal(38,0) DEFAULT NULL,
  `URL` varchar(500) DEFAULT NULL,
  `STATUS` varchar(50) DEFAULT NULL,
  `LASTVISITED` datetime DEFAULT NULL,
  `FUNDINGBODY_ID` decimal(38,0) DEFAULT NULL,
  `CREATED_DATE` datetime DEFAULT NULL,
  `LANG` varchar(25) DEFAULT NULL,
  `FREQUENCY` varchar(200) DEFAULT NULL,
  `CAPTURESTART` datetime DEFAULT NULL,
  `CAPTUREEND` datetime DEFAULT NULL,
  `NAME` longtext,
  `FB_COMMENT` longtext
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `fundingbodydataset`
--

LOCK TABLES `fundingbodydataset` WRITE;
/*!40000 ALTER TABLE `fundingbodydataset` DISABLE KEYS */;
/*!40000 ALTER TABLE `fundingbodydataset` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `fundingpolicy`
--

DROP TABLE IF EXISTS `fundingpolicy`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `fundingpolicy` (
  `FUNDINGPOLICY_ID` bigint(20) NOT NULL,
  `FUNDINGBODY_ID` bigint(20) DEFAULT NULL,
  `OPPORTUNITY_ID` bigint(20) DEFAULT NULL,
  `CREATED_DATE` datetime DEFAULT NULL,
  PRIMARY KEY (`FUNDINGPOLICY_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `fundingpolicy`
--

LOCK TABLES `fundingpolicy` WRITE;
/*!40000 ALTER TABLE `fundingpolicy` DISABLE KEYS */;
INSERT INTO `fundingpolicy` VALUES (1,501100000003,NULL,'2020-08-27 20:14:06'),(2,501100000009,NULL,'2020-08-27 20:14:06');
/*!40000 ALTER TABLE `fundingpolicy` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `identifier`
--

DROP TABLE IF EXISTS `identifier`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `identifier` (
  `TYPE` varchar(200) DEFAULT NULL,
  `VALUE` longtext,
  `FUNDINGBODY_ID` decimal(20,0) DEFAULT NULL,
  `IDENTIFIER_ID` decimal(20,0) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `identifier`
--

LOCK TABLES `identifier` WRITE;
/*!40000 ALTER TABLE `identifier` DISABLE KEYS */;
INSERT INTO `identifier` VALUES ('','5000000012514',501100000003,NULL),('GRID','50000000125141',501100000003,NULL);
/*!40000 ALTER TABLE `identifier` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `installment`
--

DROP TABLE IF EXISTS `installment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `installment` (
  `INSTALLMENTANDAMOUNT_ID` bigint(20) NOT NULL,
  `INSTALLMENTSTART_DATE` datetime DEFAULT NULL,
  `INSTALLMENTEND_DATE` datetime DEFAULT NULL,
  `AMOUNT` decimal(10,2) DEFAULT NULL,
  `CURRENCY` varchar(50) DEFAULT '',
  `CREATED_DATE` datetime DEFAULT NULL,
  `SEQUENCE_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`INSTALLMENTANDAMOUNT_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `installment`
--

LOCK TABLES `installment` WRITE;
/*!40000 ALTER TABLE `installment` DISABLE KEYS */;
/*!40000 ALTER TABLE `installment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `instalmentandamount`
--

DROP TABLE IF EXISTS `instalmentandamount`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `instalmentandamount` (
  `INSTALLMENTANDAMOUNT_ID` bigint(20) NOT NULL,
  `AWARD_ID` bigint(20) NOT NULL,
  `CREATED_DATE` datetime DEFAULT NULL,
  PRIMARY KEY (`INSTALLMENTANDAMOUNT_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `instalmentandamount`
--

LOCK TABLES `instalmentandamount` WRITE;
/*!40000 ALTER TABLE `instalmentandamount` DISABLE KEYS */;
/*!40000 ALTER TABLE `instalmentandamount` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `item`
--

DROP TABLE IF EXISTS `item`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `item` (
  `RELTYPE` varchar(2000) DEFAULT NULL,
  `DESCRIPTION` blob,
  `ITEM_ID` decimal(20,0) NOT NULL,
  `GEOSCOPE_ID` decimal(20,0) DEFAULT NULL,
  `APPINFO_ID` decimal(20,0) DEFAULT NULL,
  `ABOUT_ID` decimal(20,0) DEFAULT NULL,
  `RELATEDITEMS_ID` decimal(20,0) DEFAULT NULL,
  `SYNOPSIS_ID` decimal(20,0) DEFAULT NULL,
  `SUBJECTMATTER_ID` decimal(20,0) DEFAULT NULL,
  `LANG` varchar(50) DEFAULT NULL,
  `FUNDINGPOLICY_ID` decimal(20,0) DEFAULT NULL,
  `ELIGIBILITYDESCRIPTION_ID` decimal(20,0) DEFAULT NULL,
  `ESTIMATEDAMOUNTDESCRIPTION_ID` decimal(20,0) DEFAULT NULL,
  `LIMITEDSUBMISSIONDESC_ID` decimal(20,0) DEFAULT NULL,
  `CREATED_DATE` datetime DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`ITEM_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `item`
--

LOCK TABLES `item` WRITE;
/*!40000 ALTER TABLE `item` DISABLE KEYS */;
INSERT INTO `item` VALUES (NULL,NULL,1,NULL,NULL,1,1,1,1,'en',1,1,1,1,'2020-08-27 20:14:06'),('',_binary 'vv',2,NULL,NULL,2,2,2,2,'fi',2,2,2,2,'2020-07-27 00:57:58');
/*!40000 ALTER TABLE `item` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `keyword`
--

DROP TABLE IF EXISTS `keyword`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `keyword` (
  `KEYWORD_COLUMN` varchar(2000) DEFAULT '',
  `KEYWORDS_ID` bigint(20) NOT NULL,
  `LANG` varchar(50) DEFAULT '',
  PRIMARY KEY (`KEYWORDS_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `keyword`
--

LOCK TABLES `keyword` WRITE;
/*!40000 ALTER TABLE `keyword` DISABLE KEYS */;
INSERT INTO `keyword` VALUES ('KEY',1,'HINDI');
/*!40000 ALTER TABLE `keyword` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `keywords`
--

DROP TABLE IF EXISTS `keywords`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `keywords` (
  `KEYWORDS_ID` bigint(20) NOT NULL,
  `FUNDINGBODY_ID` bigint(20) DEFAULT NULL,
  `OPPORTUNITY_ID` bigint(20) DEFAULT NULL,
  `AWARD_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`KEYWORDS_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `keywords`
--

LOCK TABLES `keywords` WRITE;
/*!40000 ALTER TABLE `keywords` DISABLE KEYS */;
INSERT INTO `keywords` VALUES (1,501100000003,NULL,NULL);
/*!40000 ALTER TABLE `keywords` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `limitedsubmissiondescription`
--

DROP TABLE IF EXISTS `limitedsubmissiondescription`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `limitedsubmissiondescription` (
  `LIMITEDSUBMISSIONDESC_ID` bigint(20) NOT NULL,
  `OPPORTUNITY_ID` bigint(20) DEFAULT NULL,
  `CREATED_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`LIMITEDSUBMISSIONDESC_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `limitedsubmissiondescription`
--

LOCK TABLES `limitedsubmissiondescription` WRITE;
/*!40000 ALTER TABLE `limitedsubmissiondescription` DISABLE KEYS */;
/*!40000 ALTER TABLE `limitedsubmissiondescription` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `link`
--

DROP TABLE IF EXISTS `link`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `link` (
  `URL` varchar(2000) NOT NULL DEFAULT '',
  `LINK_TEXT` varchar(2000) NOT NULL DEFAULT '',
  `ITEM_ID` bigint(20) DEFAULT NULL,
  `AWARDSTATISTICS_ID` bigint(20) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `link`
--

LOCK TABLES `link` WRITE;
/*!40000 ALTER TABLE `link` DISABLE KEYS */;
INSERT INTO `link` VALUES ('www.aptara.com/aptara','abc',1,1),('http://www.arcticnet.ulaval.ca/','abc',1,1),('http://www.casa-acea.ca/','NULL',2,NULL);
/*!40000 ALTER TABLE `link` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `opp_subjectmatter`
--

DROP TABLE IF EXISTS `opp_subjectmatter`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `opp_subjectmatter` (
  `SUBJECTMATTER_ID` bigint(20) NOT NULL,
  `OPPORTUNITY_ID` varchar(200) NOT NULL DEFAULT '',
  PRIMARY KEY (`SUBJECTMATTER_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `opp_subjectmatter`
--

LOCK TABLES `opp_subjectmatter` WRITE;
/*!40000 ALTER TABLE `opp_subjectmatter` DISABLE KEYS */;
/*!40000 ALTER TABLE `opp_subjectmatter` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `opportunitiessource`
--

DROP TABLE IF EXISTS `opportunitiessource`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `opportunitiessource` (
  `OPP_SOURCE_ID` decimal(38,0) DEFAULT NULL,
  `URL` varchar(2000) DEFAULT NULL,
  `STATUS` varchar(50) DEFAULT NULL,
  `LASTVISITED` datetime DEFAULT NULL,
  `FUNDINGBODY_ID` decimal(38,0) DEFAULT NULL,
  `CREATED_DATE` datetime DEFAULT NULL,
  `LANG` varchar(25) DEFAULT NULL,
  `FREQUENCY` varchar(200) DEFAULT NULL,
  `CAPTURESTART` datetime DEFAULT NULL,
  `CAPTUREEND` varchar(20) DEFAULT NULL,
  `NAME` longtext,
  `OPP_COMMENT` longtext
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `opportunitiessource`
--

LOCK TABLES `opportunitiessource` WRITE;
/*!40000 ALTER TABLE `opportunitiessource` DISABLE KEYS */;
/*!40000 ALTER TABLE `opportunitiessource` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `opportunity_location`
--

DROP TABLE IF EXISTS `opportunity_location`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `opportunity_location` (
  `LOCATION_ID` bigint(20) NOT NULL,
  `COUNTRY` varchar(2000) DEFAULT '',
  `ROOM` varchar(2000) DEFAULT '',
  `STREET` varchar(2000) DEFAULT '',
  `CITY` varchar(2000) DEFAULT '',
  `STATE` varchar(2000) DEFAULT '',
  `POSTALCODE` varchar(2000) DEFAULT '',
  `OPPORTUNITY_ID` bigint(20) DEFAULT NULL,
  `CREATED_DATE` datetime DEFAULT NULL,
  PRIMARY KEY (`LOCATION_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `opportunity_location`
--

LOCK TABLES `opportunity_location` WRITE;
/*!40000 ALTER TABLE `opportunity_location` DISABLE KEYS */;
/*!40000 ALTER TABLE `opportunity_location` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `opportunity_master`
--

DROP TABLE IF EXISTS `opportunity_master`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `opportunity_master` (
  `OPPORTUNITYID` bigint(20) NOT NULL,
  `FUNDINGBODYID` bigint(20) DEFAULT NULL,
  `OPPORTUNITYNAME` varchar(2000) DEFAULT '',
  `URL` varchar(2000) DEFAULT '',
  `CREATEDDATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `CREATEDBY` bigint(20) DEFAULT NULL,
  `CYCLECOMPLETIONDATE` datetime DEFAULT NULL,
  `CYCLECOMPLETEDBY` bigint(20) DEFAULT NULL,
  `LASTUPDATEDDATE` datetime DEFAULT NULL,
  `LASTUPDATEDBY` bigint(20) DEFAULT NULL,
  `CYCLE` bigint(20) DEFAULT NULL,
  `STATUSCODE` bigint(20) DEFAULT NULL,
  `RUSH` bigint(20) DEFAULT NULL,
  `RUSHBY` bigint(20) DEFAULT NULL,
  `ALLOCATIONMODE` varchar(2000) DEFAULT '',
  `ISAUTOMATED` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`OPPORTUNITYID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `opportunity_master`
--

LOCK TABLES `opportunity_master` WRITE;
/*!40000 ALTER TABLE `opportunity_master` DISABLE KEYS */;
INSERT INTO `opportunity_master` VALUES (501300181761,501100001265,'11222dhee','http://www.aomrc.org.uk/','2017-07-26 00:11:51',50,NULL,NULL,NULL,NULL,0,1,NULL,NULL,NULL,0),(501300181762,501100000784,NULL,NULL,'2014-02-09 01:33:26',50,NULL,NULL,NULL,NULL,0,1,NULL,NULL,NULL,0),(501300181842,501100002494,'Julficar','http://www.vgregion.se/Vastra-Gotalandsregionen/Home/','2014-04-22 19:29:31',50,NULL,NULL,NULL,NULL,0,1,NULL,NULL,NULL,0),(501300181843,501100002501,'PEERS-prizes','http://www.dentsplyimplants.de/Wissenschaft/PEERS-Foerderpreise','2014-04-22 00:33:56',50,NULL,NULL,NULL,NULL,4,3,NULL,NULL,NULL,0),(501300181844,501100002501,NULL,NULL,'2014-04-22 00:38:40',50,NULL,NULL,NULL,NULL,0,1,NULL,NULL,NULL,0),(501300181845,501100002502,'MacLeod Scholarship','http://www.abdn.ac.uk/funding/details.php?funding_id=26','2014-04-22 00:40:24',50,NULL,NULL,NULL,NULL,4,45,NULL,NULL,NULL,0),(501300181846,501100002502,'Donald Withrington Scholarship in Modern Scottish History','http://www.abdn.ac.uk/funding/details.php?funding_id=2','2014-04-22 23:20:41',50,NULL,NULL,NULL,NULL,4,3,NULL,NULL,NULL,0),(501300181847,501100002500,'Eric Bleumink Fund','http://www.rug.nl/science-and-society/alumni-and-fundraising/support-the-university/eric-bleumink-fund/applying-for-a-grant','2014-04-22 00:54:40',50,NULL,1,NULL,NULL,6,2,NULL,NULL,NULL,0),(501300181848,501100002494,'Harish','http://www.vgregion.se/Vastra-Gotalandsregionen/Home/','2014-04-22 19:48:16',50,NULL,NULL,NULL,NULL,0,1,NULL,NULL,NULL,0),(501300181849,501100002494,'Harish1','http://www.vgregion.se/Vastra-Gotalandsregionen/Home/','2014-04-22 20:18:38',50,NULL,NULL,NULL,NULL,0,1,NULL,NULL,NULL,0),(501300181851,501100002494,'Region Västra Götaland Culture Award','http://www.vgregion.se/Vastra-Gotalandsregionen/Home/','2014-04-22 22:43:31',50,NULL,NULL,NULL,NULL,4,3,NULL,NULL,NULL,0),(501300181853,501100002502,'Elphinstone PhD Scholarship','http://www.abdn.ac.uk/funding/details.php?funding_id=255','2014-04-23 00:03:51',50,NULL,NULL,NULL,NULL,4,3,NULL,NULL,NULL,0),(501300181854,501100002502,'James Carnegie Scholarship','http://www.abdn.ac.uk/funding/details.php?funding_id=66','2014-04-23 00:07:38',50,NULL,NULL,NULL,NULL,4,3,NULL,NULL,NULL,0),(501300181855,501100002502,'PhD Studentship Competition - Business School','http://www.abdn.ac.uk/funding/details.php?funding_id=252','2014-04-23 00:12:51',50,NULL,NULL,NULL,NULL,4,3,NULL,NULL,NULL,0),(501300181856,501100002494,NULL,NULL,'2014-04-23 00:24:54',50,NULL,NULL,NULL,NULL,0,1,NULL,NULL,NULL,0),(501300181881,501100001269,'Test Gourav','http://www.bliss.org.uk/','2014-08-23 19:54:52',50,NULL,NULL,NULL,NULL,1,2,NULL,NULL,NULL,0),(501300181961,501100002455,'sample','http://www.bcmhsus.ca/','2015-01-07 19:45:26',56,NULL,NULL,NULL,NULL,3,2,NULL,NULL,NULL,0),(501300182007,501100002455,'Medicin&#259; &#537;i D&#246;vl&#601;t','http://www.bcmhsus.ca/','2015-02-12 20:37:43',50,NULL,NULL,NULL,NULL,1,2,NULL,NULL,NULL,0),(501300182022,501100001266,'Avinash1 Expiry Check','http://www.actionduchenne.org/','2015-09-17 22:47:32',50,NULL,NULL,NULL,NULL,0,1,NULL,NULL,NULL,0),(501300182221,501100002461,'Harish','http://www.fondationdubarreau.qc.ca/index.html','2016-05-05 23:50:14',50,NULL,NULL,NULL,NULL,0,1,NULL,NULL,NULL,0),(501300182261,501100002455,'test rantosh opp','http://www.bcmhsus.ca/','2017-06-07 22:17:49',50,NULL,NULL,NULL,NULL,6,2,NULL,NULL,NULL,0),(501300182283,501100002806,'Postgraduate Scholarship in Wireless Engineering at Centre of Excellence in Telecommunications','https://www.bas.ac.uk/123','2017-06-23 20:50:49',50,NULL,NULL,NULL,NULL,3,3,NULL,NULL,NULL,0),(501300182284,501100002806,'Design for outdoor thermal comfort in urban environment - PhD Scholarship','https://www.bas.ac.uk/123','2017-06-23 20:58:29',50,NULL,NULL,NULL,NULL,4,3,NULL,NULL,NULL,0),(501300182285,501100002809,'PhD in Engineering: Solar energy storage systems','http://www.cardiff.ac.uk/123','2017-06-23 22:01:35',50,NULL,NULL,NULL,NULL,4,3,NULL,NULL,NULL,0),(501300182286,501100002809,'PhD in Chemistry: Novel membrane technologies for clean water production','http://www.cardiff.ac.uk/123','2017-06-23 22:20:59',50,NULL,NULL,NULL,NULL,4,3,NULL,NULL,NULL,0),(501300182287,501100002809,'NERC Doctoral Training Partnership PhD in Earth Sciences','http://www.cardiff.ac.uk/123','2017-06-23 22:28:21',50,NULL,NULL,NULL,NULL,4,3,NULL,NULL,NULL,0),(501300182288,501100002809,'PhD in Chemistry: Facile and accurate diagnosis of cancer','http://www.cardiff.ac.uk/123','2017-06-23 22:37:48',50,NULL,NULL,NULL,NULL,4,3,NULL,NULL,NULL,0),(501300182289,501100002810,'Biomedical Engineering: EPSRC Funded PhD Studentship: Mathematical Modelling of Aortic Valve Calcification','http://www.swansea.ac.uk/123','2017-06-23 22:46:00',50,NULL,NULL,NULL,NULL,4,3,NULL,NULL,NULL,0),(501300182290,501100002810,'Civil Engineering: KESS II Funded PhD Studentship: Sediment and Lagoons Integrated Computer Modelling','http://www.swansea.ac.uk/123','2017-06-23 22:51:25',50,NULL,NULL,NULL,NULL,3,3,NULL,NULL,NULL,0),(501300182291,501100002810,'Computer Science: Funded PhD Studentship: Service composition for cyber-security and safety','http://www.swansea.ac.uk/123','2017-06-23 22:59:07',50,NULL,NULL,NULL,NULL,4,3,NULL,NULL,NULL,0),(501300182292,501100002808,'African Coelacanth Ecosystem Programme (ACEP) 2018: Postdoctoral','http://www.nrf.ac.za/123','2017-06-23 23:14:48',50,NULL,NULL,NULL,NULL,4,3,NULL,NULL,NULL,0),(501300182301,501100002753,'Test 28 Aug 2017','https://www.bas.ac.uk/','2017-08-29 01:16:50',50,NULL,NULL,NULL,NULL,2,2,NULL,NULL,NULL,0),(501300182302,501100002756,'ABC','http://www.cecri.res.in/','2017-07-12 19:52:41',50,NULL,NULL,NULL,NULL,0,1,NULL,NULL,NULL,0),(501300182322,501100002455,'yuy gu','http://www.bcmhsus.ca/','2017-07-13 18:19:44',50,NULL,NULL,NULL,NULL,1,2,NULL,NULL,NULL,0),(501300182422,501100002455,'test opp 123456789','http://www.bcmhsus.ca/','2017-09-26 23:59:04',50,NULL,NULL,NULL,NULL,1,2,NULL,NULL,NULL,0),(501300182562,501100002458,'EDUCATION RESEARCH GRANT','http://192.168.192.98:15871/cgi-bin/blockpage.cgi?ws-session=3925987767','2018-01-25 21:58:07',50,NULL,NULL,NULL,NULL,1,2,NULL,NULL,NULL,0),(501300182563,501100001313,'For create date test','https://wwwm.coventry.ac.uk/Pages/index.aspx','2017-12-22 21:55:47',50,NULL,NULL,NULL,NULL,2,2,NULL,NULL,NULL,0),(501300182601,501100002461,'NON-STATE ACTORS &#x0026;AMP&#x003B; LOCAL AUTHORITIES IN DEVELOPMENT - ACTIONS IN INDONESIA','http://www.fondationdubarreau.qc.ca/index.html','2018-07-19 20:59:02',50,NULL,NULL,NULL,NULL,0,1,NULL,NULL,NULL,0),(501300182703,501100002461,'RESEARCH STUDENT CONFERENCE FUND','http://www.fondationdubarreau.qc.ca/index.html','2018-07-20 00:57:13',50,NULL,NULL,NULL,NULL,0,6,NULL,NULL,NULL,0),(501300182705,501100000774,'FORSHAW PHD SCHOLARSHIP IN ARCHITECTURE','https://www.ncl.ac.uk/','2018-07-30 23:55:00',50,NULL,NULL,NULL,NULL,0,1,NULL,NULL,NULL,0),(501300182763,501100002461,'Test_OPP_002','http://192.168.192.98:15871/cgi-bin/blockpage.cgi?ws-session=3379719753','2018-11-28 20:33:00',50,NULL,NULL,NULL,NULL,0,1,NULL,NULL,NULL,0),(501300182841,501100002460,'NJHJJ','http://portal.idc.ac.il/en/main/research/caesareacenter/about/pages/foundation.aspx','2019-05-07 03:37:48',50,NULL,NULL,NULL,NULL,0,1,NULL,NULL,NULL,0),(501300182861,501100002461,'PROJECT GRANT FOR RESEARCH INTO MIGRATION AND INTEGRATION','https://www.fondationdubarreau.qc.ca/index.html','2019-03-18 20:31:51',59,NULL,NULL,NULL,NULL,0,1,NULL,NULL,NULL,0),(501300182881,501100002458,'SSPP Leverhulme Studentships','https://www.essm.org/','2019-03-29 22:55:38',59,NULL,59,NULL,NULL,1,2,NULL,NULL,NULL,0),(501300182882,501100002458,'ROSALIND DRIVER SCHOLARSHIP FUND (RDSF) STUDENTSHIPS: A STUDENTSHIP IN SCIENCE EDUCATION','https://www.essm.org/','2019-03-29 23:15:13',59,NULL,NULL,NULL,NULL,1,45,NULL,NULL,NULL,0),(501300182883,501100002458,'DESIGN OF ENHANCED HEAT TRANSFER SURFACES THROUGH NOVEL METHODS OF DESIGN AND MANUFACTURING','https://www.essm.org/','2019-03-29 23:24:13',59,NULL,NULL,NULL,NULL,1,5,NULL,NULL,NULL,0),(501300182884,501100002458,'UPPER-BAND MMWAVE (200-300 GHZ) MASSIVE-MIMO BEAMFORMING USING ARTIFICIAL INTELLIGENCE FOR 6G HETEROGENEOUS NETWORKS_PTS2019','https://www.essm.org/','2019-03-29 23:32:42',59,NULL,NULL,NULL,NULL,1,6,NULL,NULL,NULL,0),(501300183001,501100002889,'Using data and digital technology to deliver better adult social care','https://www.brunel.ac.uk/','2019-07-05 01:17:19',59,NULL,NULL,NULL,NULL,0,1,NULL,NULL,NULL,0),(501300183181,501100000925,'MRFF TBI Mission - 2020 Traumatic Brain Injury Grant Opportunity','https://www.nhmrc.gov.au/about/index.htm','2020-01-30 22:15:22',59,NULL,NULL,NULL,NULL,0,1,NULL,NULL,NULL,0),(501300183201,501100002887,'Circular Economy Centres - full proposals','https://www.brunel.ac.uk/','2020-02-04 20:03:58',59,NULL,NULL,NULL,NULL,0,1,NULL,NULL,NULL,0);
/*!40000 ALTER TABLE `opportunity_master` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `oppotunity`
--

DROP TABLE IF EXISTS `oppotunity`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `oppotunity` (
  `OPPORTUNITY_ID` bigint(20) NOT NULL,
  `FUNDINGBODY_ID` bigint(20) NOT NULL,
  `FUNDINGBODYOPPORTUNITYID` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `LIMITEDSUBMISSION` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `TRUSTING` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `NEWINVESTIGATOR` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `COLLECTIONCODE` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `HIDDEN` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `NAME` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `LOIDATE` date DEFAULT NULL,
  `DUEDATE` date DEFAULT NULL,
  `ELIGIBILITYCATEGORY` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `LINKTOFULLTEXT` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `FIRSTPOSTDATE` date DEFAULT NULL,
  `LASTMODIFIEDPOSTDATE` date DEFAULT NULL,
  `OPPORTUNITYSTATUS` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `NUMBEROFAWARDS` bigint(20) DEFAULT NULL,
  `DURATION` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `LIMITEDSUBMISSIONDESCRIPTION` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `RAWTEXT` blob,
  `ELIGIBILITYDESCRIPTION` blob,
  `DUEDATEDESCRIPTION` blob,
  `ID` bigint(20) DEFAULT NULL,
  `RECORDSOURCE` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `EXPIRATIONDATE` date DEFAULT NULL,
  `DATE_FLAG` bigint(20) DEFAULT NULL,
  `LOI_MANDATORY` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `REPEATINGOPPORTUNITY` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `PREPROPOSALMANDATORY` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `LANG` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`OPPORTUNITY_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `oppotunity`
--

LOCK TABLES `oppotunity` WRITE;
/*!40000 ALTER TABLE `oppotunity` DISABLE KEYS */;
/*!40000 ALTER TABLE `oppotunity` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `org`
--

DROP TABLE IF EXISTS `org`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `org` (
  `ORGDBID` bigint(20) NOT NULL,
  `RELTYPE` varchar(2000) DEFAULT '',
  `ORG_TEXT` varchar(2000) DEFAULT '',
  `RELATEDORGS_ID` bigint(20) DEFAULT NULL,
  `LANG` varchar(50) DEFAULT '',
  `AFFLIATION_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`ORGDBID`),
  KEY `IND_SCI_ORG` (`RELATEDORGS_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `org`
--

LOCK TABLES `org` WRITE;
/*!40000 ALTER TABLE `org` DISABLE KEYS */;
INSERT INTO `org` VALUES (1,'','Test3',1,'en',1),(2,'','def',2,'fi',2),(309,'','Test3',1,'en',1);
/*!40000 ALTER TABLE `org` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `publicationdata`
--

DROP TABLE IF EXISTS `publicationdata`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `publicationdata` (
  `PUBLICATION_ID` decimal(20,0) NOT NULL,
  `AWARD_ID` decimal(20,0) DEFAULT NULL,
  `INGESTIONID` varchar(2000) CHARACTER SET utf8 DEFAULT NULL,
  `PUBLICATIONOUTPUTID` decimal(20,0) DEFAULT NULL,
  `PUBLISHEDDATE` date DEFAULT NULL,
  `CREATEDON` date DEFAULT NULL,
  `LASTUPDATEON` datetime DEFAULT CURRENT_TIMESTAMP,
  `PUBLICATION_AUTHOR` varchar(2000) CHARACTER SET utf8 DEFAULT NULL,
  `JOURNAL_IDENTIFIER` varchar(2000) CHARACTER SET utf8 DEFAULT NULL,
  `PUBLICATION_URL` varchar(2000) CHARACTER SET utf8 DEFAULT NULL,
  `FUNDINGBODYPROJECTID` varchar(1000) CHARACTER SET utf8 DEFAULT NULL,
  `PUB_DESCRIPTION` blob,
  `BULKAWID` varchar(2000) DEFAULT NULL,
  PRIMARY KEY (`PUBLICATION_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `publicationdata`
--

LOCK TABLES `publicationdata` WRITE;
/*!40000 ALTER TABLE `publicationdata` DISABLE KEYS */;
/*!40000 ALTER TABLE `publicationdata` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `publicationdataset`
--

DROP TABLE IF EXISTS `publicationdataset`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `publicationdataset` (
  `PUB_SOURCE_ID` decimal(38,0) DEFAULT NULL,
  `URL` varchar(500) DEFAULT NULL,
  `STATUS` varchar(50) DEFAULT NULL,
  `LASTVISITED` datetime DEFAULT NULL,
  `FUNDINGBODY_ID` decimal(38,0) DEFAULT NULL,
  `CREATED_DATE` datetime DEFAULT NULL,
  `LANG` varchar(25) DEFAULT NULL,
  `FREQUENCY` varchar(200) DEFAULT NULL,
  `CAPTURESTART` datetime DEFAULT NULL,
  `CAPTUREEND` datetime DEFAULT NULL,
  `NAME` longtext,
  `PUB_COMMENT` longtext
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `publicationdataset`
--

LOCK TABLES `publicationdataset` WRITE;
/*!40000 ALTER TABLE `publicationdataset` DISABLE KEYS */;
/*!40000 ALTER TABLE `publicationdataset` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `relatedfundingbodies`
--

DROP TABLE IF EXISTS `relatedfundingbodies`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `relatedfundingbodies` (
  `HIERARCHY` varchar(100) DEFAULT '',
  `RELEATEDFUNDINGBODIES_ID` bigint(20) DEFAULT NULL,
  `AWARD_ID` bigint(20) DEFAULT NULL,
  `CREATED_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `RELATEDORGSSS_ID` bigint(20) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `relatedfundingbodies`
--

LOCK TABLES `relatedfundingbodies` WRITE;
/*!40000 ALTER TABLE `relatedfundingbodies` DISABLE KEYS */;
/*!40000 ALTER TABLE `relatedfundingbodies` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `relateditems`
--

DROP TABLE IF EXISTS `relateditems`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `relateditems` (
  `RELATEDITEMS_ID` bigint(20) NOT NULL,
  `FUNDINGBODY_ID` bigint(20) DEFAULT NULL,
  `OPPORTUNITY_ID` bigint(20) DEFAULT NULL,
  `AWARD_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`RELATEDITEMS_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `relateditems`
--

LOCK TABLES `relateditems` WRITE;
/*!40000 ALTER TABLE `relateditems` DISABLE KEYS */;
INSERT INTO `relateditems` VALUES (1,501100000003,NULL,NULL),(2,501100000009,NULL,NULL);
/*!40000 ALTER TABLE `relateditems` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `relatedorgs`
--

DROP TABLE IF EXISTS `relatedorgs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `relatedorgs` (
  `HIERARCHY` varchar(2000) DEFAULT '',
  `RELATEDORGS_ID` bigint(20) NOT NULL,
  `FUNDINGBODY_ID` bigint(20) DEFAULT NULL,
  `AWARD_ID` bigint(20) DEFAULT NULL,
  `OPPORTUNITY_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`RELATEDORGS_ID`),
  KEY `IND_SCI_RELATEDORGS` (`AWARD_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `relatedorgs`
--

LOCK TABLES `relatedorgs` WRITE;
/*!40000 ALTER TABLE `relatedorgs` DISABLE KEYS */;
INSERT INTO `relatedorgs` VALUES ('1',1,501100000003,NULL,NULL),('2',2,501100000009,NULL,NULL);
/*!40000 ALTER TABLE `relatedorgs` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `relatedprograms`
--

DROP TABLE IF EXISTS `relatedprograms`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `relatedprograms` (
  `HIERARCHY` varchar(2000) NOT NULL DEFAULT '',
  `RELATEDPROGRAMS_ID` bigint(20) NOT NULL,
  `OPPORTUNITY_ID` bigint(20) DEFAULT NULL,
  `AWARD_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`RELATEDPROGRAMS_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `relatedprograms`
--

LOCK TABLES `relatedprograms` WRITE;
/*!40000 ALTER TABLE `relatedprograms` DISABLE KEYS */;
INSERT INTO `relatedprograms` VALUES ('1',1,NULL,NULL),('2',2,NULL,NULL);
/*!40000 ALTER TABLE `relatedprograms` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `researchoutcome`
--

DROP TABLE IF EXISTS `researchoutcome`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `researchoutcome` (
  `RESEARCHOUTCOME_ID` bigint(20) NOT NULL,
  `AWARD_ID` bigint(20) DEFAULT NULL,
  `CREATED_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`RESEARCHOUTCOME_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `researchoutcome`
--

LOCK TABLES `researchoutcome` WRITE;
/*!40000 ALTER TABLE `researchoutcome` DISABLE KEYS */;
/*!40000 ALTER TABLE `researchoutcome` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `revisionhistory`
--

DROP TABLE IF EXISTS `revisionhistory`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `revisionhistory` (
  `STATUS` varchar(2000) DEFAULT '',
  `REVISIONHISTORY_ID` bigint(20) NOT NULL,
  `FUNDINGBODY_ID` bigint(20) DEFAULT NULL,
  `OPPORTUNITY_ID` bigint(20) DEFAULT NULL,
  `AWARD_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`REVISIONHISTORY_ID`),
  KEY `IND_SCI_REVHIST` (`AWARD_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `revisionhistory`
--

LOCK TABLES `revisionhistory` WRITE;
/*!40000 ALTER TABLE `revisionhistory` DISABLE KEYS */;
INSERT INTO `revisionhistory` VALUES ('',1,501100000003,NULL,NULL),('',2,501100000009,NULL,NULL);
/*!40000 ALTER TABLE `revisionhistory` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_asjcdescription`
--

DROP TABLE IF EXISTS `sci_asjcdescription`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_asjcdescription` (
  `CODE` varchar(100) NOT NULL,
  `DESCRIPTION` varchar(2000) DEFAULT NULL,
  `DETAIL` varchar(2000) DEFAULT NULL,
  PRIMARY KEY (`CODE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_asjcdescription`
--

LOCK TABLES `sci_asjcdescription` WRITE;
/*!40000 ALTER TABLE `sci_asjcdescription` DISABLE KEYS */;
/*!40000 ALTER TABLE `sci_asjcdescription` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_binaryrelationtype`
--

DROP TABLE IF EXISTS `sci_binaryrelationtype`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_binaryrelationtype` (
  `VALUE` varchar(2000) DEFAULT ''
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_binaryrelationtype`
--

LOCK TABLES `sci_binaryrelationtype` WRITE;
/*!40000 ALTER TABLE `sci_binaryrelationtype` DISABLE KEYS */;
INSERT INTO `sci_binaryrelationtype` VALUES ('isReplacedBy'),('replaces'),('incorporatedInto'),('incorporates'),('continuedAs'),('ormerlyKnownAs'),('mergerOf'),('splitInto'),('splitFrom'),('originatedFrom'),('formerlyIncluding'),('parentOf'),('licenseAttributedBy'),('continuationOf'),('similarTo'),('partOf'),('operatedBy'),('grantedBy'),('administeredBy'),('fundedBy'),('sponsoredBy'),('solicitedBy'),('issuedBy'),('mergedWith'),('renamedAs'),('jointlyOwnedBy'),('affiliatedWith'),('applicationInfoFor'),('backgroundInfoFor'),('relevantTo'),('acknowledgedBy'),('about'),('isRelatedTo'),('fundingpolicy'),('region'),('subRegion'),('funderGroup');
/*!40000 ALTER TABLE `sci_binaryrelationtype` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_column_master`
--

DROP TABLE IF EXISTS `sci_column_master`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_column_master` (
  `COLUMN_ID` bigint(20) NOT NULL,
  `COLUMN_NAME` varchar(200) DEFAULT '',
  PRIMARY KEY (`COLUMN_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_column_master`
--

LOCK TABLES `sci_column_master` WRITE;
/*!40000 ALTER TABLE `sci_column_master` DISABLE KEYS */;
/*!40000 ALTER TABLE `sci_column_master` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_countrycodes`
--

DROP TABLE IF EXISTS `sci_countrycodes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_countrycodes` (
  `COUNTRYID` bigint(20) NOT NULL,
  `NAME` varchar(2000) DEFAULT '',
  `LCODE` varchar(2000) DEFAULT '',
  `SCODE` varchar(2000) DEFAULT '',
  `REGION` varchar(200) DEFAULT '',
  `SUBREGION` varchar(200) DEFAULT '',
  PRIMARY KEY (`COUNTRYID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_countrycodes`
--

LOCK TABLES `sci_countrycodes` WRITE;
/*!40000 ALTER TABLE `sci_countrycodes` DISABLE KEYS */;
INSERT INTO `sci_countrycodes` VALUES (1,'Afghanistan','afg','af','',''),(2,'Albania','alb','al','',''),(3,'Algeria','dza','dz','',''),(4,'American Samoa','asm','as','',''),(5,'Andorra','and','ad','',''),(6,'Angola','ago','ao','',''),(7,'Anguilla','aia','ai','',''),(8,'Antarctica','ata','aq','',''),(9,'Antigua and Barbuda','atg','ag','',''),(10,'Argentina','arg','ar','',''),(11,'Armenia','arm','am','',''),(12,'Aruba','abw','aw','',''),(13,'Australia','aus','au','',''),(14,'Austria','aut','at','',''),(15,'Azerbaijan','aze','az','',''),(16,'Bahamas','bhs','bs','',''),(17,'Bahrain','bhr','bh','',''),(18,'Bangladesh','bgd','bd','',''),(19,'Barbados','brb','bb','',''),(20,'Belarus','blr','by','',''),(21,'Belgium','bel','be','',''),(22,'Belize','blz','bz','',''),(23,'Benin','ben','bj','',''),(24,'Bermuda','bmu','bm','',''),(25,'Bhutan','btn','bt','',''),(27,'Bosnia and Herzegovina','bih','ba','',''),(28,'Botswana','bwa','bw','',''),(29,'Bouvet Island','bvt','bv','',''),(30,'Brazil','bra','br','',''),(31,'British Indian Ocean Territory','iot','io','',''),(32,'Brunei Darussalam','brn','bn','',''),(33,'Bulgaria','bgr','bg','',''),(34,'Burkina Faso','bfa','bf','',''),(35,'Burundi','bdi','bi','',''),(36,'Cambodia','khm','kh','',''),(37,'Cameroon','cmr','cm','',''),(38,'Canada','can','ca','',''),(39,'Cape Verde','cpv','cv','',''),(40,'Cayman Islands','cym','ky','',''),(41,'Central African Republic','caf','cf','',''),(42,'Chad','tcd','td','',''),(43,'Chile','chl','cl','',''),(44,'China','chn','cn','',''),(45,'Christmas Island','cxr','cx','',''),(46,'Cocos (Keeling) Islands','cck','cc','',''),(47,'Colombia','col','co','',''),(48,'Comoros','com','km','',''),(49,'Congo','cog','cg','',''),(50,'Cook Islands','cok','ck','',''),(51,'Costa Rica','cri','cr','',''),(52,'Cote d&#x0027;Ivoire','civ','ci','',''),(53,'Croatia','hrv','hr','',''),(54,'Cuba','cub','cu','',''),(55,'Cyprus','cyp','cy','',''),(56,'Czechia','cze','cz','',''),(57,'Democratic Republic Congo','cod','cd','',''),(58,'Denmark','dnk','dk','',''),(59,'Djibouti','dji','dj','',''),(60,'Dominica','dma','dm','',''),(61,'Dominican Republic','dom','do','',''),(62,'Ecuador','ecu','ec','',''),(63,'Egypt','egy','eg','',''),(64,'El Salvador','slv','sv','',''),(65,'Equatorial Guinea','gnq','gq','',''),(66,'Eritrea','eri','er','',''),(67,'Estonia','est','ee','',''),(68,'Ethiopia','eth','et','',''),(69,'Falkland Islands (Malvinas)','flk','fk','',''),(70,'Faroe Islands','fro','fo','',''),(71,'Federated States of Micronesia','fsm','fm','',''),(72,'Fiji','fji','fj','',''),(73,'Finland','fin','fi','',''),(74,'France','fra','fr','',''),(75,'French Guiana','guf','gf','',''),(76,'French Polynesia','pyf','pf','',''),(77,'French Southern Territories','atf','tf','',''),(78,'Gabon','gab','ga','',''),(79,'Gambia','gmb','gm','',''),(80,'Georgia','geo','ge','',''),(81,'Germany','deu','de','',''),(82,'Ghana','gha','gh','',''),(83,'Gibraltar','gib','gi','',''),(84,'Greece','grc','gr','',''),(85,'Greenland','grl','gl','',''),(86,'Grenada','grd','gd','',''),(87,'Guadeloupe','glp','gp','',''),(88,'Guam','gum','gu','',''),(89,'Guatemala','gtm','gt','',''),(90,'Guinea','gin','gn','',''),(91,'Guinea-Bissau','gnb','gw','',''),(92,'Guyana','guy','gy','',''),(93,'Haiti','hti','ht','',''),(94,'Heard Island and McDonald Islands','hmd','hm','',''),(95,'Honduras','hnd','hn','',''),(96,'Hong Kong','hkg','hk','',''),(97,'Hungary','hun','hu','',''),(98,'Iceland','isl','is','',''),(99,'India','ind','in','',''),(100,'Indonesia','idn','id','',''),(101,'Iran','irn','ir','',''),(102,'Iraq','irq','iq','',''),(103,'Ireland','irl','ie','',''),(104,'Israel','isr','il','',''),(105,'Italy','ita','it','',''),(106,'Jamaica','jam','jm','',''),(107,'Japan','jpn','jp','',''),(108,'Jordan','jor','jo','',''),(109,'Kazakhstan','kaz','kz','',''),(110,'Kenya','ken','ke','',''),(111,'Kiribati','kir','ki','',''),(112,'Kuwait','kwt','kw','',''),(113,'Kyrgyzstan','kgz','kg','',''),(114,'Laos','lao','la','',''),(115,'Latvia','lva','lv','',''),(116,'Lebanon','lbn','lb','',''),(117,'Lesotho','lso','ls','',''),(118,'Liberia','lbr','lr','',''),(119,'Libyan Arab Jamahiriya','lby','ly','',''),(120,'Liechtenstein','lie','li','',''),(121,'Lithuania','ltu','lt','',''),(122,'Luxembourg','lux','lu','',''),(123,'Macao','mac','mo','',''),(124,'North Macedonia','mkd','mk','',''),(125,'Madagascar','mdg','mg','',''),(126,'Malawi','mwi','mw','',''),(127,'Malaysia','mys','my','',''),(128,'Maldives','mdv','mv','',''),(129,'Mali','mli','ml','',''),(130,'Malta','mlt','mt','',''),(131,'Marshall Islands','mhl','mh','',''),(132,'Martinique','mtq','mq','',''),(133,'Mauritania','mrt','mr','',''),(134,'Mauritius','mus','mu','',''),(135,'Mayotte','myt','yt','',''),(136,'Mexico','mex','mx','',''),(137,'Moldova','mda','md','',''),(138,'Monaco','mco','mc','',''),(139,'Mongolia','mng','mn','',''),(140,'Montenegro','mne','me','',''),(141,'Montserrat','msr','ms','',''),(142,'Morocco','mar','ma','',''),(143,'Mozambique','moz','mz','',''),(144,'Myanmar','mmr','mm','',''),(145,'Namibia','nam','na','',''),(146,'Nauru','nru','nr','',''),(147,'Nepal','npl','np','',''),(148,'Netherlands','nld','nl','',''),(150,'New Caledonia','ncl','nc','',''),(151,'New Zealand','nzl','nz','',''),(152,'Nicaragua','nic','ni','',''),(153,'Niger','ner','ne','',''),(154,'Nigeria','nga','ng','',''),(155,'Niue','niu','nu','',''),(156,'Norfolk Island','nfk','nf','',''),(157,'North Korea','prk','kp','',''),(158,'Northern Mariana Islands','mnp','mp','',''),(159,'Norway','nor','no','',''),(160,'Oman','omn','om','',''),(161,'Pakistan','pak','pk','',''),(162,'Palau','plw','pw','',''),(163,'Palestine','pse','ps','',''),(164,'Panama','pan','pa','',''),(165,'Papua New Guinea','png','pg','',''),(166,'Paraguay','pry','py','',''),(167,'Peru','per','pe','',''),(168,'Philippines','phl','ph','',''),(169,'Pitcairn','pcn','pn','',''),(170,'Poland','pol','pl','',''),(171,'Portugal','prt','pt','',''),(172,'Puerto Rico','pri','pr','',''),(173,'Qatar','qat','qa','',''),(174,'Reunion','reu','re','',''),(175,'Romania','rou','ro','',''),(176,'Russian Federation','rus','ru','',''),(177,'Rwanda','rwa','rw','',''),(178,'Saint Helena','shn','sh','',''),(179,'Saint Kitts and Nevis','kna','kn','',''),(180,'Saint Lucia','lca','lc','',''),(181,'Saint Pierre and Miquelon','spm','pm','',''),(182,'Saint Vincent and the Grenadines','vct','vc','',''),(183,'Samoa','wsm','ws','',''),(184,'San Marino','smr','sm','',''),(185,'Sao Tome and Principe','stp','st','',''),(186,'Saudi Arabia','sau','sa','',''),(187,'Senegal','sen','sn','',''),(188,'Serbia','srb','rs','',''),(189,'Seychelles','syc','sc','',''),(190,'Sierra Leone','sle','sl','',''),(191,'Singapore','sgp','sg','',''),(192,'Slovakia','svk','sk','',''),(193,'Slovenia','svn','si','',''),(194,'Solomon Islands','slb','sb','',''),(195,'Somalia','som','so','',''),(196,'South Africa','zaf','za','',''),(198,'South Georgia and the South Sandwich Islands','sgs','gs','',''),(199,'South Korea','kor','kr','',''),(200,'Spain','esp','es','',''),(201,'Sri Lanka','lka','lk','',''),(202,'Sudan','sdn','sd','',''),(203,'Suriname','sur','sr','',''),(204,'Svalbard and Jan Mayen','sjm','sj','',''),(205,'Swaziland','swz','sz','',''),(206,'Sweden','swe','se','',''),(207,'Switzerland','che','ch','',''),(208,'Syrian Arab Republic','syr','sy','',''),(209,'Taiwan','twn','tw','',''),(210,'Tajikistan','tjk','tj','',''),(211,'Tanzania','tza','tz','',''),(212,'Thailand','tha','th','',''),(213,'Timor-Leste','tls','tl','',''),(214,'Togo','tgo','tg','',''),(215,'Tokelau','tkl','tk','',''),(216,'Tonga','ton','to','',''),(217,'Trinidad and Tobago','tto','tt','',''),(218,'Tunisia','tun','tn','',''),(219,'Turkey','tur','tr','',''),(220,'Turkmenistan','tkm','tm','',''),(221,'Turks and Caicos Islands','tca','tc','',''),(222,'Tuvalu','tuv','tv','',''),(223,'Uganda','uga','ug','',''),(224,'Ukraine','ukr','ua','',''),(225,'United Arab Emirates','are','ae','',''),(226,'United Kingdom','gbr','gb','',''),(227,'United States','usa','us','',''),(228,'United States Minor Outlying Islands','umi','um','',''),(229,'Uruguay','ury','uy','',''),(230,'Uzbekistan','uzb','uz','',''),(231,'Vanuatu','vut','vu','',''),(232,'Vatican City State','vat','va','',''),(233,'Venezuela','ven','ve','',''),(234,'Viet Nam','vnm','vn','',''),(235,'Virgin Islands (British)','vgb','vg','',''),(236,'Virgin Islands (U.S.)','vir','vi','',''),(237,'Wallis and Futuna','wlf','wf','',''),(238,'Western Sahara','esh','eh','',''),(239,'Yemen','yem','ye','',''),(240,'Zambia','zmb','zm','',''),(241,'Zimbabwe','zwe','zw','',''),(242,'European Union','eue','eu','',''),(243,'Bolivia','bol','bo','',''),(244,'Bonaire','bes','bq','',''),(245,'Curaçao','cuw','cw','',''),(246,'Saint Martin (Dutch)','sxm','sx','',''),(247,'Saint Martin (French)','maf','mf','',''),(248,'South Sudan','ssd','ss','','');
/*!40000 ALTER TABLE `sci_countrycodes` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_currencytype`
--

DROP TABLE IF EXISTS `sci_currencytype`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_currencytype` (
  `CODE` varchar(200) NOT NULL DEFAULT '',
  `VALUE` varchar(200) DEFAULT '',
  PRIMARY KEY (`CODE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_currencytype`
--

LOCK TABLES `sci_currencytype` WRITE;
/*!40000 ALTER TABLE `sci_currencytype` DISABLE KEYS */;
INSERT INTO `sci_currencytype` VALUES ('AED','United Arab Emirates dirham'),('AFN','Afghan afghani'),('ALL','Albanian lek'),('AMD','Armenian dram'),('ANG','Netherlands Antillean guilder'),('AOA','Angolan kwanza'),('ARS','Argentine peso'),('ATS','Austria Schillings'),('AUD','Australian dollar'),('AWG','Aruban florin'),('AZN','Azerbaijani manat'),('BAM','Bosnia and Herzegovina convertible mark'),('BBD','Barbados dollar'),('BDT','Bangladeshi taka'),('BEF','Belgium Francs'),('BGN','Bulgarian lev'),('BHD','Bahraini dinar'),('BIF','Burundian franc'),('BMD','Bermudian dollar'),('BND','Brunei dollar'),('BOB','Boliviano'),('BOV','Bolivian Mvdol (funds code)'),('BRL','Brazilian real'),('BSD','Bahamian dollar'),('BTN','Bhutanese ngultrum'),('BWP','Botswana pula'),('BYN','New Belarusian ruble'),('BYR','Belarusian ruble'),('BZD','Belize dollar'),('CAD','Canadian dollar'),('CDF','Congolese franc'),('CHE','WIR Euro (complementary currency)'),('CHF','Swiss franc'),('CHW','WIR Franc (complementary currency)'),('CLF','Unidad de Fomento (funds code)'),('CLP','Chilean peso'),('CNY','Chinese yuan'),('COP','Colombian peso'),('COU','Unidad de Valor Real (UVR) (funds code)[7]'),('CRC','Costa Rican colon'),('CUC','Cuban convertible peso'),('CUP','Cuban peso'),('CVE','Cape Verde escudo'),('CYP','Cyprus Pounds'),('CZK','Czech koruna'),('DEM','Germany Deutsche Marks'),('DJF','Djiboutian franc'),('DKK','Danish krone'),('DOP','Dominican peso'),('DZD','Algerian dinar'),('EEK','Estonia Krooni'),('EGP','Egyptian pound'),('ERN','Eritrean nakfa'),('ESP','Spain Pesetas'),('ETB','Ethiopian birr'),('EUR','Euro'),('FIM','Finland Markkaa'),('FJD','Fiji dollar'),('FKP','Falkland Islands pound'),('FRF','France Francs'),('GBP','Pound sterling'),('GEL','Georgian lari'),('GHS','Ghanaian cedi'),('GIP','Gibraltar pound'),('GMD','Gambian dalasi'),('GNF','Guinean franc'),('GRD','Greece Drachmae'),('GTQ','Guatemalan quetzal'),('GYD','Guyanese dollar'),('HKD','Hong Kong dollar'),('HNL','Honduran lempira'),('HRK','Croatian kuna'),('HTG','Haitian gourde'),('HUF','Hungarian forint'),('IDR','Indonesian rupiah'),('IEP','Ireland Pounds'),('ILS','Israeli new shekel'),('INR','Indian rupee'),('IQD','Iraqi dinar'),('IRR','Iranian rial'),('ISK','Icelandic krAna'),('ITL','Italy Lire'),('JMD','Jamaican dollar'),('JOD','Jordanian dinar'),('JPY','Japanese yen'),('KES','Kenyan shilling'),('KGS','Kyrgyzstani som'),('KHR','Cambodian riel'),('KMF','Comoro franc'),('KPW','North Korean won'),('KRW','South Korean won'),('KWD','Kuwaiti dinar'),('KYD','Cayman Islands dollar'),('KZT','Kazakhstani tenge'),('LAK','Lao kip'),('LBP','Lebanese pound'),('LKR','Sri Lankan rupee'),('LRD','Liberian dollar'),('LSL','Lesotho loti'),('LUF','Luxembourg Francs'),('LYD','Libyan dinar'),('MAD','Moroccan dirham'),('MDL','Moldovan leu'),('MGA','Malagasy ariary'),('MKD','Macedonian denar'),('MMK','Myanmar kyat'),('MNT','Mongolian t¿¿¿¿gr¿¿¿¿g'),('MOP','Macanese pataca'),('MRO','Mauritanian ouguiya'),('MTL','Malta Liri'),('MUR','Mauritian rupee'),('MVR','Maldivian rufiyaa'),('MWK','Malawian kwacha'),('MXN','Mexican peso'),('MXV','Mexican Unidad de Inversion (UDI) (funds code)'),('MYR','Malaysian ringgit'),('MZN','Mozambican metical'),('NAD','Namibian dollar'),('NGN','Nigerian naira'),('NIO','Nicaraguan c¿¿¿¿rdoba'),('NLG','Netherlands Guilders'),('NOK','Norwegian krone'),('NPR','Nepalese rupee'),('NZD','New Zealand dollar'),('OMR','Omani rial'),('PAB','Panamanian balboa'),('PEN','Peruvian Sol'),('PGK','Papua New Guinean kina'),('PHP','Philippine peso'),('PKR','Pakistani rupee'),('PLN','Polish z?oty'),('PTE','Portugal Escudos'),('PYG','Paraguayan guaran¿¿¿¿'),('QAR','Qatari riyal'),('ROL','Romania Lei'),('RON','Romanian leu'),('RSD','Serbian dinar'),('RUB','Russian ruble'),('RWF','Rwandan franc'),('SAR','Saudi riyal'),('SBD','Solomon Islands dollar'),('SCR','Seychelles rupee'),('SDG','Sudanese pound'),('SEK','Swedish krona/kronor'),('SGD','Singapore dollar'),('SHP','Saint Helena pound'),('SIT','Slovenia Tolars'),('SKK','Slovakia Koruny'),('SLL','Sierra Leonean leone'),('SOS','Somali shilling'),('SRD','Surinamese dollar'),('SSP','South Sudanese pound'),('STD','S¿¿¿¿o Tom¿¿¿¿ and Pr¿¿¿¿ncipe dobra'),('SVC','Salvadoran col¿¿¿¿n'),('SYP','Syrian pound'),('SZL','Swazi lilangeni'),('THB','Thai baht'),('TJS','Tajikistani somoni'),('TMT','Turkmenistani manat'),('TND','Tunisian dinar'),('TOP','Tongan pa?anga'),('TRY','Turkish lira'),('TTD','Trinidad and Tobago dollar'),('TWD','New Taiwan dollar'),('TZS','Tanzanian shilling'),('UAH','Ukrainian hryvnia'),('UGX','Ugandan shilling'),('USD','United States dollar'),('USN','United States dollar (next day) (funds code)'),('UYI','Uruguay Peso en Unidades Indexadas (URUIURUI) (funds code)'),('UYU','Uruguayan peso'),('UZS','Uzbekistan som'),('VEB','Venezuela Bolivares'),('VEF','Venezuelan bol¿¿¿¿var'),('VND','Vietnamese dong'),('VUV','Vanuatu vatu'),('WST','Samoan tala'),('XAF','CFA franc BEAC'),('XAG','Silver (one troy ounce)'),('XAU','Gold (one troy ounce)'),('XBA','European Composite Unit (EURCO) (bond market unit)'),('XBB','European Monetary Unit (E.M.U.-6) (bond market unit)'),('XBC','European Unit of Account 9 (E.U.A.-9) (bond market unit)'),('XBD','European Unit of Account 17 (E.U.A.-17) (bond market unit)'),('XCD','East Caribbean dollar'),('XDR','Special drawing rights'),('XOF','CFA franc BCEAO'),('XPD','Palladium (one troy ounce)'),('XPF','CFP franc (franc Pacifique)'),('XPT','Platinum (one troy ounce)'),('XSU','SUCRE'),('XTS','Code reserved for testing purposes'),('XUA','ADB Unit of Account'),('XXX','No currency'),('YER','Yemeni rial'),('ZAR','South African rand'),('ZMK','Zambia Kwacha'),('ZMW','Zambian kwacha'),('ZWL','Zimbabwean dollar A/10');
/*!40000 ALTER TABLE `sci_currencytype` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_defaulttemplate`
--

DROP TABLE IF EXISTS `sci_defaulttemplate`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_defaulttemplate` (
  `MODULEID` bigint(20) NOT NULL,
  `TEMPLATEID` bigint(20) NOT NULL,
  `ACTIVE` bigint(20) NOT NULL,
  `USERID` bigint(20) DEFAULT NULL,
  `UPDATEDDATE` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_defaulttemplate`
--

LOCK TABLES `sci_defaulttemplate` WRITE;
/*!40000 ALTER TABLE `sci_defaulttemplate` DISABLE KEYS */;
/*!40000 ALTER TABLE `sci_defaulttemplate` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_expire_alert`
--

DROP TABLE IF EXISTS `sci_expire_alert`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_expire_alert` (
  `OPPORTUNITYID` bigint(20) NOT NULL,
  `DUEDATE` datetime DEFAULT NULL,
  `CREATEDDATE` datetime DEFAULT NULL,
  `FLAG` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`OPPORTUNITYID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_expire_alert`
--

LOCK TABLES `sci_expire_alert` WRITE;
/*!40000 ALTER TABLE `sci_expire_alert` DISABLE KEYS */;
INSERT INTO `sci_expire_alert` VALUES (501300000036,'2011-04-26 00:00:00','2011-04-27 00:00:00',1),(501300000656,'2011-06-15 00:00:00','2011-06-16 00:00:00',1),(501300001261,'2011-05-25 00:00:00','2011-05-26 00:00:00',1),(501300001444,'2011-04-26 00:00:00','2011-04-27 00:00:00',1),(501300001462,'2011-04-26 00:00:00','2011-04-27 00:00:00',1),(501300002023,'2011-06-06 00:00:00','2011-06-07 00:00:00',1),(501300002121,'2011-06-15 00:00:00','2011-06-16 00:00:00',1),(501300005461,'2011-06-02 00:00:00','2011-06-03 00:00:00',1),(501300005482,'2011-06-02 00:00:00','2011-06-03 00:00:00',1),(501300005483,'2011-06-02 00:00:00','2011-06-03 00:00:00',1),(501300005501,'2011-06-02 00:00:00','2011-06-03 00:00:00',1),(501300005504,'2011-06-02 00:00:00','2011-06-03 00:00:00',1),(501300005521,'2011-06-02 00:00:00','2011-06-03 00:00:00',1),(501300007187,'2011-06-14 00:00:00','2011-06-15 00:00:00',1),(501300007188,'2011-05-09 00:00:00','2011-05-10 00:00:00',1),(501300007348,'2011-06-09 00:00:00','2011-06-10 00:00:00',1),(501300007501,'2011-06-06 00:00:00','2011-06-07 00:00:00',1),(501300007741,'2011-06-06 00:00:00','2011-06-07 00:00:00',1),(501300007925,'2011-06-12 00:00:00','2011-06-13 00:00:00',1),(501300008042,'2011-06-06 00:00:00','2011-06-07 00:00:00',1),(501300008401,'2011-06-09 00:00:00','2011-06-10 00:00:00',1),(501300008421,'2011-06-09 00:00:00','2011-06-10 00:00:00',1),(501300008443,'2011-06-02 00:00:00','2011-06-03 00:00:00',1),(501300008462,'2011-05-26 00:00:00','2011-05-27 00:00:00',1),(501300008504,'2011-05-26 00:00:00','2011-05-27 00:00:00',1),(501300008642,'2011-05-26 00:00:00','2011-05-27 00:00:00',1),(501300008644,'2011-06-02 00:00:00','2011-06-03 00:00:00',1),(501300008662,'2011-05-26 00:00:00','2011-05-27 00:00:00',1),(501300008664,'2011-06-02 00:00:00','2011-06-03 00:00:00',1),(501300008666,'2011-06-14 00:00:00','2011-06-15 00:00:00',1),(501300008668,'2011-06-14 00:00:00','2011-06-15 00:00:00',1),(501300008861,'2011-06-09 00:00:00','2011-06-10 00:00:00',1),(501300009742,'2011-06-06 00:00:00','2011-06-07 00:00:00',1),(501300010185,'2011-06-09 00:00:00','2011-06-10 00:00:00',1),(501300010203,'2011-06-09 00:00:00','2011-06-10 00:00:00',1),(501300010205,'2011-06-09 00:00:00','2011-06-10 00:00:00',1),(501300010263,'2011-06-06 00:00:00','2011-06-07 00:00:00',1),(501300010323,'2011-06-02 00:00:00','2011-06-03 00:00:00',1),(501300010325,'2011-06-02 00:00:00','2011-06-03 00:00:00',1),(501300010327,'2011-06-02 00:00:00','2011-06-03 00:00:00',1),(501300010421,'2011-06-08 00:00:00','2011-06-09 00:00:00',1),(501300010484,'2011-05-26 00:00:00','2011-05-27 00:00:00',1),(501300011382,'2011-06-02 00:00:00','2011-06-03 00:00:00',1),(501300011837,'2011-06-12 00:00:00','2011-06-13 00:00:00',1),(501300012104,'2011-06-12 00:00:00','2011-06-13 00:00:00',1),(501300013041,'2011-06-14 00:00:00','2011-06-15 00:00:00',1),(501300013502,'2011-06-12 00:00:00','2011-06-13 00:00:00',1),(501300013503,'2011-06-12 00:00:00','2011-06-13 00:00:00',1),(501300013524,'2011-06-14 00:00:00','2011-06-15 00:00:00',1),(501300013542,'2011-06-12 00:00:00','2011-06-13 00:00:00',1);
/*!40000 ALTER TABLE `sci_expire_alert` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_expired_opplist`
--

DROP TABLE IF EXISTS `sci_expired_opplist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_expired_opplist` (
  `MODULENAME` varchar(11) DEFAULT '',
  `MODULEID` bigint(20) DEFAULT NULL,
  `OPPNAME` varchar(2000) DEFAULT '',
  `FUNDINGBODYNAME` varchar(4000) DEFAULT '',
  `ID` bigint(20) NOT NULL,
  `TASKNAME` varchar(6) DEFAULT '',
  `TASKID` bigint(20) DEFAULT NULL,
  `CYCLE` bigint(20) DEFAULT NULL,
  `DUEDATE` datetime DEFAULT NULL,
  `CID` bigint(20) DEFAULT NULL,
  `LOGDATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `FLAG` varchar(1) DEFAULT '',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_expired_opplist`
--

LOCK TABLES `sci_expired_opplist` WRITE;
/*!40000 ALTER TABLE `sci_expired_opplist` DISABLE KEYS */;
/*!40000 ALTER TABLE `sci_expired_opplist` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_fundedprogramstypelist`
--

DROP TABLE IF EXISTS `sci_fundedprogramstypelist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_fundedprogramstypelist` (
  `TYPEID` varchar(200) NOT NULL DEFAULT '',
  `FUNDEDPROGRAMTYPESTEXT` varchar(2000) DEFAULT '',
  PRIMARY KEY (`TYPEID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_fundedprogramstypelist`
--

LOCK TABLES `sci_fundedprogramstypelist` WRITE;
/*!40000 ALTER TABLE `sci_fundedprogramstypelist` DISABLE KEYS */;
INSERT INTO `sci_fundedprogramstypelist` VALUES ('artistic','Artistic pursuit'),('clinical','Clinical trial grants and clinical trial contracts'),('community','Community development'),('contract','Research contracts'),('coop','Cooperative agreements and inter agency agreements'),('facilities','Equipment, research facilities and infrastructure'),('fellow','Individual fellowship, career development and research training grants'),('innovation','Innovation and business development'),('network','Travel and conference grants'),('prize','Recognition prizes'),('program','Program and center grants'),('research','Research Grants'),('training','Institutional research training grants');
/*!40000 ALTER TABLE `sci_fundedprogramstypelist` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_fundingbodysubtypeidstype`
--

DROP TABLE IF EXISTS `sci_fundingbodysubtypeidstype`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_fundingbodysubtypeidstype` (
  `VALUE` varchar(2000) DEFAULT '',
  `TYPE` varchar(2000) DEFAULT '',
  `SUBTYPE` varchar(2000) DEFAULT ''
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_fundingbodysubtypeidstype`
--

LOCK TABLES `sci_fundingbodysubtypeidstype` WRITE;
/*!40000 ALTER TABLE `sci_fundingbodysubtypeidstype` DISABLE KEYS */;
INSERT INTO `sci_fundingbodysubtypeidstype` VALUES ('resins','pri','Research institutes and centers'),('govfed','gov','National government'),('govnon','gov','Local government'),('corpor','pri','For-profit companies (industry)'),('founda','pri','Trusts, charities, foundations (both publically funded and privately funded)'),('othern','pri','other non-profit'),('intern','pri','international'),('asssoc','pri','Associations and societies (private and public)'),('academ','pri','Universities (academic only)');
/*!40000 ALTER TABLE `sci_fundingbodysubtypeidstype` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_fundingbodytypeidstype`
--

DROP TABLE IF EXISTS `sci_fundingbodytypeidstype`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_fundingbodytypeidstype` (
  `VALUE` varchar(2000) DEFAULT '',
  `TYPE` varchar(2000) DEFAULT ''
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_fundingbodytypeidstype`
--

LOCK TABLES `sci_fundingbodytypeidstype` WRITE;
/*!40000 ALTER TABLE `sci_fundingbodytypeidstype` DISABLE KEYS */;
INSERT INTO `sci_fundingbodytypeidstype` VALUES ('gov','Government'),('pri','Private sector');
/*!40000 ALTER TABLE `sci_fundingbodytypeidstype` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_group_url_detail`
--

DROP TABLE IF EXISTS `sci_group_url_detail`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_group_url_detail` (
  `GROUP_ID` bigint(20) NOT NULL,
  `URL_NUMBER` bigint(20) DEFAULT NULL,
  `CREATED_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`GROUP_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_group_url_detail`
--

LOCK TABLES `sci_group_url_detail` WRITE;
/*!40000 ALTER TABLE `sci_group_url_detail` DISABLE KEYS */;
/*!40000 ALTER TABLE `sci_group_url_detail` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_groupurl`
--

DROP TABLE IF EXISTS `sci_groupurl`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_groupurl` (
  `ID` bigint(20) NOT NULL,
  `URLID` blob,
  `MODULEID` bigint(20) DEFAULT NULL,
  `CREATEDATE` date DEFAULT NULL,
  `CREATEDBY` bigint(20) DEFAULT NULL,
  `BATCH` bigint(20) DEFAULT NULL,
  `GROUP_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_groupurl`
--

LOCK TABLES `sci_groupurl` WRITE;
/*!40000 ALTER TABLE `sci_groupurl` DISABLE KEYS */;
/*!40000 ALTER TABLE `sci_groupurl` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_hierarchymaster`
--

DROP TABLE IF EXISTS `sci_hierarchymaster`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_hierarchymaster` (
  `HIERARCHY` varchar(2000) DEFAULT ''
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_hierarchymaster`
--

LOCK TABLES `sci_hierarchymaster` WRITE;
/*!40000 ALTER TABLE `sci_hierarchymaster` DISABLE KEYS */;
INSERT INTO `sci_hierarchymaster` VALUES ('lead'),('component');
/*!40000 ALTER TABLE `sci_hierarchymaster` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_language_detail`
--

DROP TABLE IF EXISTS `sci_language_detail`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_language_detail` (
  `TRAN_ID` decimal(20,0) NOT NULL,
  `SCIVAL_ID` decimal(20,0) DEFAULT NULL,
  `COLUMN_DESC` longtext,
  `COLUMN_ID` decimal(20,0) DEFAULT NULL,
  `MODULEID` decimal(20,0) DEFAULT NULL,
  `LANGUAGE_ID` decimal(20,0) DEFAULT NULL,
  `TRAN_TYPE_ID` decimal(20,0) DEFAULT NULL,
  `CREATED_DATE` datetime DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`TRAN_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_language_detail`
--

LOCK TABLES `sci_language_detail` WRITE;
/*!40000 ALTER TABLE `sci_language_detail` DISABLE KEYS */;
INSERT INTO `sci_language_detail` VALUES (0,501100000003,'Test1',1,2,1,0,'2020-08-26 13:56:12'),(1,501100000003,'Test2',NULL,2,1,0,'2020-08-26 13:56:12'),(2,501100000003,'Test3',2,2,1,0,'2020-08-26 13:56:12'),(3,501100000003,'Test4',4,2,1,0,'2020-08-26 13:56:12'),(4,501100000003,'Test1',1,2,1,0,'2020-09-04 00:23:52'),(5,NULL,NULL,NULL,2,NULL,NULL,'2020-09-04 00:23:52'),(6,501100000003,'Test1',1,2,1,0,'2020-09-04 09:18:34'),(7,NULL,NULL,NULL,2,NULL,NULL,'2020-09-04 09:18:34'),(8,501100000003,'Test1',1,2,1,0,'2020-09-04 09:33:16'),(9,NULL,NULL,NULL,2,NULL,NULL,'2020-09-04 09:33:16'),(10,501100000003,'Test1',1,2,1,0,'2020-09-04 09:45:54'),(11,NULL,NULL,NULL,2,NULL,NULL,'2020-09-04 09:45:54'),(12,501100000003,'TestAlt1',3,2,1,0,'2020-09-04 09:45:54'),(13,501100000003,'TestAlt2',3,2,1,0,'2020-09-04 09:45:54'),(14,501100000003,'Test Acry1',7,2,1,0,'2020-09-04 09:45:54'),(15,501100000003,'Test1',1,2,1,0,'2020-09-04 10:25:55'),(16,NULL,NULL,NULL,2,NULL,NULL,'2020-09-04 10:25:55'),(17,501100000003,'Test1',1,2,1,0,'2020-09-04 15:57:50'),(18,NULL,NULL,NULL,2,NULL,NULL,'2020-09-04 15:57:50'),(19,501100000003,'Test1',1,2,1,0,'2020-09-04 18:38:07'),(20,NULL,NULL,NULL,2,NULL,NULL,'2020-09-04 18:38:07');
/*!40000 ALTER TABLE `sci_language_detail` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_language_master`
--

DROP TABLE IF EXISTS `sci_language_master`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_language_master` (
  `LANGUAGE_ID` bigint(20) NOT NULL,
  `LANGUAGE_GROUP_ID` bigint(20) DEFAULT NULL,
  `LANGUAGE_NAME` varchar(200) DEFAULT '',
  `LANGUAGE_CODE` varchar(50) DEFAULT '',
  `CODE_LENGTH` bigint(20) DEFAULT NULL,
  `PRIORITY` bigint(20) DEFAULT NULL,
  `CREATED_DATE` datetime DEFAULT NULL,
  PRIMARY KEY (`LANGUAGE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_language_master`
--

LOCK TABLES `sci_language_master` WRITE;
/*!40000 ALTER TABLE `sci_language_master` DISABLE KEYS */;
INSERT INTO `sci_language_master` VALUES (1,1,'Afrikaans','af',2,1,'2014-05-09 00:00:00'),(2,1,'Afrikaans','afr',3,2,'2014-05-09 00:00:00'),(3,1,'Afrikaans','afrk',4,3,'2014-05-09 00:00:00'),(4,2,'Albanian','sq',2,1,'2014-05-09 00:00:00'),(5,2,'Albanian','alb',3,2,'2014-05-09 00:00:00'),(6,2,'Albanian','alba',4,3,'2014-05-09 00:00:00'),(7,3,'Arabic','ar',2,1,'2014-05-09 00:00:00'),(8,3,'Arabic','ara',3,2,'2014-05-09 00:00:00'),(9,3,'Arabic','arab',4,3,'2014-05-09 00:00:00'),(10,4,'Armenian','hy',2,1,'2014-05-09 00:00:00'),(11,4,'Armenian','arm',3,2,'2014-05-09 00:00:00'),(12,4,'Armenian','arme',4,3,'2014-05-09 00:00:00'),(13,5,'Azerbaijani','az',2,1,'2014-05-09 00:00:00'),(14,5,'Azerbaijani','aze',3,2,'2014-05-09 00:00:00'),(15,5,'Azerbaijani','azrb',4,3,'2014-05-09 00:00:00'),(16,6,'Basque','eu',2,1,'2014-05-09 00:00:00'),(17,6,'Basque','baq',3,2,'2014-05-09 00:00:00'),(18,6,'Basque','basq',4,3,'2014-05-09 00:00:00'),(19,7,'Belarusian','be',2,1,'2014-05-09 00:00:00'),(20,7,'Belarusian','bel',3,2,'2014-05-09 00:00:00'),(21,7,'Belarusian','byel',4,3,'2014-05-09 00:00:00'),(22,8,'Bengali','bn',2,1,'2014-05-09 00:00:00'),(23,8,'Bengali','ben',3,2,'2014-05-09 00:00:00'),(24,8,'Bengali','beng',4,3,'2014-05-09 00:00:00'),(25,9,'Bosnian','bs',2,1,'2014-05-09 00:00:00'),(26,9,'Bosnian','bos',3,2,'2014-05-09 00:00:00'),(27,9,'Bosnian','bosn',4,3,'2014-05-09 00:00:00'),(28,10,'Bulgarian','bg',2,1,'2014-05-09 00:00:00'),(29,10,'Bulgarian','bul',3,2,'2014-05-09 00:00:00'),(30,10,'Bulgarian','bulg',4,3,'2014-05-09 00:00:00'),(31,11,'Burmese','my',2,1,'2014-05-09 00:00:00'),(32,11,'Burmese','bur',3,2,'2014-05-09 00:00:00'),(33,11,'Burmese','burm',4,3,'2014-05-09 00:00:00'),(34,12,'Catalan','ca',2,1,'2014-05-09 00:00:00'),(35,12,'Catalan','cat',3,2,'2014-05-09 00:00:00'),(36,12,'Catalan','cata',4,3,'2014-05-09 00:00:00'),(37,13,'Chinese','zh',2,1,'2014-05-09 00:00:00'),(38,13,'Chinese','chi',3,2,'2014-05-09 00:00:00'),(39,13,'Chinese','chin',4,3,'2014-05-09 00:00:00'),(40,14,'Croatian','hr',2,1,'2014-05-09 00:00:00'),(41,14,'Croatian','hrv',3,2,'2014-05-09 00:00:00'),(42,14,'Croatian','croa',4,3,'2014-05-09 00:00:00'),(43,15,'Czech','cs',2,1,'2014-05-09 00:00:00'),(44,15,'Czech','cze',3,2,'2014-05-09 00:00:00'),(45,15,'Czech','czch',4,3,'2014-05-09 00:00:00'),(46,16,'Danish','da',2,1,'2014-05-09 00:00:00'),(47,16,'Danish','dan',3,2,'2014-05-09 00:00:00'),(48,16,'Danish','dans',4,3,'2014-05-09 00:00:00'),(49,17,'Dutch','nl',2,1,'2014-05-09 00:00:00'),(50,17,'Dutch','dut',3,2,'2014-05-09 00:00:00'),(51,17,'Dutch','dutc',4,3,'2014-05-09 00:00:00'),(52,18,'English','en',2,1,'2014-05-09 00:00:00'),(53,18,'English','eng',3,2,'2014-05-09 00:00:00'),(54,18,'English','engl',4,3,'2014-05-09 00:00:00'),(55,19,'Esperanto','eo',2,1,'2014-05-09 00:00:00'),(56,19,'Esperanto','epo',3,2,'2014-05-09 00:00:00'),(57,19,'Esperanto','espe',4,3,'2014-05-09 00:00:00'),(58,20,'Estonian','et',2,1,'2014-05-09 00:00:00'),(59,20,'Estonian','est',3,2,'2014-05-09 00:00:00'),(60,20,'Estonian','esto',4,3,'2014-05-09 00:00:00'),(61,21,'Finnish','fi',2,1,'2014-05-09 00:00:00'),(62,21,'Finnish','fin',3,2,'2014-05-09 00:00:00'),(63,21,'Finnish','finn',4,3,'2014-05-09 00:00:00'),(64,22,'French','fr',2,1,'2014-05-09 00:00:00'),(65,22,'French','fre',3,2,'2014-05-09 00:00:00'),(66,22,'French','fren',4,3,'2014-05-09 00:00:00'),(67,23,'Gallegan','gl',2,1,'2014-05-09 00:00:00'),(68,23,'Gallegan','glg',3,2,'2014-05-09 00:00:00'),(69,23,'Gallegan','gall',4,3,'2014-05-09 00:00:00'),(70,24,'Georgian','ka',2,1,'2014-05-09 00:00:00'),(71,24,'Georgian','geo',3,2,'2014-05-09 00:00:00'),(72,24,'Georgian','geor',4,3,'2014-05-09 00:00:00'),(73,25,'German','de',2,1,'2014-05-09 00:00:00'),(74,25,'German','ger',3,2,'2014-05-09 00:00:00'),(75,25,'German','germ',4,3,'2014-05-09 00:00:00'),(76,26,'Greek','el',2,1,'2014-05-09 00:00:00'),(77,26,'Greek','gre',3,2,'2014-05-09 00:00:00'),(78,26,'Greek','grek',4,3,'2014-05-09 00:00:00'),(79,27,'Hebrew','he',2,1,'2014-05-09 00:00:00'),(80,27,'Hebrew','heb',3,2,'2014-05-09 00:00:00'),(81,27,'Hebrew','hebr',4,3,'2014-05-09 00:00:00'),(82,28,'Hindi','hi',2,1,'2014-05-09 00:00:00'),(83,28,'Hindi','hin',3,2,'2014-05-09 00:00:00'),(84,28,'Hindi','indi',4,3,'2014-05-09 00:00:00'),(85,29,'Hungarian','hu',2,1,'2014-05-09 00:00:00'),(86,29,'Hungarian','hun',3,2,'2014-05-09 00:00:00'),(87,29,'Hungarian','hung',4,3,'2014-05-09 00:00:00'),(88,30,'Icelandic','is',2,1,'2014-05-09 00:00:00'),(89,30,'Icelandic','ice',3,2,'2014-05-09 00:00:00'),(90,30,'Icelandic','icel',4,3,'2014-05-09 00:00:00'),(91,31,'Indonesian','id',2,1,'2014-05-09 00:00:00'),(92,31,'Indonesian','ind',3,2,'2014-05-09 00:00:00'),(93,31,'Indonesian','baha',4,3,'2014-05-09 00:00:00'),(94,32,'Irish Gaelic','ga',2,1,'2014-05-09 00:00:00'),(95,32,'Irish Gaelic','gle',3,2,'2014-05-09 00:00:00'),(96,32,'Irish Gaelic','gael',4,3,'2014-05-09 00:00:00'),(97,33,'Italian','it',2,1,'2014-05-09 00:00:00'),(98,33,'Italian','ita',3,2,'2014-05-09 00:00:00'),(99,33,'Italian','ital',4,3,'2014-05-09 00:00:00'),(100,34,'Japanese','ja',2,1,'2014-05-09 00:00:00'),(101,34,'Japanese','jpn',3,2,'2014-05-09 00:00:00'),(102,34,'Japanese','japa',4,3,'2014-05-09 00:00:00'),(103,35,'Korean','ko',2,1,'2014-05-09 00:00:00'),(104,35,'Korean','kor',3,2,'2014-05-09 00:00:00'),(105,35,'Korean','kora',4,3,'2014-05-09 00:00:00'),(106,36,'Latin','la',2,1,'2014-05-09 00:00:00'),(107,36,'Latin','lat',3,2,'2014-05-09 00:00:00'),(108,36,'Latin','lati',4,3,'2014-05-09 00:00:00'),(109,37,'Latvian','lv',2,1,'2014-05-09 00:00:00'),(110,37,'Latvian','lav',3,2,'2014-05-09 00:00:00'),(111,37,'Latvian','latv',4,3,'2014-05-09 00:00:00'),(112,38,'Lithuanian','lt',2,1,'2014-05-09 00:00:00'),(113,38,'Lithuanian','lit',3,2,'2014-05-09 00:00:00'),(114,38,'Lithuanian','lith',4,3,'2014-05-09 00:00:00'),(115,39,'Macedonian','mk',2,1,'2014-05-09 00:00:00'),(116,39,'Macedonian','mac',3,2,'2014-05-09 00:00:00'),(117,39,'Macedonian','mace',4,3,'2014-05-09 00:00:00'),(118,40,'Malay','ms',2,1,'2014-05-09 00:00:00'),(119,40,'Malay','may',3,2,'2014-05-09 00:00:00'),(120,40,'Malay','mala',4,3,'2014-05-09 00:00:00'),(121,41,'Maori','mi',2,1,'2014-05-09 00:00:00'),(122,41,'Maori','mao',3,2,'2014-05-09 00:00:00'),(123,41,'Maori','maor',4,3,'2014-05-09 00:00:00'),(124,42,'Mongolian','mn',2,1,'2014-05-09 00:00:00'),(125,42,'Mongolian','mon',3,2,'2014-05-09 00:00:00'),(126,42,'Mongolian','mong',4,3,'2014-05-09 00:00:00'),(127,43,'Norwegian','no',2,1,'2014-05-09 00:00:00'),(128,43,'Norwegian','nor',3,2,'2014-05-09 00:00:00'),(129,43,'Norwegian','norw',4,3,'2014-05-09 00:00:00'),(130,44,'Persian','fa',2,1,'2014-05-09 00:00:00'),(131,44,'Persian','per',3,2,'2014-05-09 00:00:00'),(132,44,'Persian','pers',4,3,'2014-05-09 00:00:00'),(133,45,'Polish','pl',2,1,'2014-05-09 00:00:00'),(134,45,'Polish','pol',3,2,'2014-05-09 00:00:00'),(135,45,'Polish','pols',4,3,'2014-05-09 00:00:00'),(136,46,'Polyglot','xx',2,1,'2014-05-09 00:00:00'),(137,46,'Polyglot','map',3,2,'2014-05-09 00:00:00'),(138,46,'Polyglot','poly',4,3,'2014-05-09 00:00:00'),(139,47,'Portuguese','pt',2,1,'2014-05-09 00:00:00'),(140,47,'Portuguese','por',3,2,'2014-05-09 00:00:00'),(141,47,'Portuguese','port',4,3,'2014-05-09 00:00:00'),(142,48,'Pushto','ps',2,1,'2014-05-09 00:00:00'),(143,48,'Pushto','pus',3,2,'2014-05-09 00:00:00'),(144,48,'Pushto','push',4,3,'2014-05-09 00:00:00'),(145,49,'Romanian','ro',2,1,'2014-05-09 00:00:00'),(146,49,'Romanian','rum',3,2,'2014-05-09 00:00:00'),(147,49,'Romanian','ruma',4,3,'2014-05-09 00:00:00'),(148,50,'Russian','ru',2,1,'2014-05-09 00:00:00'),(149,50,'Russian','rus',3,2,'2014-05-09 00:00:00'),(150,50,'Russian','russ',4,3,'2014-05-09 00:00:00'),(151,51,'Scottish Gaelic','gd',2,1,'2014-05-09 00:00:00'),(152,51,'Scottish Gaelic','gla',3,2,'2014-05-09 00:00:00'),(153,51,'Scottish Gaelic','scot',4,3,'2014-05-09 00:00:00'),(154,52,'Serbian','sr',2,1,'2014-05-09 00:00:00'),(155,52,'Serbian','srp',3,2,'2014-05-09 00:00:00'),(156,52,'Serbian','serb',4,3,'2014-05-09 00:00:00'),(157,53,'Sinhalese','si',2,1,'2014-05-09 00:00:00'),(158,53,'Sinhalese','sin',3,2,'2014-05-09 00:00:00'),(159,53,'Sinhalese','sinh',4,3,'2014-05-09 00:00:00'),(160,54,'Slovak','sk',2,1,'2014-05-09 00:00:00'),(161,54,'Slovak','slo',3,2,'2014-05-09 00:00:00'),(162,54,'Slovak','slvk',4,3,'2014-05-09 00:00:00'),(163,55,'Slovene','sl',2,1,'2014-05-09 00:00:00'),(164,55,'Slovene','slv',3,2,'2014-05-09 00:00:00'),(165,55,'Slovene','slvn',4,3,'2014-05-09 00:00:00'),(166,56,'Spanish','es',2,1,'2014-05-09 00:00:00'),(167,56,'Spanish','spa',3,2,'2014-05-09 00:00:00'),(168,56,'Spanish','span',4,3,'2014-05-09 00:00:00'),(169,57,'Swedish','sv',2,1,'2014-05-09 00:00:00'),(170,57,'Swedish','swe',3,2,'2014-05-09 00:00:00'),(171,57,'Swedish','swed',4,3,'2014-05-09 00:00:00'),(172,58,'Tagalog','tl',2,1,'2014-05-09 00:00:00'),(173,58,'Tagalog','tgl',3,2,'2014-05-09 00:00:00'),(174,58,'Tagalog','taga',4,3,'2014-05-09 00:00:00'),(175,59,'Thai','th',2,1,'2014-05-09 00:00:00'),(176,59,'Thai','tha',3,2,'2014-05-09 00:00:00'),(177,59,'Thai','thai',4,3,'2014-05-09 00:00:00'),(178,60,'Turkish','tr',2,1,'2014-05-09 00:00:00'),(179,60,'Turkish','tur',3,2,'2014-05-09 00:00:00'),(180,60,'Turkish','turk',4,3,'2014-05-09 00:00:00'),(181,61,'Ukrainian','uk',2,1,'2014-05-09 00:00:00'),(182,61,'Ukrainian','ukr',3,2,'2014-05-09 00:00:00'),(183,61,'Ukrainian','ukra',4,3,'2014-05-09 00:00:00'),(184,62,'Urdu','ur',2,1,'2014-05-09 00:00:00'),(185,62,'Urdu','urd',3,2,'2014-05-09 00:00:00'),(186,62,'Urdu','urdu',4,3,'2014-05-09 00:00:00'),(187,63,'Uzbek','uz',2,1,'2014-05-09 00:00:00'),(188,63,'Uzbek','uzb',3,2,'2014-05-09 00:00:00'),(189,63,'Uzbek','uzbe',4,3,'2014-05-09 00:00:00'),(190,64,'Vietnamese','vi',2,1,'2014-05-09 00:00:00'),(191,64,'Vietnamese','vie',3,2,'2014-05-09 00:00:00'),(192,64,'Vietnamese','viet',4,3,'2014-05-09 00:00:00'),(193,65,'Nepali','ne',2,1,'2019-02-21 00:00:00'),(194,65,'Nepali','nep',3,2,'2019-02-21 00:00:00'),(195,66,'Laotian','lo',2,1,'2019-02-21 00:00:00'),(196,66,'Laotian','lao',3,2,'2019-02-21 00:00:00'),(197,67,'Kazakh','kaz',3,2,'2020-01-29 00:00:00'),(198,67,'Kazakh','kk',2,1,'2020-01-29 00:00:00'),(199,68,'Tajik','tgk',3,2,'2020-01-29 00:00:00'),(200,68,'Tajik','tg',2,1,'2020-01-29 00:00:00'),(201,69,'Kirghiz, Kyrgyz','kir',3,2,'2020-01-29 00:00:00'),(202,69,'Kirghiz, Kyrgyz','ky',2,1,'2020-01-29 00:00:00'),(203,70,'Welsh','wel',3,2,'2020-01-29 00:00:00'),(204,70,'Welsh','cy',2,1,'2020-01-29 00:00:00'),(205,71,'Romanian; Moldavian; Moldovan','rum',3,2,'2020-01-29 00:00:00'),(206,71,'Romanian; Moldavian; Moldovan','ro',2,1,'2020-01-29 00:00:00');
/*!40000 ALTER TABLE `sci_language_master` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_modules`
--

DROP TABLE IF EXISTS `sci_modules`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_modules` (
  `MODULEID` bigint(20) NOT NULL,
  `MODULENAME` varchar(2000) DEFAULT '',
  PRIMARY KEY (`MODULEID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_modules`
--

LOCK TABLES `sci_modules` WRITE;
/*!40000 ALTER TABLE `sci_modules` DISABLE KEYS */;
INSERT INTO `sci_modules` VALUES (1,'Admin'),(2,'Funding Body'),(3,'Opportunity '),(4,'Awards'),(5,'Web Watcher');
/*!40000 ALTER TABLE `sci_modules` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_moduletaskconfig`
--

DROP TABLE IF EXISTS `sci_moduletaskconfig`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_moduletaskconfig` (
  `MODULEID` bigint(20) NOT NULL,
  `TASKID` bigint(20) NOT NULL,
  PRIMARY KEY (`MODULEID`,`TASKID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_moduletaskconfig`
--

LOCK TABLES `sci_moduletaskconfig` WRITE;
/*!40000 ALTER TABLE `sci_moduletaskconfig` DISABLE KEYS */;
INSERT INTO `sci_moduletaskconfig` VALUES (1,1),(1,2),(1,3),(1,4),(1,5),(1,6),(1,7),(1,8),(1,9),(1,10),(1,12),(1,13),(1,14),(1,15),(1,16),(1,17),(1,18),(2,1),(2,2),(2,3),(3,1),(3,2),(3,3),(3,7),(4,1),(4,2),(4,3),(5,11);
/*!40000 ALTER TABLE `sci_moduletaskconfig` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_opp_loi_duedate_detail`
--

DROP TABLE IF EXISTS `sci_opp_loi_duedate_detail`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_opp_loi_duedate_detail` (
  `O_ID` bigint(20) NOT NULL,
  `OPPORTUNITY_ID` bigint(20) DEFAULT NULL,
  `LOI_DUE_DATE` date DEFAULT NULL,
  `DATE_TYPE` int(11) DEFAULT NULL,
  `SEQUENCE_ID` bigint(20) DEFAULT NULL,
  `CREATED_DATE` date DEFAULT NULL,
  `DATE_REMARKS` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `LANG` varchar(200) DEFAULT NULL,
  `URL` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`O_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_opp_loi_duedate_detail`
--

LOCK TABLES `sci_opp_loi_duedate_detail` WRITE;
/*!40000 ALTER TABLE `sci_opp_loi_duedate_detail` DISABLE KEYS */;
/*!40000 ALTER TABLE `sci_opp_loi_duedate_detail` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_related_opportunity`
--

DROP TABLE IF EXISTS `sci_related_opportunity`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_related_opportunity` (
  `REL_OPP_ID` bigint(20) DEFAULT NULL,
  `OPPORTUNITY_ID` bigint(20) DEFAULT NULL,
  `RELATED_OPP_ID` bigint(20) DEFAULT NULL,
  `CREATED_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `OPPORTUNITYNAME` varchar(2000) DEFAULT '',
  `RELAION_NAME` varchar(1000) DEFAULT '',
  `ID` bigint(20) NOT NULL,
  `AWARD_ID` bigint(20) DEFAULT NULL,
  `DESCRIPTION` varchar(4000) DEFAULT '',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_related_opportunity`
--

LOCK TABLES `sci_related_opportunity` WRITE;
/*!40000 ALTER TABLE `sci_related_opportunity` DISABLE KEYS */;
/*!40000 ALTER TABLE `sci_related_opportunity` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_related_orgs_vendor`
--

DROP TABLE IF EXISTS `sci_related_orgs_vendor`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_related_orgs_vendor` (
  `REL_ORGS_VENDORID` bigint(20) NOT NULL,
  `VENDOR_ID` bigint(20) DEFAULT NULL,
  `VENDOR_FUNDINGBODY_NAME` varchar(2000) DEFAULT '',
  `CREATED_DATE` datetime DEFAULT NULL,
  PRIMARY KEY (`REL_ORGS_VENDORID`),
  UNIQUE KEY `VENDOR_ID_UK` (`VENDOR_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_related_orgs_vendor`
--

LOCK TABLES `sci_related_orgs_vendor` WRITE;
/*!40000 ALTER TABLE `sci_related_orgs_vendor` DISABLE KEYS */;
INSERT INTO `sci_related_orgs_vendor` VALUES (124,100007640,'Landsvirkjun','2020-04-10 00:00:00'),(125,100007641,'Minist&#x00E8;re de l\'Int&#233;rieur','2020-04-10 00:00:00'),(147,100007671,'Fondation du CHUM','2020-04-10 00:00:00'),(148,100007672,'L&#233;ka&#345;sk&#225; Fakulta v Plzni, Univerzita Karlova','2020-04-10 00:00:00'),(149,100007673,'ArcelorMittal Maizi&#x00E8;res Research','2020-04-10 00:00:00'),(150,100007674,'National Institute of Agricultural Botany','2020-04-10 00:00:00'),(151,100007676,'Asahi Group Holdings','2020-04-10 00:00:00'),(152,100007678,'Institute for Research in Biomedicine','2020-04-10 00:00:00'),(153,100007680,'Naval Medical Research Center','2020-04-10 00:00:00'),(154,100007682,'Simpson Strong-Tie','2020-04-10 00:00:00'),(155,100007683,'Nihon University','2020-04-10 00:00:00'),(156,100007685,'Aso Group','2020-04-10 00:00:00'),(157,100007686,'Aso Information System Company','2020-04-10 00:00:00'),(158,100007687,'Korean Diabetes Association','2020-04-10 00:00:00'),(159,100007688,'American University of Beirut','2020-04-10 00:00:00'),(160,100007690,'Centro de Matem&#225;tica e Aplica&#231;ões da Universidade da Beira Interior','2020-04-10 00:00:00'),(161,100007691,'Universidade da Beira Interior','2020-04-10 00:00:00'),(162,100007692,'ASSAB Pacific','2020-04-10 00:00:00'),(163,100007693,'King Chulalongkorn Memorial Hospital','2020-04-10 00:00:00'),(164,100007694,'AVRDC - The World Vegetable Center','2020-04-10 00:00:00'),(165,100007695,'Institute for New Economic Thinking','2020-04-10 00:00:00'),(166,100007697,'Society of General Internal Medicine','2020-04-10 00:00:00'),(167,100007700,'Miami Center for AIDS Research','2020-04-10 00:00:00'),(168,100007701,'American Society of Mechanical Engineers','2020-04-10 00:00:00'),(169,100007705,'Astellas Pharma Global Development','2020-04-10 00:00:00'),(170,100007706,'Banco Central de Venezuela','2020-04-10 00:00:00'),(171,100007708,'Center for Neurobehavioral Development','2020-04-10 00:00:00'),(172,100007711,'Barker Welfare Foundation','2020-04-10 00:00:00'),(173,100007712,'Bangkok University','2020-04-10 00:00:00'),(174,100007714,'Okinawa Institute of Science and Technology Promotion Corporation','2020-04-10 00:00:00'),(175,100007716,'Banyu Life Science Foundation International','2020-04-10 00:00:00'),(176,100009470,'Zoological Society of London','2020-04-10 00:00:00'),(177,100009472,'Funda&#231;&#x00E3;o Grupo Botic&#225;rio de Prote&#231;&#x00E3;o &#224; Natureza','2020-04-10 00:00:00'),(178,100009473,'Universidad de M&#225;laga','2020-04-10 00:00:00'),(179,100009474,'Senatsverwaltung für Bildung, Jugend und Wissenschaft, Berlin','2020-04-10 00:00:00'),(180,100009475,'Fuji Foundation for Protein Research','2020-04-10 00:00:00'),(181,100009477,'Nuclear Decommissioning Authority','2020-04-10 00:00:00'),(182,100009478,'Royal Society for the Prevention of Cruelty to Animals','2020-04-10 00:00:00'),(183,100009479,'Kungl. Vetenskaps- och Vitterhets-Samh&#228;llet i G&#246;teborg','2020-04-10 00:00:00'),(184,100009480,'John Cheek Trust','2020-04-10 00:00:00'),(185,100009481,'Stockholm Environment Institute','2020-04-10 00:00:00'),(186,100009482,'Santa Clara University','2020-04-10 00:00:00'),(187,100009485,'Yrkesh&#246;gskolan Novia','2020-04-10 00:00:00'),(188,100009486,'Havs- och Vattenmyndigheten','2020-04-10 00:00:00'),(189,100009487,'Stiftelsen Forska Utan Djurf&#246;rs&#246;k','2020-04-10 00:00:00'),(190,100009488,'Sveriges Meteorologiska och Hydrologiska Institut','2020-04-10 00:00:00'),(191,100009489,'Polarforskningssekretariatet','2020-04-10 00:00:00'),(192,100009490,'San Francisco General Hospital Foundation','2020-04-10 00:00:00'),(193,100009491,'Royal National Lifeboat Institution','2020-04-10 00:00:00'),(194,100009492,'Healthy Waterways','2020-04-10 00:00:00'),(195,100009494,'Research Corporation for Scientific Advancement','2020-04-10 00:00:00'),(196,100009496,'Oklahoma Agricultural Experiment Station','2020-04-10 00:00:00'),(197,100009502,'Montana Agricultural Experiment Station','2020-04-10 00:00:00'),(198,100009507,'Sam and Rose Stein Institute for Research on Aging','2020-04-10 00:00:00'),(199,100009509,'Energy Biosciences Institute','2020-04-10 00:00:00'),(200,100009510,'University of Hull','2020-04-10 00:00:00'),(201,100009511,'Fondazione Cassa di Risparmio di Foligno','2020-04-10 00:00:00'),(202,100009513,'Fondation Acteria','2020-04-10 00:00:00'),(203,100009514,'Fondation Marie et Alain Philippson','2020-04-10 00:00:00'),(204,100009515,'Fondation Simone et Cino Del Duca','2020-04-10 00:00:00'),(205,100009517,'Colcom Foundation','2020-04-10 00:00:00'),(206,100009518,'New York Council for the Humanities','2020-04-10 00:00:00'),(207,100009519,'Ottawa Hospital Research Institute','2020-04-10 00:00:00'),(208,100009520,'Rick Hansen Institute','2020-04-10 00:00:00'),(209,100009521,'Center for Latin American Studies, University of California, Berkeley','2020-04-10 00:00:00'),(210,100009522,'College of Agriculture and Life Sciences, Virginia Polytechnic Institute and State University','2020-04-10 00:00:00'),(211,100009523,'College of Computing','2020-04-10 00:00:00'),(212,100009524,'National Academy of Clinical Biochemistry','2020-04-10 00:00:00'),(213,100009525,'Beverage Institute for Health and Wellness','2020-04-10 00:00:00'),(214,100009526,'Amrita Vishwa Vidyapeetham University','2020-04-10 00:00:00'),(215,100009528,'Children’s Hospital of Michigan Foundation','2020-04-10 00:00:00'),(216,100009529,'COMSATS Institute of Information Technology','2020-04-10 00:00:00'),(217,100009531,'Crowley Carter Foundation','2020-04-10 00:00:00'),(218,100009532,'Ministerstvo Vnitra &#268;esk&#233; Republiky','2020-04-10 00:00:00'),(219,100009535,'Baton Rouge Area Foundation','2020-04-10 00:00:00'),(220,100009536,'Bergmark Foundation','2020-04-10 00:00:00'),(221,100009537,'Birmingham City University','2020-04-10 00:00:00'),(222,100009538,'Bishop\'s University','2020-04-10 00:00:00'),(223,100009539,'Life Sciences Institute','2020-04-10 00:00:00'),(224,100009540,'Frank A. Campini Foundation','2020-04-10 00:00:00'),(225,100009541,'Palosuojelurahasto','2020-04-10 00:00:00'),(226,100009542,'Joint Institute for the Study of the Atmosphere and Ocean','2020-04-10 00:00:00'),(227,100009543,'Society of Pediatric Psychology','2020-04-10 00:00:00'),(228,100009544,'Society for Community Research and Action','2020-04-10 00:00:00'),(229,100009545,'Society for General Psychology','2020-04-10 00:00:00'),(230,100009546,'Society for the Teaching of Psychology','2020-04-10 00:00:00'),(231,100009547,'Behavioral Neuroscience and Comparative Psychology','2020-04-10 00:00:00'),(232,100009548,'Developmental Psychology','2020-04-10 00:00:00'),(233,100009549,'Society for Personality and Social Psychology','2020-04-10 00:00:00'),(234,100009550,'Society of Clinical Psychology','2020-04-10 00:00:00'),(235,100009551,'Society of Consulting Psychology','2020-04-10 00:00:00'),(236,100009552,'Educational Psychology','2020-04-10 00:00:00'),(237,100009553,'Bundesanstalt für Materialforschung und -Prüfung','2020-04-10 00:00:00'),(238,100009554,'Nanchang Hangkong University','2020-04-10 00:00:00'),(239,100009555,'Henan Normal University','2020-04-10 00:00:00'),(240,100009556,'Association for Psychological Science','2020-04-10 00:00:00'),(241,100009557,'BAIF Development Research Foundation','2020-04-10 00:00:00'),(242,100009558,'British Deer Society','2020-04-10 00:00:00'),(243,100009561,'American Partnership for Eosinophilic Disorders','2020-04-10 00:00:00'),(244,100009562,'Berthold Leibinger Stiftung','2020-04-10 00:00:00'),(245,100009563,'Buckminster Fuller Institute','2020-04-10 00:00:00'),(246,100009564,'Global Foundation for Peroxisomal Disorders','2020-04-10 00:00:00'),(247,100009565,'International Bone Research Association','2020-04-10 00:00:00'),(248,100011281,'Intermountain West Joint Venture','2020-04-10 00:00:00'),(249,100011282,'Berkeley Natural History Museums','2020-04-10 00:00:00'),(250,100011284,'Valeant Pharmaceuticals International','2020-04-10 00:00:00'),(251,100011285,'Society of Forensic Toxicologists','2020-04-10 00:00:00'),(252,100011286,'International Society of Regulatory Toxicology and Pharmacology','2020-04-10 00:00:00'),(253,100011290,'International Biometric Society','2020-04-10 00:00:00'),(254,100011291,'American College of Toxicology','2020-04-10 00:00:00'),(255,100011292,'Society of Toxicology of Canada','2020-04-10 00:00:00'),(256,100011293,'Human Anatomy and Physiology Society','2020-04-10 00:00:00'),(257,100011294,'American Association of Clinical Anatomists','2020-04-10 00:00:00'),(258,100011295,'British Society of Toxicological Pathology','2020-04-10 00:00:00'),(259,100011296,'American Society for Veterinary Clinical Pathology','2020-04-10 00:00:00'),(260,100011297,'United States and Canadian Academy of Pathology','2020-04-10 00:00:00'),(261,100011298,'British Society for Colposcopy and Cervical Pathology','2020-04-10 00:00:00'),(262,100011301,'Children’s Hospital of Wisconsin Research Institute','2020-04-10 00:00:00'),(263,100011302,'Children’s Hospital Foundation','2020-04-10 00:00:00'),(264,100011303,'Daughters of Penelope Cancer Research Foundation of District 5','2020-04-10 00:00:00'),(265,100011304,'Central Lakes Trust','2020-04-10 00:00:00'),(266,100011306,'American Society for Investigative Pathology','2020-04-10 00:00:00'),(267,100011307,'Association for Molecular Pathology','2020-04-10 00:00:00'),(268,100011308,'Canadian Association of Pathologists','2020-04-10 00:00:00'),(269,100011309,'California Community Foundation','2020-04-10 00:00:00'),(270,100011310,'Rural and Environment Science and Analytical Services Division','2020-04-10 00:00:00'),(271,100011311,'JS Watson Trust','2020-04-10 00:00:00'),(272,100011312,'Grundy Educational Trust','2020-04-10 00:00:00'),(273,100011313,'Tokyo Biochemical Research Foundation','2020-04-10 00:00:00'),(274,100011314,'Sir John Fisher Foundation','2020-04-10 00:00:00'),(275,100011315,'Day of Difference Foundation','2020-04-10 00:00:00'),(276,100011316,'Birds Queensland','2020-04-10 00:00:00'),(277,100011317,'Centennial Coal','2020-04-10 00:00:00'),(278,100011318,'Association of Social Anthropologists of Aotearoa/New Zealand','2020-04-10 00:00:00'),(279,100011319,'Skin Treatment and Research Trust','2020-04-10 00:00:00'),(280,100011320,'Nunavut Wildlife Research Trust','2020-04-10 00:00:00'),(281,100011321,'Port of Brisbane','2020-04-10 00:00:00'),(282,100011322,'General Motors of Canada','2020-04-10 00:00:00'),(283,100011323,'African Fellowship Trust','2020-04-10 00:00:00'),(284,100011324,'Brian Cross Memorial Trust','2020-04-10 00:00:00'),(285,100011325,'Education Development Trust','2020-04-10 00:00:00'),(286,100011327,'Sandwell and West Birmingham Hospitals NHS Trust','2020-04-10 00:00:00'),(287,100011328,'Tennis Australia','2020-04-10 00:00:00'),(288,100011329,'Ceres Trust','2020-04-10 00:00:00'),(289,100011331,'Monique Weill-Caulier Trust','2020-04-10 00:00:00'),(290,100011332,'Innovation, Science and Economic Development Canada','2020-04-10 00:00:00'),(291,100011334,'Health Innovation, Investment and Research Office','2020-04-10 00:00:00'),(292,100011335,'Photonic Detection Systems','2020-04-10 00:00:00'),(293,100011336,'Polymerat','2020-04-10 00:00:00'),(294,100011337,'Quark Expeditions','2020-04-10 00:00:00'),(295,100011338,'AstraZeneca Schweiz','2020-04-10 00:00:00'),(296,100011339,'Roy and Christine Sturgis Charitable Trust','2020-04-10 00:00:00'),(297,100011344,'McDougall Trust','2020-04-10 00:00:00'),(298,100011345,'Northern Gulf Resource Management Group','2020-04-10 00:00:00'),(299,100011346,'Pacific Institute for Climate Solutions','2020-04-10 00:00:00'),(300,100011350,'Mosaic Company','2020-04-10 00:00:00'),(301,100011351,'University of Hartford','2020-04-10 00:00:00'),(302,100011361,'American Association of Physician Specialists','2020-04-10 00:00:00'),(303,100011363,'Australian Medical Association','2020-04-10 00:00:00'),(304,100011364,'New Zealand Medical Association','2020-04-10 00:00:00'),(305,100011365,'ACEM Foundation','2020-04-10 00:00:00'),(306,100011366,'New Zealand College of Public Health Medicine','2020-04-10 00:00:00'),(307,100011367,'Royal New Zealand College of General Practitioners','2020-04-10 00:00:00'),(308,100011368,'Royal Australasian College of Medical Administrators','2020-04-10 00:00:00'),(309,100011369,'Royal Australian and New Zealand College of Ophthalmologists','2020-04-10 00:00:00'),(310,100011370,'Royal New Zealand College of Urgent Care','2020-04-10 00:00:00'),(311,100011371,'Royal Australasian College of Surgeons','2020-04-10 00:00:00'),(312,100011372,'RCPA Foundation','2020-04-10 00:00:00'),(313,100011373,'International Agency for the Prevention of Blindness','2020-04-10 00:00:00'),(314,100011374,'Karst Waters Institute','2020-04-10 00:00:00'),(315,100011375,'Paleontological Research Institution','2020-04-10 00:00:00'),(316,100011376,'Glaucoma Australia','2020-04-10 00:00:00'),(317,100011377,'International Glaucoma Association','2020-04-10 00:00:00'),(318,100011378,'American Optometric Association','2020-04-10 00:00:00'),(319,100011379,'Society for Behavioral Neuroendocrinology','2020-04-10 00:00:00'),(320,100011380,'Washington State Society for Clinical Social Work','2020-04-10 00:00:00'),(321,100013083,'Austin Peay State University','2020-04-10 00:00:00'),(322,100013084,'Baldwin Wallace University','2020-04-10 00:00:00'),(323,100013085,'Barnard College','2020-04-10 00:00:00'),(324,100013087,'Association of College and University Housing Officers - International','2020-04-10 00:00:00'),(325,100013088,'National Association for Campus Activities Foundation','2020-04-10 00:00:00'),(326,100013090,'NASPA Foundation','2020-04-10 00:00:00'),(327,100013091,'NIRSA Foundation','2020-04-10 00:00:00'),(328,100013092,'Chevron Australia','2020-04-10 00:00:00'),(329,100013093,'Golden Key International Honour Society','2020-04-10 00:00:00'),(330,100013094,'American Association of Collegiate Registrars and Admissions Officers','2020-04-10 00:00:00'),(331,100013095,'American College Personnel Association - College Student Educators International','2020-04-10 00:00:00'),(332,100013096,'Aramark','2020-04-10 00:00:00'),(333,100013098,'Association of Fraternity/Sorority Advisors Foundation','2020-04-10 00:00:00'),(334,100013099,'Canadian Association of College and University Student Services','2020-04-10 00:00:00'),(335,100013100,'American College Health Foundation','2020-04-10 00:00:00'),(336,100013101,'National Research Council','2020-04-10 00:00:00'),(337,100013102,'Centre of Excellence for Integrative Brain Function, Australian Research Council','2020-04-10 00:00:00'),(338,100013103,'QIMR Berghofer Medical Research Institute','2020-04-10 00:00:00'),(339,100013104,'Scuola Internazionale Superiore di Studi Avanzati','2020-04-10 00:00:00'),(340,100013106,'Institut de Neurosciences des Syst&#x00E8;mes','2020-04-10 00:00:00'),(341,100013107,'RIKEN Brain Science Institute','2020-04-10 00:00:00'),(342,100013108,'Australian College of Optometry','2020-04-10 00:00:00'),(343,100013109,'Helmholtz Virtuelles Institut Multifunktionale Biomaterialien für die Medizin','2020-04-10 00:00:00'),(344,100013110,'Helmholtz-Zentrum Berlin für Materialien und Energie','2020-04-10 00:00:00'),(345,100013111,'Materials Research Science and Engineering Center, Harvard University','2020-04-10 00:00:00'),(346,100013112,'Raymond and Beverly Sackler Foundation','2020-04-10 00:00:00'),(347,100013113,'Stanley Center for Psychiatric Research, Broad Institute','2020-04-10 00:00:00'),(348,100013114,'Broad Institute','2020-04-10 00:00:00'),(349,100013115,'Great Lakes Research Consortium','2020-04-10 00:00:00'),(350,100013116,'University Research Committee, Emory University','2020-04-10 00:00:00'),(351,100013119,'Joint Center for Aerospace Technology Innovation','2020-04-10 00:00:00'),(352,100013120,'Stanford Center on the Demography and Economics of Health and Aging, Stanford University','2020-04-10 00:00:00'),(353,100013121,'Sydney West Translational Cancer Research Centre','2020-04-10 00:00:00'),(354,100013131,'Walter Reed National Military Medical Center','2020-04-10 00:00:00'),(355,100013134,'Military Health System','2020-04-10 00:00:00'),(356,100013141,'Virginia Agricultural Experiment Station, Virginia Polytechnic Institute and State University','2020-04-10 00:00:00'),(357,100013142,'Translational Science Center, Wake Forest University','2020-04-10 00:00:00'),(358,100013143,'Manton Center for Orphan Disease Research, Boston Children\'s Hospital','2020-04-10 00:00:00'),(359,100013144,'Parkinson Alliance','2020-04-10 00:00:00'),(360,100013145,'Chemical Sciences, Geosciences, and Biosciences Division','2020-04-10 00:00:00'),(361,100013146,'Harvard Graduate School of Education','2020-04-10 00:00:00'),(362,100013147,'Center for Undergraduate Research and Scholarship, Bowling Green State University','2020-04-10 00:00:00'),(363,100013148,'Mendez National Institute of Transplantation Foundation','2020-04-10 00:00:00'),(364,100013149,'Meningioma Mommas','2020-04-10 00:00:00'),(365,100013150,'Michael and Karyn Goldstein Cancer Research Fund','2020-04-10 00:00:00'),(366,100013151,'Edmonton Community Foundation','2020-04-10 00:00:00'),(367,100013182,'Weldon FOP Research Fund','2020-04-10 00:00:00'),(368,100013183,'Swine Innovation Porc','2020-04-10 00:00:00'),(369,100013184,'United Way of the Lower Mainland','2020-04-10 00:00:00'),(370,100013185,'Florida Institute of Technology','2020-04-10 00:00:00'),(371,100013186,'Graduate School, University of Colorado Boulder','2020-04-10 00:00:00'),(372,100013187,'Randy Shaver Cancer Research and Community Fund','2020-04-10 00:00:00'),(373,100013188,'R&#233;seau de recherche portant sur les interventions en sciences infirmi&#x00E8;res du Qu&#233;bec','2020-04-10 00:00:00'),(374,100013189,'Margaret and Herman Sokol Institute for Pharmaceutical Life Sciences, Montclair State University','2020-04-10 00:00:00'),(375,100013190,'Sotrem-Maltech','2020-04-10 00:00:00'),(376,100013191,'South Carolina Center of Economic Excellence','2020-04-10 00:00:00'),(377,100013192,'Carolina Population Center, University of North Carolina at Chapel Hill','2020-04-10 00:00:00'),(378,100013193,'Heflin Center for Genomic Science, University of Alabama at Birmingham','2020-04-10 00:00:00'),(379,100013194,'Shell Canada','2020-04-10 00:00:00'),(380,100013195,'William M. Wood Foundation','2020-04-10 00:00:00'),(381,100013196,'Western Canada Research Grid','2020-04-10 00:00:00'),(382,100013197,'Canada\'s Michael Smith Genome Sciences Centre','2020-04-10 00:00:00'),(383,100013198,'Banff Centre for Arts and Creativity','2020-04-10 00:00:00'),(384,100013199,'Ministry of Economic Development and Trade, Government of Alberta','2020-04-10 00:00:00'),(385,100013201,'Cargill Foundation','2020-04-10 00:00:00'),(386,100013202,'Touro University California','2020-04-10 00:00:00'),(387,100013203,'Montana Wheat and Barley Committee','2020-04-10 00:00:00'),(388,100013204,'Wheat Marketing Center','2020-04-10 00:00:00'),(389,100013205,'University Research Council, DePaul University','2020-04-10 00:00:00'),(390,100013206,'Food Institutional Research Measure','2020-04-10 00:00:00'),(391,100013207,'Reckitt Benckiser Pharmaceuticals','2020-04-10 00:00:00'),(392,100013208,'Renishaw','2020-04-10 00:00:00'),(393,100013209,'Saskatchewan Pulse Growers','2020-04-10 00:00:00'),(394,100013210,'Saskatchewan Canola Development Commission','2020-04-10 00:00:00'),(395,100013211,'Incorporated Research Institutions for Seismology','2020-04-10 00:00:00'),(396,100013212,'Centre in Green Chemistry and Catalysis','2020-04-10 00:00:00'),(397,100013213,'ARUP Institute for Clinical and Experimental Pathology','2020-04-10 00:00:00'),(398,100013214,'BEACON Biorefining Centre of Excellence','2020-04-10 00:00:00'),(399,100013215,'Beaufort Regional Environmental Assessment','2020-04-10 00:00:00'),(400,100013216,'Imperial Oil Limited','2020-04-10 00:00:00'),(401,100013217,'Fisheries Joint Management Committee','2020-04-10 00:00:00'),(402,100013218,'Gwich\'in Renewable Resources Board','2020-04-10 00:00:00'),(403,100013219,'Environment and Natural Resources','2020-04-10 00:00:00'),(404,100013220,'Ultragenyx Pharmaceutical','2020-04-10 00:00:00'),(405,100013221,'Univation Technologies','2020-04-10 00:00:00'),(406,100013222,'Walter Chapin Simpson Center for the Humanities, University of Washington','2020-04-10 00:00:00'),(407,100013223,'PTC Therapeutics','2020-04-10 00:00:00'),(408,100013224,'National Fragile X Foundation','2020-04-10 00:00:00'),(409,100013225,'Nationalt Center for Fødevarer og Jordbrug, Aarhus Universitet','2020-04-10 00:00:00'),(410,100013226,'Les Laboratories Pierre Fabre','2020-04-10 00:00:00'),(411,100013227,'Health Promotion Administration, Ministry of Health and Welfare','2020-04-10 00:00:00'),(412,100013228,'R&#233;seau qu&#233;b&#233;cois de recherche sur le vieillissement','2020-04-10 00:00:00'),(413,100013229,'Glasgow Centre for Population Health','2020-04-10 00:00:00'),(414,100013230,'Center for Global Peace and Conflict Studies, School of Social Sciences, University of California, Irvine','2020-04-10 00:00:00'),(415,100007718,'Department of Economics, University of Oxford','2020-04-10 00:00:00'),(416,100007719,'University of East London','2020-04-10 00:00:00'),(417,100007724,'Oxford Centre for the Analysis of Resource Rich Economies','2020-04-10 00:00:00'),(418,100007725,'Astrobiology Research Trust','2020-04-10 00:00:00'),(419,100007726,'Astrophysics Science Division','2020-04-10 00:00:00'),(420,100007728,'Pennsylvania Athletic Trainers\' Society','2020-04-10 00:00:00'),(421,100007729,'Atmel Corporation','2020-04-10 00:00:00'),(422,100007730,'American Medical Systems','2020-04-10 00:00:00'),(423,100007731,'Endo International','2020-04-10 00:00:00'),(424,100007732,'American Macular Degeneration Foundation','2020-04-10 00:00:00'),(425,100007733,'American Pacific Corporation','2020-04-10 00:00:00'),(426,100007734,'American Sports Medicine Institute','2020-04-10 00:00:00'),(427,100007735,'American Urogynecologic Society','2020-04-10 00:00:00'),(428,100007736,'American Welding Society','2020-04-10 00:00:00'),(429,100007737,'St. Jude Children\'s Research Hospital','2020-04-10 00:00:00'),(430,100007738,'Foundation for Economic Education','2020-04-10 00:00:00'),(431,100007739,'Aspen Center for Physics','2020-04-10 00:00:00'),(432,100007740,'Beaumont Health System','2020-04-10 00:00:00'),(433,100007742,'BioClinica','2020-04-10 00:00:00'),(434,100007743,'Maryland Vegetable Growers Association','2020-04-10 00:00:00'),(435,100007744,'University of Maryland Extension','2020-04-10 00:00:00'),(436,100007745,'Massachusetts Lions Eye Research Fund','2020-04-10 00:00:00'),(437,100007748,'Land Economics Foundation','2020-04-10 00:00:00'),(438,100007749,'Lambda Alpha International','2020-04-10 00:00:00'),(439,100007751,'AXISCADES','2020-04-10 00:00:00'),(440,100007753,'It&#228;-Suomen Yliopisto','2020-04-10 00:00:00'),(441,100007754,'Mintek','2020-04-10 00:00:00'),(442,100007755,'Division of Agriculture, University of Arkansas System','2020-04-10 00:00:00'),(443,100007756,'University of Arkansas','2020-04-10 00:00:00'),(444,100007758,'Frances McClelland Institute for Children, Youth, and Families','2020-04-10 00:00:00'),(445,100007759,'Dorothy M. Davis Heart and Lung Research Institute','2020-04-10 00:00:00'),(446,100007760,'College of Medicine Office of Research, Ohio State University','2020-04-10 00:00:00'),(447,100007762,'Communications Technology Laboratory','2020-04-10 00:00:00'),(448,100007763,'Engineering Laboratory','2020-04-10 00:00:00'),(449,100007764,'Information Technology Laboratory','2020-04-10 00:00:00'),(450,100007766,'Kansas State University Research Foundation','2020-04-10 00:00:00'),(451,100007767,'Material Measurement Laboratory','2020-04-10 00:00:00'),(452,100007768,'NIST Center for Neutron Research','2020-04-10 00:00:00'),(453,100007769,'Physical Measurement Laboratory','2020-04-10 00:00:00'),(454,100007771,'Slaski Uniwersytet Medyczny','2020-04-10 00:00:00'),(455,100007772,'Danone Research Centre for Specialised Nutrition','2020-04-10 00:00:00'),(456,100007773,'Danone','2020-04-10 00:00:00'),(457,100007774,'Instituto de Ciencia y Tecnolog&#237;a del Distrito Federal','2020-04-10 00:00:00'),(458,100007776,'Deanship of Academic Research, University of Jordan','2020-04-10 00:00:00'),(459,100007777,'Biocon','2020-04-10 00:00:00'),(460,100007778,'Centre for Engineering Research and Development','2020-04-10 00:00:00'),(461,100007780,'Indian Institute of Science','2020-04-10 00:00:00'),(462,100007785,'Jinan Science and Technology Bureau','2020-04-10 00:00:00'),(463,100007786,'National Center for Child Health and Development','2020-04-10 00:00:00'),(464,100007787,'National Research Centre','2020-04-10 00:00:00'),(465,100007792,'Society of Critical Care Medicine','2020-04-10 00:00:00'),(466,100007794,'Stiftelsen Oscar och Lili Lamms Minne','2020-04-10 00:00:00'),(467,100007795,'Stowers Institute for Medical Research','2020-04-10 00:00:00'),(468,100007796,'Huaihai Institute of Technology','2020-04-10 00:00:00'),(469,100007798,'Helsingin Yliopiston Tiedes&#228;&#228;ti&#246;','2020-04-10 00:00:00'),(470,100007799,'Center for the Study of Women, University of California, Los Angeles','2020-04-10 00:00:00'),(471,100007800,'Diabetes Research and Training Center','2020-04-10 00:00:00'),(472,100007801,'Fundaci&#243;n S&#233;neca','2020-04-10 00:00:00'),(473,100007802,'Institute for Fermentation, Osaka','2020-04-10 00:00:00'),(474,100007804,'Oregon Clinical and Translational Research Institute','2020-04-10 00:00:00'),(477,100007807,'MGH Institute of Health Professions','2020-04-10 00:00:00'),(478,100007808,'Oklahoma Soil Fertility Research and Education Advisory Board','2020-04-10 00:00:00'),(479,100007814,'Emory Alcohol and Lung Biology Center, Emory University School of Medicine','2020-04-10 00:00:00'),(480,100007815,'District of Columbia Developmental Center for AIDS Research','2020-04-10 00:00:00'),(481,100007816,'Alcon','2020-04-10 00:00:00'),(482,100007817,'Alcon Research Institute','2020-04-10 00:00:00'),(483,100007818,'Alere','2020-04-10 00:00:00'),(484,100007821,'AlloSource','2020-04-10 00:00:00'),(485,100009567,'Budapesti Muszaki &#233;s Gazdas&#225;gtudom&#225;nyi Egyetem','2020-04-10 00:00:00'),(486,100009568,'Ashikaga Institute of Technology','2020-04-10 00:00:00'),(487,100009569,'University of Birjand','2020-04-10 00:00:00'),(488,100009571,'Universidad Nacional de San Luis','2020-04-10 00:00:00'),(489,100009573,'Universidad Nacional de Rosario','2020-04-10 00:00:00'),(490,100009574,'Univerzitet u Beogradu','2020-04-10 00:00:00'),(491,100009576,'Kenneth Rainin Foundation','2020-04-10 00:00:00'),(492,100009578,'Mizutani Foundation for Glycoscience','2020-04-10 00:00:00'),(493,100009580,'International Foundation for Research in Experimental Economics','2020-04-10 00:00:00'),(494,100009581,'International Society for the Study of the Lumbar Spine','2020-04-10 00:00:00'),(495,100009582,'NBIA Disorders Association','2020-04-10 00:00:00'),(496,100009583,'Network for Studies on Pensions, Aging and Retirement','2020-04-10 00:00:00'),(497,100009584,'Toyota Foundation','2020-04-10 00:00:00'),(498,100009585,'Global Center for Food Systems Innovation','2020-04-10 00:00:00'),(499,100009586,'Voestalpine','2020-04-10 00:00:00'),(500,100009587,'School of Veterinary Science, Shiraz University','2020-04-10 00:00:00'),(501,100009588,'Svenska J&#228;garef&#246;rbundet','2020-04-10 00:00:00'),(502,100009589,'Jadavpur University','2020-04-10 00:00:00'),(503,100009590,'Fundacja dla Uniwersytetu Medycznego w &#321;odzi','2020-04-10 00:00:00'),(504,100009591,'North Carolina Agricultural Foundation','2020-04-10 00:00:00'),(505,100009592,'North Carolina Nursery and Landscape Association','2020-04-10 00:00:00'),(506,100009593,'Dyslexia Foundation','2020-04-10 00:00:00'),(507,100009594,'Southampton Solent University','2020-04-10 00:00:00'),(508,100009595,'Lake County Community Foundation','2020-04-10 00:00:00'),(509,100009596,'Community Foundation of Will County','2020-04-10 00:00:00'),(510,100009597,'Springbroad Foundation','2020-04-10 00:00:00'),(511,100009598,'Rosalinde and Arthur Gilbert Foundation','2020-04-10 00:00:00'),(512,100009600,'Greater Philadelphia Law Library Association','2020-04-10 00:00:00'),(513,100009601,'Ohio Regional Association of Law Libraries','2020-04-10 00:00:00'),(514,100009604,'Stichting af Jochnick Foundation','2020-04-10 00:00:00'),(515,100009605,'National Association for Armenian Studies and Research','2020-04-10 00:00:00'),(516,100009606,'Arabian Gulf University','2020-04-10 00:00:00'),(517,100009607,'McDonnell Center for Systems Neuroscience','2020-04-10 00:00:00'),(518,100009608,'Western Washington University','2020-04-10 00:00:00'),(519,100009609,'University and College Union','2020-04-10 00:00:00'),(520,100009610,'Agri-Food and Veterinary Authority','2020-04-10 00:00:00'),(521,100009613,'Universit&#228;t Hohenheim','2020-04-10 00:00:00'),(522,100009615,'Uniwersytet Rolniczy im. Hugona Ko&#322;&#322;ataja w Krakowie','2020-04-10 00:00:00'),(523,100009635,'Wildlife Conservation Society Argentina','2020-04-10 00:00:00'),(524,100009636,'Biomet Deutschland','2020-04-10 00:00:00'),(525,100009638,'Physics Division, National Center for Theoretical Sciences','2020-04-10 00:00:00'),(526,100009639,'Mathematics Division, National Center for Theoretical Sciences','2020-04-10 00:00:00'),(527,100009640,'City West Water','2020-04-10 00:00:00'),(528,100009641,'South East Water','2020-04-10 00:00:00'),(529,100009642,'Yarra Valley Water','2020-04-10 00:00:00'),(530,100009646,'Gulf Research Program','2020-04-10 00:00:00'),(531,100009647,'Ministry of Health','2020-04-10 00:00:00'),(532,100009648,'National Health Fund','2020-04-10 00:00:00'),(533,100009649,'University of the West Indies','2020-04-10 00:00:00'),(534,100009650,'Forest Conservation Fund','2020-04-10 00:00:00'),(535,100009651,'Parkinson\'s Australia','2020-04-10 00:00:00'),(536,100009652,'Associa&#231;&#x00E3;o Brasil Parkinson','2020-04-10 00:00:00'),(537,100009653,'Leukaemia Foundation of Queensland','2020-04-10 00:00:00'),(538,100009655,'Sunovion','2020-04-10 00:00:00'),(539,100009657,'FSHD Global Research Foundation','2020-04-10 00:00:00'),(540,100009658,'American Pain Society','2020-04-10 00:00:00'),(541,100009659,'Guangzhou Medical University','2020-04-10 00:00:00'),(542,100009660,'London School of Hygiene and Tropical Medicine','2020-04-10 00:00:00'),(543,100009661,'Addi and Cassi Fund','2020-04-10 00:00:00'),(544,100009662,'Association pour la Recherche Th&#233;rapeutique Anti-Canc&#233;reuse','2020-04-10 00:00:00'),(545,100009664,'Sociedad Española de Cardiolog&#237;a','2020-04-10 00:00:00'),(546,100009665,'Vehicle Racing Commemorative Foundation','2020-04-10 00:00:00'),(547,100009666,'Salt Science Research Foundation','2020-04-10 00:00:00'),(548,100009667,'School of Medicine, Kyorin University','2020-04-10 00:00:00'),(549,100009668,'Paul und Helmi Nitsch-Foundation','2020-04-10 00:00:00'),(550,100009669,'Ziering Family Foundation','2020-04-10 00:00:00'),(551,100009671,'Arkansas Children’s Hospital Research Institute','2020-04-10 00:00:00'),(552,100009673,'Gun och Bertil Stohnes Stiftelse','2020-04-10 00:00:00'),(553,100009674,'Institut d\'Investigaci&#243; Sanit&#224;ria Pere Virgili','2020-04-10 00:00:00'),(554,100009675,'Department of Environment, Land, Water and Planning, State Government of Victoria','2020-04-10 00:00:00'),(555,100009676,'Caltech Associates','2020-04-10 00:00:00'),(556,100009677,'Ed Evans Foundation','2020-04-10 00:00:00'),(557,100009678,'Scandinavian Society for Antimicrobial Therapy','2020-04-10 00:00:00'),(558,100009679,'Association of American Railroads','2020-04-10 00:00:00'),(559,100009680,'Yale Liver Center','2020-04-10 00:00:00'),(560,100009681,'Parkinson’s ACT','2020-04-10 00:00:00'),(561,100009683,'Parkinson\'s Queensland','2020-04-10 00:00:00'),(562,100009684,'Parkinson’s Western Australia','2020-04-10 00:00:00'),(563,100009685,'Parkinson’s Victoria','2020-04-10 00:00:00'),(564,100009687,'Nacey Maggioncalda Foundation','2020-04-10 00:00:00'),(565,100011381,'British Association of Audiovestibular Physicians','2020-04-10 00:00:00'),(1293,100013728,'District of Columbia Space Grant Consortium','2020-04-10 00:00:00'),(1294,100013729,'International Association for Applied Econometrics','2020-04-10 00:00:00'),(1295,100013730,'Henry and Marilyn Taub Foundation','2020-04-10 00:00:00'),(1296,100013731,'Shell United States','2020-04-10 00:00:00'),(1297,100013732,'Injury Science Center, University of Pennsylvania','2020-04-10 00:00:00'),(1298,100013733,'Ipsen Biopharmaceuticals','2020-04-10 00:00:00'),(1299,100013734,'Grain Foods Foundation','2020-04-10 00:00:00'),(1300,100013735,'Kentucky Science and Engineering Foundation','2020-04-10 00:00:00'),(1301,100013736,'Julian Schwinger Foundation for Physics Research','2020-04-10 00:00:00'),(1302,100013737,'International Copper Association','2020-04-10 00:00:00'),(1303,100013738,'Pacira Pharmaceuticals','2020-04-10 00:00:00'),(1304,100013739,'Pfizer Canada','2020-04-10 00:00:00'),(1305,100013740,'Plastic Surgery Research Council','2020-04-10 00:00:00'),(1306,100013741,'Royal Australian and New Zealand College of Radiologists','2020-04-10 00:00:00'),(1307,100013743,'World Cancer Research Fund International','2020-04-10 00:00:00'),(1308,100013744,'International Society for the Advancement of Spine Surgery','2020-04-10 00:00:00'),(1309,100013745,'Australian and New Zealand Association for Health Professional Educators','2020-04-10 00:00:00'),(1310,100013747,'ACSM Foundation','2020-04-10 00:00:00'),(1311,100013748,'Hope Foundation','2020-04-10 00:00:00'),(1312,100013749,'International Society for Music Education','2020-04-10 00:00:00'),(1313,100013750,'CPA Australia','2020-04-10 00:00:00'),(1314,100013751,'Stroke Foundation','2020-04-10 00:00:00'),(1315,100013752,'New Zealand Wound Care Society','2020-04-10 00:00:00'),(1316,100013753,'Institute for Quantitative Social Science, Harvard University','2020-04-10 00:00:00'),(1317,100013754,'Fondation pour la recherche juridique','2020-04-10 00:00:00'),(1318,100013756,'State Trustees Australia Foundation','2020-04-10 00:00:00'),(1319,100013762,'Aurora Research Institute','2020-04-10 00:00:00'),(1320,100013763,'Chicago Dermatological Society','2020-04-10 00:00:00'),(1321,100013764,'Ontario Society of Occupational Therapists','2020-04-10 00:00:00'),(1322,100013765,'National Instruments Corporation','2020-04-10 00:00:00'),(1323,100013766,'North East Association for Institutional Research','2020-04-10 00:00:00'),(1324,100013767,'ACEA Biosciences','2020-04-10 00:00:00'),(1325,100013770,'Societies for Pediatric Urology','2020-04-10 00:00:00'),(1326,100001658,'Group Health Foundation','2020-04-10 00:00:00'),(1327,100006336,'Cornerstone Specialty Wood Products','2020-04-10 00:00:00'),(1328,100008116,'Diabetes Research Center','2020-04-10 00:00:00'),(1329,100008118,'Grantham Foundation for the Protection of the Environment','2020-04-10 00:00:00'),(1330,100008119,'Greenberg Medical Research Institute','2020-04-10 00:00:00'),(1331,100008120,'Houston Advanced Research Center','2020-04-10 00:00:00'),(1332,100008126,'Dana-Farber/Harvard Cancer Center','2020-04-10 00:00:00'),(1333,100008127,'DePuy Synthes Spine','2020-04-10 00:00:00'),(1334,100008128,'H.J. Heinz Company Foundation','2020-04-10 00:00:00'),(1335,100008129,'Helsinn','2020-04-10 00:00:00'),(1336,100008130,'Helsinn Therapeutics','2020-04-10 00:00:00'),(1337,100008133,'Dudley Allen Sargent Research Fund','2020-04-10 00:00:00'),(1338,100008136,'Case Western Reserve University','2020-04-10 00:00:00'),(1339,100008140,'Pritzker School of Medicine','2020-04-10 00:00:00'),(1340,100008141,'Princeton Institute for International and Regional Studies','2020-04-10 00:00:00'),(1341,100008142,'School of Aquatic and Fishery Sciences','2020-04-10 00:00:00'),(1342,100008143,'Oregon National Primate Research Center','2020-04-10 00:00:00'),(1343,100008144,'Alaska Department of Fish and Game','2020-04-10 00:00:00'),(1344,100008145,'Florida Agency for Health Care Administration','2020-04-10 00:00:00'),(1345,100008146,'Nambucca Shire Council','2020-04-10 00:00:00'),(1346,100008147,'Clarence Valley Council','2020-04-10 00:00:00'),(1347,100008149,'Royal College of Pathologists of Australasia','2020-04-10 00:00:00'),(1348,100008150,'Brewster Foundation','2020-04-10 00:00:00'),(1349,100008151,'Butz Foundation','2020-04-10 00:00:00'),(1350,100008153,'Awesome Foundation for the Arts and Sciences','2020-04-10 00:00:00'),(1351,100008154,'Canadian Allergy, Asthma and Immunology Foundation','2020-04-10 00:00:00'),(1352,100008155,'Carolinas HealthCare System','2020-04-10 00:00:00'),(1353,100008156,'Carolinas HealthCare Foundation','2020-04-10 00:00:00'),(1354,100008157,'Charles Pankow Foundation','2020-04-10 00:00:00'),(1355,100008159,'Office for Coastal Management','2020-04-10 00:00:00'),(1356,100008160,'National Estuarine Research Reserve System','2020-04-10 00:00:00'),(1357,100008162,'Fu Foundation School of Engineering and Applied Science','2020-04-10 00:00:00'),(1358,100008164,'Advanced Foods and Materials Canada','2020-04-10 00:00:00'),(1359,100008166,'Charitable Leadership Foundation','2020-04-10 00:00:00'),(1360,100008167,'Hennepin County Medical Center','2020-04-10 00:00:00'),(1361,100008168,'Hennepin Health Foundation','2020-04-10 00:00:00'),(1362,100008169,'Minneapolis Medical Research Foundation','2020-04-10 00:00:00'),(1363,100008170,'Minneapolis Heart Institute','2020-04-10 00:00:00'),(1364,100008171,'Minneapolis Heart Institute Foundation','2020-04-10 00:00:00'),(1365,100008173,'Intermountain Research and Medical Foundation','2020-04-10 00:00:00'),(1366,100008174,'Community Foundation','2020-04-10 00:00:00'),(1367,100008175,'Coypu Foundation','2020-04-10 00:00:00'),(1368,100008177,'Davis Educational Foundation','2020-04-10 00:00:00'),(1369,100008178,'Davis Family Foundation','2020-04-10 00:00:00'),(1370,100008180,'Capita Foundation','2020-04-10 00:00:00'),(1371,100008181,'Cedar Tree Foundation','2020-04-10 00:00:00'),(1372,100008182,'Children\'s Specialists Foundation','2020-04-10 00:00:00'),(1373,100008184,'COPD Foundation','2020-04-10 00:00:00'),(1374,100008185,'Ontario Innovation Trust','2020-04-10 00:00:00'),(1375,100008186,'D. Warren Brown Family Foundation','2020-04-10 00:00:00'),(1376,100008187,'Histogenics','2020-04-10 00:00:00'),(1377,100008188,'Hollywood Private Hospital Research Foundation','2020-04-10 00:00:00'),(1378,100008190,'Holsworth Wildlife Research Endowment','2020-04-10 00:00:00'),(1379,100008192,'Automotive Research Center','2020-04-10 00:00:00'),(1380,100008193,'Darden School of Business, University of Virginia','2020-04-10 00:00:00'),(1381,100008194,'Darden School Foundation','2020-04-10 00:00:00'),(1382,100008195,'Bradley University','2020-04-10 00:00:00'),(1383,100008196,'M&#233;decins Sans Fronti&#x00E8;res','2020-04-10 00:00:00'),(1384,100008202,'Crisman Institute for Petroleum Research, Texas A and M University','2020-04-10 00:00:00'),(1385,100008203,'Batchworth Trust','2020-04-10 00:00:00'),(1386,100008204,'B. John Garrick Foundation for the Advancement of the Risk Sciences','2020-04-10 00:00:00'),(1387,100008205,'Auckland University of Technology, New Zealand','2020-04-10 00:00:00'),(1388,100008207,'AstraZeneca Canada','2020-04-10 00:00:00'),(1389,100008208,'Courant Institute of Mathematical Sciences, New York University','2020-04-10 00:00:00'),(1390,100008211,'Drexel University','2020-04-10 00:00:00'),(1391,100008212,'College of Medicine, Drexel University','2020-04-10 00:00:00'),(1392,100008215,'Essex Disabled People\'s Association','2020-04-10 00:00:00'),(1393,100008216,'Jonsson Cancer Center Foundation','2020-04-10 00:00:00'),(1394,100008217,'Emch Foundation','2020-04-10 00:00:00'),(1395,100008218,'Embry-Riddle Aeronautical University','2020-04-10 00:00:00'),(1396,100008219,'British Interplanetary Society','2020-04-10 00:00:00'),(1397,100008221,'Cure Starts Now Foundation','2020-04-10 00:00:00'),(1398,100008222,'Ben and Catherine Ivy Foundation','2020-04-10 00:00:00'),(1399,100008223,'Association of Academic Physiatrists','2020-04-10 00:00:00'),(1400,100008224,'Association of Schools of Allied Health Professions','2020-04-10 00:00:00'),(1401,100009955,'Monsanto Company','2020-04-10 00:00:00'),(1402,100009956,'United States African Development Foundation','2020-04-10 00:00:00'),(1403,100009957,'Adhesives and Sealant Council','2020-04-10 00:00:00'),(1404,100009958,'Oxford Optronix','2020-04-10 00:00:00'),(1405,100009959,'Western Surgical Association','2020-04-10 00:00:00'),(1406,100009961,'American College of Veterinary Surgeons Foundation','2020-04-10 00:00:00'),(1407,100009962,'British Veterinary Association','2020-04-10 00:00:00'),(1408,100009963,'School of Dentistry, University of Utah','2020-04-10 00:00:00'),(1409,100009964,'American Association of Zoo Veterinarians','2020-04-10 00:00:00'),(1410,100009965,'American College of Physicians','2020-04-10 00:00:00'),(1411,100009966,'Center for Health Administration Studies','2020-04-10 00:00:00'),(1412,100009967,'British Society of Gerontology','2020-04-10 00:00:00'),(1413,100009968,'Society for Psychical Research','2020-04-10 00:00:00'),(1414,100009969,'Society for Applied Microbiology','2020-04-10 00:00:00'),(1415,100009970,'St. Lawrence University','2020-04-10 00:00:00'),(1416,100009971,'Andrews University','2020-04-10 00:00:00'),(1417,100009972,'California State University, Chico','2020-04-10 00:00:00'),(1418,100009973,'California State University Channel Islands','2020-04-10 00:00:00'),(1419,100009974,'California State University, Bakersfield','2020-04-10 00:00:00'),(1420,100009976,'American Association of Avian Pathologists Foundation','2020-04-10 00:00:00'),(1421,100009977,'Lawrence Foundation','2020-04-10 00:00:00'),(1422,100009978,'Varkey Foundation','2020-04-10 00:00:00'),(1423,100009979,'College of Science, George Mason University','2020-04-10 00:00:00'),(1424,100009980,'Old Dominion University','2020-04-10 00:00:00'),(1425,100009982,'Humane Research Trust','2020-04-10 00:00:00'),(1426,100009983,'Sierra Health Foundation','2020-04-10 00:00:00'),(1427,100009984,'ME Association','2020-04-10 00:00:00'),(1428,100009985,'Parkinson\'s Association of Ireland','2020-04-10 00:00:00'),(1429,100009986,'Sports Medicine Australia Research Foundation','2020-04-10 00:00:00'),(1430,100009987,'International Society for Prosthetics and Orthotics','2020-04-10 00:00:00'),(1431,100009989,'Nova Scotia Research Innovation Trust','2020-04-10 00:00:00'),(1432,100009990,'Collaborative Spine Research Foundation','2020-04-10 00:00:00'),(1433,100009991,'Cranberry Institute','2020-04-10 00:00:00'),(1434,100009992,'Seattle Children\'s Research Institute','2020-04-10 00:00:00'),(1435,100009993,'Center for Clinical and Translational Research','2020-04-10 00:00:00'),(1436,100009994,'Center for Child Health, Behavior and Development','2020-04-10 00:00:00'),(1437,100009995,'Treuman Katz Center for Pediatric Bioethics','2020-04-10 00:00:00'),(1438,100009996,'Sigma-Tau Pharmaceuticals','2020-04-10 00:00:00'),(1439,100009997,'International Headache Society','2020-04-10 00:00:00'),(1672,100013865,'South African Litchi Growers\' Association','2020-04-10 00:00:00'),(1673,100013954,'Astor Foundation','2020-04-10 00:00:00'),(1674,100013955,'Bioprocessing Research Industry Club','2020-04-10 00:00:00'),(1675,100013956,'Birmingham and the Black Country Comprehensive Local Research Network','2020-04-10 00:00:00'),(1676,100013957,'British Association of Chartered Physiotherapists in Amputee Rehabilitation','2020-04-10 00:00:00'),(1677,100013958,'Canadian Association of Petroleum Producers','2020-04-10 00:00:00'),(1678,100006338,'Zimmer','2020-04-10 00:00:00'),(1679,100006346,'Hope for Depression Research Foundation','2020-04-10 00:00:00'),(1680,100006347,'Denver Botanic Gardens','2020-04-10 00:00:00'),(1681,100006348,'Delaney AIDS Research Enterprise','2020-04-10 00:00:00'),(1682,100006349,'Deborah Bunn Alley Ovarian Cancer Research Foundation','2020-04-10 00:00:00'),(1683,100006350,'Data Fusion Corporation','2020-04-10 00:00:00'),(1684,100006351,'North Dakota State University','2020-04-10 00:00:00'),(1685,100006352,'Virginia and D.K. Ludwig Fund for Cancer Research','2020-04-10 00:00:00'),(1686,100006353,'Charles Stark Draper Laboratory','2020-04-10 00:00:00'),(1687,100006354,'Butler University','2020-04-10 00:00:00'),(1688,100006359,'Robert M. McCormick Tribune Foundation','2020-04-10 00:00:00'),(1689,100006360,'Frankel Family Foundation','2020-04-10 00:00:00'),(1690,100006361,'Nick Kot Charity for TBI','2020-04-10 00:00:00'),(1691,100006362,'Neuroscience Nursing Foundation','2020-04-10 00:00:00'),(1692,100006364,'James A. Haley Veterans\' Hospital','2020-04-10 00:00:00'),(1693,100006365,'New Mexico Legislature','2020-04-10 00:00:00'),(1694,100006367,'Tommy Fuss Fund','2020-04-10 00:00:00'),(1695,100006368,'Margaret Clark Morgan Foundation','2020-04-10 00:00:00'),(1696,100006372,'Illinois School Psychologists Association','2020-04-10 00:00:00'),(1697,100006374,'David O. McKay School of Education, Brigham Young University','2020-04-10 00:00:00'),(1698,100006375,'Daniels Fund','2020-04-10 00:00:00'),(1699,100006376,'Georgia Southern University','2020-04-10 00:00:00'),(1700,100006378,'School of Nursing, Purdue University','2020-04-10 00:00:00'),(1701,100006381,'Robert Wood Johnson Foundation Center for Health Policy','2020-04-10 00:00:00'),(1702,100006382,'Stanford Center on Longevity','2020-04-10 00:00:00'),(1703,100006383,'Children\'s Hospital Colorado Research Institute','2020-04-10 00:00:00'),(1704,100006385,'Acxiom','2020-04-10 00:00:00'),(1705,100006386,'Adenoid Cystic Carcinoma Research Foundation','2020-04-10 00:00:00'),(1706,100006387,'Adrienne Helis Malvin Medical Research Foundation','2020-04-10 00:00:00'),(1707,100006388,'Advanced Fiber Technologies','2020-04-10 00:00:00'),(1708,100006389,'Advanced Photon Sciences','2020-04-10 00:00:00'),(1709,100006390,'Advatech Pacific','2020-04-10 00:00:00'),(1710,100006391,'AeroDynamic Solutions','2020-04-10 00:00:00'),(1711,100006392,'AIDS Clinical Trials Group','2020-04-10 00:00:00'),(1712,100006395,'Alabama Commission on Higher Education','2020-04-10 00:00:00'),(1713,100006396,'Alexion Pharmaceuticals','2020-04-10 00:00:00'),(1714,100006397,'Allegheny Technologies Incorporated','2020-04-10 00:00:00'),(1715,100006398,'Roswell Park Alliance Foundation, Roswell Park Cancer Institute','2020-04-10 00:00:00'),(1716,100006399,'Spectrum Pharmaceuticals','2020-04-10 00:00:00'),(1717,100006400,'Alnylam Pharmaceuticals','2020-04-10 00:00:00'),(1718,100006401,'ALS Recovery Fund','2020-04-10 00:00:00'),(1719,100006402,'ALS Therapy Alliance','2020-04-10 00:00:00'),(1720,100006403,'Am-Arcs of Nevada','2020-04-10 00:00:00'),(1721,100006404,'American Institute of Bisexuality','2020-04-10 00:00:00'),(1722,100006406,'American Psychology-Law Society','2020-04-10 00:00:00'),(1723,100006407,'American Water Works Association Research Foundation','2020-04-10 00:00:00'),(1724,100006408,'Amonix','2020-04-10 00:00:00'),(1725,100006409,'NeoStem','2020-04-10 00:00:00'),(1726,100006410,'Analog Devices','2020-04-10 00:00:00'),(1727,100006411,'Apex Innnovations','2020-04-10 00:00:00'),(1728,100006412,'Areva','2020-04-10 00:00:00'),(1729,100006413,'Ariad Pharmaceuticals','2020-04-10 00:00:00'),(1730,100006414,'Aspen Technology','2020-04-10 00:00:00'),(1731,100006415,'Ben B. and Iris M. Margolis Foundation','2020-04-10 00:00:00'),(1732,100006416,'Bone and Joint Injury Prevention and Rehabilitation Center, University of Michigan','2020-04-10 00:00:00'),(1733,100006417,'Keep A Breast Foundation','2020-04-10 00:00:00'),(1734,100006418,'Brown University','2020-04-10 00:00:00'),(1735,100006419,'William E. and Josephine B. Buchanan Family Foundation','2020-04-10 00:00:00'),(1736,100006420,'Bucknell University','2020-04-10 00:00:00'),(1737,100006421,'Rose Ella Burkhardt Brain Tumor and Neuro-Oncology Center, Cleveland Clinic','2020-04-10 00:00:00'),(1738,100006422,'Cadence Design Systems','2020-04-10 00:00:00'),(1739,100006428,'Bureau for Economic Growth, Education, and Environment, United States Agency for International Development','2020-04-10 00:00:00'),(1740,100006429,'California Center for Population Research, University of California, Los Angeles','2020-04-10 00:00:00'),(1741,100006430,'CAMBR Charitable Foundation','2020-04-10 00:00:00'),(1742,100006431,'Carestream Health','2020-04-10 00:00:00'),(1743,100006432,'Terumo BCT','2020-04-10 00:00:00'),(1744,100006433,'Carleton College','2020-04-10 00:00:00'),(1745,100006434,'Castleman Family Foundation','2020-04-10 00:00:00'),(1746,100006435,'Center for Selective C-H Functionalization, National Science Foundation','2020-04-10 00:00:00'),(1747,100006437,'CeNeRx','2020-04-10 00:00:00'),(1748,100006439,'Centenary College of Louisiana','2020-04-10 00:00:00'),(1749,100006440,'Center for Agroecology & Sustainable Food Systems, University of California, Santa Cruz','2020-04-10 00:00:00'),(1750,100006441,'Center for Outcomes Research and Evaluation, Yale School of Medicine','2020-04-10 00:00:00'),(1751,100006442,'Center for Drug Discovery, Baylor College of Medicine','2020-04-10 00:00:00'),(1752,100006443,'Center for Emerging Infectious Diseases, University of Iowa','2020-04-10 00:00:00'),(1753,100006444,'Center for Excellence in Regulatory Science and Innovation, University of Maryland','2020-04-10 00:00:00'),(1754,100006445,'Center for Hierarchical Manufacturing, National Science Foundation','2020-04-10 00:00:00'),(1755,100006446,'Center for Nuclear Energy Facilities and Structures, North Carolina State University','2020-04-10 00:00:00'),(1756,100006448,'Center for Virus Research, University of California, Irvine','2020-04-10 00:00:00'),(1757,100006449,'Center for Advanced Vehicular Systems, Mississippi State University','2020-04-10 00:00:00'),(1758,100006450,'Bureau of Reclamation','2020-04-10 00:00:00'),(1759,100006451,'Cetacean Society International','2020-04-10 00:00:00'),(1760,100006452,'Chain of Love Foundation','2020-04-10 00:00:00'),(1761,100006453,'Charles R. Drew University of Medicine and Science','2020-04-10 00:00:00'),(1762,100006454,'Chest Wall and Spine Deformity Research Foundation','2020-04-10 00:00:00'),(1763,100006455,'Tulsa University Center of Research Excellence, Tulsa University','2020-04-10 00:00:00'),(1764,100008225,'Midwestern State University','2020-04-10 00:00:00'),(1765,100008226,'Arnold and Mabel Beckman Initiative for Macular Research','2020-04-10 00:00:00'),(1766,100008227,'Achievement Rewards for College Scientists Foundation','2020-04-10 00:00:00'),(1767,100008229,'Athabasca University','2020-04-10 00:00:00'),(1768,100008231,'Arkansas Biosciences Institute','2020-04-10 00:00:00'),(1769,100008232,'Armstrong State University','2020-04-10 00:00:00'),(1770,100008233,'ASAE Foundation','2020-04-10 00:00:00'),(1771,100008234,'Lehigh University','2020-04-10 00:00:00'),(1772,100008238,'Hitachi','2020-04-10 00:00:00'),(1773,100008239,'Highlands and Islands Enterprise','2020-04-10 00:00:00'),(1774,100008241,'Alder Hey Children\'s NHS Foundation Trust','2020-04-10 00:00:00'),(1775,100008242,'National ICT Australia','2020-04-10 00:00:00'),(1776,100008243,'Center for Visual Science','2020-04-10 00:00:00'),(1777,100008244,'Pacific Northwest Agricultural Safety and Health Center','2020-04-10 00:00:00'),(1778,100008245,'Center for Neuroscience Research','2020-04-10 00:00:00'),(1779,100008246,'Tufts University School of Medicine','2020-04-10 00:00:00'),(1780,100008248,'Department of Zoology, University of Otago','2020-04-10 00:00:00'),(1781,100008250,'Feinberg School of Medicine','2020-04-10 00:00:00'),(1782,100008252,'Health Sciences Centre Foundation','2020-04-10 00:00:00'),(1783,100008253,'Pacific International Center for High Technology Research','2020-04-10 00:00:00'),(1784,100008254,'Hardwood Tree Improvement and Regeneration Center, Purdue University','2020-04-10 00:00:00'),(1785,100008256,'Hyundai Motor Group','2020-04-10 00:00:00'),(1786,100008257,'Hyundai Motor America','2020-04-10 00:00:00'),(1787,100008258,'Hyundai Hope On Wheels','2020-04-10 00:00:00'),(1788,100008259,'Horticultural Development Company','2020-04-10 00:00:00'),(1789,100008263,'Center for the Environment, Harvard University','2020-04-10 00:00:00'),(1790,100008264,'Kingston General Hospital','2020-04-10 00:00:00'),(10674,100001005,'Bonfils-Stanton Foundation','2020-04-10 00:00:00'),(10675,100001279,'Orthopaedic Research and Education Foundation','2020-04-10 00:00:00'),(10676,100002077,'Epidermolysis Bullosa Medical Research Foundation','2020-04-10 00:00:00'),(10677,100002573,'American Bar Foundation','2020-04-10 00:00:00'),(10678,100002594,'American Osteopathic Association','2020-04-10 00:00:00'),(10679,100003054,'Koch Cultural Trust','2020-04-10 00:00:00'),(10680,100003179,'National League for Nursing','2020-04-10 00:00:00'),(10681,100004312,'Eli Lilly and Company','2020-04-10 00:00:00'),(10682,100004806,'California Environmental Protection Agency','2020-04-10 00:00:00'),(10683,100005177,'Women\'s Fund of Central Ohio','2020-04-10 00:00:00'),(10684,100005204,'Siemens Foundation','2020-04-10 00:00:00'),(10685,100005236,'Library Company of Philadelphia','2020-04-10 00:00:00'),(10686,100005287,'Council of American Overseas Research Centers','2020-04-10 00:00:00'),(10687,100005300,'American Chemical Society','2020-04-10 00:00:00'),(10688,100005324,'Advertising Educational Foundation','2020-04-10 00:00:00'),(10689,100005325,'AFCEA Educational Foundation','2020-04-10 00:00:00'),(10690,100005384,'American Physiological Society','2020-04-10 00:00:00'),(10691,100005490,'James Madison Memorial Fellowship Foundation','2020-04-10 00:00:00'),(10692,100005542,'Center for Africana Studies, Johns Hopkins University','2020-04-10 00:00:00'),(10693,100005575,'Center for International Security and Cooperation, Stanford University','2020-04-10 00:00:00'),(10694,100005606,'Coastal Community Foundation of South Carolina','2020-04-10 00:00:00'),(10695,100005638,'Christopher Reynolds Foundation','2020-04-10 00:00:00'),(10696,100005721,'Enterprise Community Partners','2020-04-10 00:00:00'),(10697,100005760,'Rhode Island Space Grant Consortium','2020-04-10 00:00:00'),(10698,100005771,'Illinois-Indiana Sea Grant, University of Illinois','2020-04-10 00:00:00'),(10699,100005783,'New Hampshire Sea Grant, University of New Hampshire','2020-04-10 00:00:00'),(10700,100006334,'State Library of North Carolina','2020-04-10 00:00:00'),(10701,100007275,'West Virginia Department of Transportation','2020-04-10 00:00:00'),(10702,100008046,'Indiana Humanities','2020-04-10 00:00:00'),(10703,100010129,'Maud Kuistilan Muistos&#228;&#228;ti&#246;','2020-04-10 00:00:00'),(10704,100010663,'H2020 European Research Council','2020-04-10 00:00:00'),(10705,100010825,'Society for Research in Child Development','2020-04-10 00:00:00'),(10706,100011696,'Scar Free Foundation','2020-04-10 00:00:00'),(10707,100013269,'Justice Programme','2020-04-10 00:00:00'),(10708,100013287,'Hercule Programmes','2020-04-10 00:00:00'),(10709,100013288,'LIFE programme','2020-04-10 00:00:00'),(10710,100013314,'Internal Security Fund - Police','2020-04-10 00:00:00'),(10711,100013463,'Association for the Sociology of Religion','2020-04-10 00:00:00'),(10712,100015761,'Creative Europe','2020-04-10 00:00:00'),(10713,100016038,'University of North Florida Foundation','2020-04-10 00:00:00'),(10714,100016039,'Center for Depression Research and Clinical Care, University of Texas Southwestern Medical Center','2020-04-10 00:00:00'),(10715,100016040,'Takeda Canada','2020-04-10 00:00:00'),(10716,100016041,'Queen Elizabeth Hospital Birmingham Charity','2020-04-10 00:00:00'),(10717,100016042,'Akhawayn University in Ifrane','2020-04-10 00:00:00'),(10718,100016043,'Universit&#233; Chouaib Doukkali','2020-04-10 00:00:00'),(10719,100016044,'Universit&#233; Moulay Ismaïl','2020-04-10 00:00:00'),(10720,100016045,'University of Central Punjab','2020-04-10 00:00:00'),(10721,100016046,'Stiftelsen Thelma Zo&#233;gas fond f&#246;r medicinsk forskning','2020-04-10 00:00:00'),(10722,100016047,'Ulusal Bor Ara&#351;tirma Enstitüsü','2020-04-10 00:00:00'),(10723,100016048,'University of Texas at Tyler','2020-04-10 00:00:00'),(10724,100016049,'William Paterson University of New Jersey','2020-04-10 00:00:00'),(10725,100016050,'Society of Phi Zeta','2020-04-10 00:00:00'),(10726,100016051,'Universidade de Santa Cruz do Sul','2020-04-10 00:00:00'),(10727,100016052,'WSL-Institut für Schnee- und Lawinenforschung SLF','2020-04-10 00:00:00'),(10728,100016053,'Ben and Maytee Fisch College of Pharmacy, University of Texas at Tyler','2020-04-10 00:00:00'),(10729,100016054,'Summerfield G. Roberts Foundation','2020-04-10 00:00:00'),(10730,100016055,'Swiss Finance Institute','2020-04-10 00:00:00'),(10731,100000046,'Abbott Fund','2020-04-10 00:00:00'),(10732,100000993,'Battelle','2020-04-10 00:00:00'),(10733,100001010,'James Graham Brown Foundation','2020-04-10 00:00:00'),(10734,100001950,'American Tinnitus Association','2020-04-10 00:00:00'),(10735,100002110,'Georgia Health Foundation','2020-04-10 00:00:00'),(10736,100002179,'Kidney and Urology Foundation of America','2020-04-10 00:00:00'),(10737,100002272,'Patron Saints Foundation','2020-04-10 00:00:00'),(10738,100003478,'Alex C. Walker Educational and Charitable Foundation','2020-04-10 00:00:00'),(10739,100003679,'Children\'s Brittle Bone Foundation','2020-04-10 00:00:00'),(10740,100003717,'M. Patricia Cronin Foundation to Fight Ovarian Cancer','2020-04-10 00:00:00'),(10741,100005339,'American Academy of Neurology','2020-04-10 00:00:00'),(10742,100005342,'American Academy of Periodontology Foundation','2020-04-10 00:00:00'),(10743,100005348,'American Association for Thoracic Surgery','2020-04-10 00:00:00'),(10744,100005386,'American Psychiatric Association','2020-04-10 00:00:00'),(10745,100005497,'American Society for Pharmacology and Experimental Therapeutics','2020-04-10 00:00:00'),(10746,100005786,'Maryland Sea Grant, University of Maryland','2020-04-10 00:00:00'),(10747,100005918,'Institute on Global Conflict and Cooperation, University of California, San Diego','2020-04-10 00:00:00'),(10748,100005984,'Dr. Miriam and Sheldon G. Adelson Medical Research Foundation','2020-04-10 00:00:00'),(10749,100006055,'State Justice Institute','2020-04-10 00:00:00'),(10750,100006239,'Society of Nuclear Medicine and Molecular Imaging','2020-04-10 00:00:00'),(10751,100008717,'Sylvia and Charles Viertel Charitable Foundation','2020-04-10 00:00:00'),(10752,100009898,'Defense Health Agency','2020-04-10 00:00:00'),(10753,100011028,'Michigan Department of Natural Resources','2020-04-10 00:00:00'),(10754,100011035,'IAFF Charitable Foundation','2020-04-10 00:00:00'),(10755,100011719,'Bone Cancer Research Trust','2020-04-10 00:00:00'),(10756,100012057,'Eaga Charitable Trust','2020-04-10 00:00:00'),(10757,100012093,'Research Society for Victorian Periodicals','2020-04-10 00:00:00'),(10758,100013137,'National Institute of Corrections','2020-04-10 00:00:00'),(10759,100013450,'American Society of Agronomy','2020-04-10 00:00:00'),(10760,100013612,'American Institute of Iranian Studies','2020-04-10 00:00:00'),(10761,100013946,'Mining History Association','2020-04-10 00:00:00'),(10762,100013952,'AnitaB.org','2020-04-10 00:00:00'),(10763,100014074,'Integrative and Collaborative Education and Research','2020-04-10 00:00:00'),(10764,100014317,'Urban Communication Foundation','2020-04-10 00:00:00'),(10765,100014642,'Institute of Mathematics and its Applications','2020-04-10 00:00:00'),(10766,100014657,'Society for Reproductive and Infant Psychology','2020-04-10 00:00:00'),(10767,100014986,'Austrian Development Agency','2020-04-10 00:00:00'),(10768,100014998,'American Studies Association','2020-04-10 00:00:00'),(10769,100000774,'Defense Threat Reduction Agency','2020-04-10 00:00:00'),(10770,100000883,'Brown Foundation','2020-04-10 00:00:00'),(10771,100001012,'Buhl Foundation','2020-04-10 00:00:00'),(10772,100001461,'American Philosophical Society','2020-04-10 00:00:00'),(10773,100001655,'Grayson-Jockey Club Research Foundation','2020-04-10 00:00:00'),(10774,100002568,'American Association for Clinical Chemistry','2020-04-10 00:00:00'),(10775,100004335,'Motorola','2020-04-10 00:00:00'),(10776,100005002,'California Department of Public Health','2020-04-10 00:00:00'),(10777,100005299,'Acoustical Society of America','2020-04-10 00:00:00'),(10778,100005346,'Association for Slavic, East European, and Eurasian Studies','2020-04-10 00:00:00'),(10779,100005603,'Clay Mathematics Institute','2020-04-10 00:00:00'),(10780,100005656,'Congressional Hispanic Caucus Institute','2020-04-10 00:00:00'),(10781,100005749,'Nebraska Space Grant Consortium','2020-04-10 00:00:00'),(10782,100014363,'National Association for Research in Science Teaching','2020-04-10 00:00:00'),(10783,100014985,'European Society of Radiology','2020-04-10 00:00:00'),(10784,100000140,'U.S. Department of Transportation','2020-04-10 00:00:00'),(10785,100001053,'Community Foundation of Louisville','2020-04-10 00:00:00'),(10786,100001057,'Compton Foundation','2020-04-10 00:00:00'),(10787,100001102,'Ethics and Excellence in Journalism Foundation','2020-04-10 00:00:00'),(10788,100001219,'Lymphoma Research Foundation','2020-04-10 00:00:00'),(10789,100001432,'Kemmons Wilson Family Foundation','2020-04-10 00:00:00'),(10790,100001560,'Conservation, Food and Health Foundation','2020-04-10 00:00:00'),(10791,100002320,'Schenectady Foundation','2020-04-10 00:00:00'),(10792,100003025,'Interstitial Cystitis Association','2020-04-10 00:00:00'),(10793,100003133,'Minnesota Colon and Rectal Foundation','2020-04-10 00:00:00'),(10794,100003166,'National Foundation for Ectodermal Dysplasias','2020-04-10 00:00:00'),(10795,100003188,'National Tay-Sachs and Allied Diseases Association New York Area','2020-04-10 00:00:00'),(10796,100003264,'Pittsburgh Child Guidance Foundation','2020-04-10 00:00:00'),(10797,100003358,'Scleroderma Foundation-Tri-State','2020-04-10 00:00:00'),(10798,100003419,'South Dakota Humanities Council','2020-04-10 00:00:00'),(10799,100004111,'Robert Schalkenbach Foundation','2020-04-10 00:00:00'),(10800,100004438,'OPEC Fund for International Development','2020-04-10 00:00:00'),(10801,100004857,'New York State Department of Health - Wadsworth Center','2020-04-10 00:00:00'),(10802,100005163,'Tribeca Film Institute','2020-04-10 00:00:00'),(10803,100005181,'Modern Language Association','2020-04-10 00:00:00'),(10804,100005273,'Yaddo','2020-04-10 00:00:00'),(10805,100005275,'Academy of American Poets','2020-04-10 00:00:00'),(10806,100005533,'CEC ArtsLink','2020-04-10 00:00:00'),(10807,100005674,'Cystinosis Research Foundation','2020-04-10 00:00:00'),(10808,100005686,'Samuel H. Kress Foundation','2020-04-10 00:00:00'),(10809,100005698,'Truman Library Institute','2020-04-10 00:00:00'),(10810,100005792,'Louisiana Sea Grant, Louisiana State University','2020-04-10 00:00:00'),(10811,100006112,'Microsoft Research','2020-04-10 00:00:00'),(10812,100007219,'Natural Science Foundation of Shanghai','2020-04-10 00:00:00'),(10813,100007872,'Bowel and Cancer Research','2020-04-10 00:00:00'),(10814,100008023,'British Ornithologists’ Union','2020-04-10 00:00:00'),(10815,100008373,'Takeda Pharmaceutical Company','2020-04-10 00:00:00'),(10816,100009036,'Canadian Institute for Theoretical Astrophysics','2020-04-10 00:00:00'),(10817,100011250,'Society of Antiquaries of London','2020-04-10 00:00:00'),(10818,100011699,'BRACE','2020-04-10 00:00:00'),(10819,100011724,'Muscular Dystrophy UK','2020-04-10 00:00:00'),(10820,100012623,'Federation of European Biochemical Societies','2020-04-10 00:00:00'),(10821,100013455,'Aniara Diagnostica','2020-04-10 00:00:00'),(10822,100013477,'Australasian Systematic Botany Society','2020-04-10 00:00:00'),(10823,100014625,'Political Studies Association','2020-04-10 00:00:00'),(10824,100014731,'Global Lyme Alliance','2020-04-10 00:00:00'),(10825,100015052,'Fondation de l\'Ecole Normale Superieure','2020-04-10 00:00:00'),(10826,100015396,'Thailand Center of Excellence for Life Sciences','2020-04-10 00:00:00'),(10827,100000185,'Defense Advanced Research Projects Agency','2020-04-10 00:00:00'),(10828,100003163,'National Community Pharmacists Association Foundation','2020-04-10 00:00:00'),(10829,100003913,'John F. Kennedy Library Foundation','2020-04-10 00:00:00'),(10830,100004031,'Parapsychology Foundation','2020-04-10 00:00:00'),(10831,100004225,'Wyoming Humanities Council','2020-04-10 00:00:00'),(10832,100005290,'Psi Chi','2020-04-10 00:00:00'),(10833,100005539,'Cecil G. Sheps Center for Health Services Research, University of North Carolina, Chapel Hill','2020-04-10 00:00:00'),(10834,100006034,'University of Southern California','2020-04-10 00:00:00'),(10835,100006231,'Brookhaven National Laboratory','2020-04-10 00:00:00'),(10836,100007848,'MetroWest Health Foundation','2020-04-10 00:00:00'),(10837,100007867,'Universit&#233; Laval','2020-04-10 00:00:00'),(10838,100009911,'U.S. Naval Academy','2020-04-10 00:00:00'),(10839,100010269,'Wellcome Trust','2020-04-10 00:00:00'),(10840,100014196,'Hind Foundation','2020-04-10 00:00:00'),(10841,100014753,'Mid-America Arts Alliance','2020-04-10 00:00:00'),(10842,100014916,'Juvenile Diabetes Research Foundation New Zealand','2020-04-10 00:00:00'),(10843,100014983,'Foundation for Advancement in Conservation','2020-04-10 00:00:00'),(10844,100014987,'Fulbright Austria','2020-04-10 00:00:00'),(10845,100001036,'Claneil Foundation','2020-04-10 00:00:00'),(10846,100001538,'Mary K. Chapman Foundation','2020-04-10 00:00:00'),(10847,100001825,'Rose Foundation for Communities and the Environment','2020-04-10 00:00:00'),(10848,100004347,'AT and T','2020-04-10 00:00:00'),(10849,100004979,'Center for Innovative Technology','2020-04-10 00:00:00'),(10850,100005471,'Beckman Institute for Advanced Science and Technology, University of Illinois, Urbana-Champaign','2020-04-10 00:00:00'),(10851,100005663,'Council of State and Territorial Epidemiologists','2020-04-10 00:00:00'),(10852,100005770,'Wyoming Space Grant Consortium','2020-04-10 00:00:00'),(10853,100006240,'Association for Surgical Education','2020-04-10 00:00:00'),(10854,100008354,'Callaghan Innovation','2020-04-10 00:00:00'),(10855,100013293,'Active and Assisted Living programme','2020-04-10 00:00:00'),(10856,100013916,'Society for Industrial Archeology','2020-04-10 00:00:00'),(10857,100000028,'Semiconductor Research Corporation','2020-04-10 00:00:00'),(10858,100001388,'Wenner-Gren Foundation','2020-04-10 00:00:00'),(10859,100003005,'Humanities Council of Washington, DC','2020-04-10 00:00:00'),(10860,100004862,'New York State Energy Research and Development Authority','2020-04-10 00:00:00'),(10861,100005422,'Arkansas Arts Council','2020-04-10 00:00:00'),(10862,100008796,'Allen Foundation','2020-04-10 00:00:00'),(10863,100012085,'Earth and Space Foundation','2020-04-10 00:00:00'),(10864,100012334,'Academic Association for Contemporary European Studies','2020-04-10 00:00:00'),(10865,100014988,'Institute of Science and Technology Austria','2020-04-10 00:00:00'),(10866,100014997,'American Society of Agricultural and Biological Engineers','2020-04-10 00:00:00'),(10867,100000920,'William Penn Foundation','2020-04-10 00:00:00'),(10868,100000957,'Alzheimer\'s Association','2020-04-10 00:00:00'),(10869,100001021,'Damon Runyon Cancer Research Foundation','2020-04-10 00:00:00'),(10870,100001166,'Richard and Ethel Herzfeld Foundation','2020-04-10 00:00:00'),(10871,100002033,'Cooley\'s Anemia Foundation','2020-04-10 00:00:00'),(10872,100002590,'American Lung Association','2020-04-10 00:00:00'),(10873,100002736,'Citizens United for Research in Epilepsy','2020-04-10 00:00:00'),(10874,100003209,'Northwest Osteopathic Medical Foundation','2020-04-10 00:00:00'),(10875,100005833,'Bill and Carol Fox Center for Humanistic Inquiry, Emory University','2020-04-10 00:00:00'),(10876,100008869,'Bader Philanthropies','2020-04-10 00:00:00'),(10877,100010665,'H2020 Marie Sk&#322;odowska-Curie Actions','2020-04-10 00:00:00'),(10878,100010671,'H2020 LEIT Advanced Materials','2020-04-10 00:00:00'),(10879,100011200,'FP7 Security','2020-04-10 00:00:00'),(10880,100011201,'FP7 Science in Society','2020-04-10 00:00:00'),(10881,100011202,'FP7 Research for the Benefit of SMEs','2020-04-10 00:00:00'),(10882,100011273,'FP7 Information and Communication Technologies','2020-04-10 00:00:00'),(10883,100013301,'Parkinson\'s Foundation','2020-04-10 00:00:00'),(10884,100015399,'Naval Information Warfare Systems Command','2020-04-10 00:00:00'),(10885,100014859,'HCR ManorCare','2020-04-10 00:00:00'),(10886,100009860,'Ramaciotti Foundations','2020-04-10 00:00:00'),(10887,100005473,'Belfer Center for Science and International Affairs, Harvard University','2020-04-10 00:00:00'),(10888,100014782,'North Dakota Department of Transportation','2020-04-10 00:00:00'),(10889,100013526,'Defence Health Foundation','2020-04-10 00:00:00'),(10890,100006050,'Notre Dame Institute for Advanced Study','2020-04-10 00:00:00'),(10891,100015041,'Healthcare Workforce Development Division','2020-04-10 00:00:00'),(10892,100015011,'Ernest Kleinwort Charitable Trust','2020-04-10 00:00:00'),(10893,100014688,'Scottish Rock Garden Club','2020-04-10 00:00:00'),(10894,100014307,'Innovation Growth Lab','2020-04-10 00:00:00'),(10895,100000882,'Brain Research Foundation','2020-04-10 00:00:00'),(10896,100005405,'American Surgical Association Foundation','2020-04-10 00:00:00'),(10897,100014686,'Society for Nautical Research','2020-04-10 00:00:00'),(10898,100014249,'International Centre for Mathematical Sciences','2020-04-10 00:00:00'),(10899,100005185,'Millennium Challenge Corporation','2020-04-10 00:00:00'),(10900,100014862,'Cave Science and Technology Research Fund','2020-04-10 00:00:00'),(10901,100014664,'Society of Construction Law','2020-04-10 00:00:00'),(10902,100002157,'Ittleson Foundation','2020-04-10 00:00:00'),(10903,100007684,'Asahi Glass Foundation','2020-04-10 00:00:00'),(10904,100008608,'Sumitomo Foundation','2020-04-10 00:00:00'),(10905,100008762,'Genome Canada','2020-04-10 00:00:00'),(10906,100012781,'MSD K.K.','2020-04-10 00:00:00'),(10907,100000980,'Arthritis Foundation','2020-04-10 00:00:00'),(10908,100001366,'W.E. Upjohn Institute for Employment Research','2020-04-10 00:00:00'),(10909,100002655,'Beckman Coulter Foundation','2020-04-10 00:00:00'),(10910,100003288,'George A. Ramlose Foundation','2020-04-10 00:00:00'),(10911,100003877,'Idaho Humanities Council','2020-04-10 00:00:00'),(10912,100004844,'State of New Jersey Department of Human Services','2020-04-10 00:00:00'),(10913,100005380,'American Neurotology Society','2020-04-10 00:00:00'),(10914,100005390,'American Psychosomatic Society','2020-04-10 00:00:00'),(10915,100005474,'Alexander Graham Bell Association for the Deaf and Hard of Hearing','2020-04-10 00:00:00'),(10916,100005479,'Bush Foundation','2020-04-10 00:00:00'),(10917,100005516,'Bread Loaf Writers\' Conference, Middlebury College','2020-04-10 00:00:00'),(10918,100005773,'Michigan Sea Grant, University of Michigan','2020-04-10 00:00:00'),(10919,100007369,'Institut de France','2020-04-10 00:00:00'),(10920,100009305,'Children\'s Literature Association','2020-04-10 00:00:00'),(10921,100009901,'National Intelligence University','2020-04-10 00:00:00'),(10922,100013289,'ERA-LEARN 2020','2020-04-10 00:00:00'),(10923,100013805,'Retina Australia','2020-04-10 00:00:00'),(10924,100014661,'Society for the Study of Medieval Languages and Literature','2020-04-10 00:00:00'),(10925,100001253,'Multiple Myeloma Research Foundation','2020-04-10 00:00:00'),(10926,100001422,'American Society of Hematology','2020-04-10 00:00:00'),(10927,100001920,'Dean Witter Foundation','2020-04-10 00:00:00'),(10928,100002557,'Alaska Humanities Forum','2020-04-10 00:00:00'),(10929,100003182,'National Osteoporosis Foundation','2020-04-10 00:00:00'),(10930,100004313,'General Electric','2020-04-10 00:00:00'),(10931,100004827,'State of Connecticut Department of Transportation','2020-04-10 00:00:00'),(10932,100004839,'State of New Jersey Department of Education','2020-04-10 00:00:00'),(10933,100004840,'New Jersey Department of Environmental Protection','2020-04-10 00:00:00'),(10934,100004886,'Illinois Department of Human Services','2020-04-10 00:00:00'),(10935,100005536,'Asia-Pacific Network for Global Change Research','2020-04-10 00:00:00'),(10936,100006220,'American Accounting Association','2020-04-10 00:00:00'),(10937,100006751,'U.S. Army','2020-04-10 00:00:00'),(10938,100006831,'U.S. Air Force','2020-04-10 00:00:00'),(10939,100013177,'Interior Business Center','2020-04-10 00:00:00'),(10940,100013200,'Government of Alberta','2020-04-10 00:00:00'),(10941,100013407,'Netherlands eScience Center','2020-04-10 00:00:00'),(10942,100013478,'Stockton Rush Bartol Foundation','2020-04-10 00:00:00'),(10943,100013495,'Buffalo Bill Center of the West','2020-04-10 00:00:00'),(10944,100013553,'Foundation for MetroWest','2020-04-10 00:00:00'),(10945,100014154,'GPD Charitable Trust','2020-04-10 00:00:00'),(10946,100002041,'Dana Alliance for Brain Initiatives','2020-04-10 00:00:00'),(10947,100002595,'American Otological Society','2020-04-10 00:00:00'),(10948,100004060,'Preeclampsia Foundation','2020-04-10 00:00:00'),(10949,100005227,'Centers for Medicare and Medicaid Services','2020-04-10 00:00:00'),(10950,100005501,'BIRD Foundation','2020-04-10 00:00:00'),(10951,100005934,'International Furnishings and Design Association Educational Foundation','2020-04-10 00:00:00'),(10952,100005992,'Woodrow Wilson National Fellowship Foundation','2020-04-10 00:00:00'),(10953,100006781,'Giovanni Armenise-Harvard Foundation','2020-04-10 00:00:00'),(10954,100008925,'American Asthma Foundation','2020-04-10 00:00:00'),(10955,100011736,'Internationalt Center for Forskning i Økologisk Jordbrug og Fødevaresystemer','2020-04-10 00:00:00'),(10956,100012096,'Society for the Study of French History','2020-04-10 00:00:00'),(10957,100014171,'Samerian Foundation','2020-04-10 00:00:00'),(10958,100014328,'Materials Research Society','2020-04-10 00:00:00'),(10959,100014795,'North Carolina Department of Transportation','2020-04-10 00:00:00'),(10960,100000104,'National Aeronautics and Space Administration','2020-04-10 00:00:00'),(10961,100000865,'Bill and Melinda Gates Foundation','2020-04-10 00:00:00'),(10962,100000945,'Pittsburgh Foundation','2020-04-10 00:00:00'),(10963,100001416,'Rose Community Foundation','2020-04-10 00:00:00'),(10964,100003141,'Humanities Montana','2020-04-10 00:00:00'),(10965,100003519,'Wisconsin Medical Society Foundation','2020-04-10 00:00:00'),(10966,100003766,'DAISY Foundation','2020-04-10 00:00:00'),(10967,100003879,'Illinois State Historical Society','2020-04-10 00:00:00'),(10968,100004915,'Texas Commission on the Arts','2020-04-10 00:00:00'),(10969,100014914,'Juvenile Diabetes Research Foundation in Israel','2020-04-10 00:00:00'),(10970,100006077,'Society for the Humanities, Cornell University','2020-04-10 00:00:00'),(10971,100001987,'Fred J. Brotherton Charitable Foundation','2020-04-10 00:00:00'),(10972,100014715,'English Goethe Society','2020-04-10 00:00:00'),(10973,100007438,'Harold Mitchell Foundation','2020-04-10 00:00:00'),(10974,100005894,'Humanities Research Center, Rice University','2020-04-10 00:00:00'),(10975,100015046,'&#214;sterreichische Gesellschaft für Hygiene, Mikrobiologie und Pr&#228;ventivmedizin','2020-04-10 00:00:00'),(10976,100015043,'Community Foundation of Western North Carolina','2020-04-10 00:00:00'),(10977,100014770,'Arizona Department of Transportation','2020-04-10 00:00:00'),(10978,100004882,'Illinois State Board of Education','2020-04-10 00:00:00'),(10979,100005187,'U.S. Nuclear Regulatory Commission','2020-04-10 00:00:00'),(10980,100005395,'American Schools of Oriental Research','2020-04-10 00:00:00'),(10981,100005403,'American Society of Plant Biologists','2020-04-10 00:00:00'),(10982,100005427,'Asian Pacific American Institute for Congressional Studies','2020-04-10 00:00:00'),(10983,100005592,'Center for the Study of the American South, University of North Carolina, Chapel Hill','2020-04-10 00:00:00'),(10984,100005623,'North Carolina Sea Grant, North Carolina State University','2020-04-10 00:00:00'),(10985,100005709,'Endocrine Society','2020-04-10 00:00:00'),(10986,100005766,'Virginia Space Grant Consortium','2020-04-10 00:00:00'),(10987,100005779,'Connecticut Sea Grant, University of Connecticut','2020-04-10 00:00:00'),(10988,100005817,'Five Colleges','2020-04-10 00:00:00'),(10989,100006045,'Threshold Foundation','2020-04-10 00:00:00'),(10990,100006103,'Southern SARE','2020-04-10 00:00:00'),(10991,100006104,'Western SARE','2020-04-10 00:00:00'),(10992,100006214,'Creative Capital Foundation','2020-04-10 00:00:00'),(10993,100007231,'Cornell University','2020-04-10 00:00:00'),(10994,100008700,'Centre International de Recherche sur le Cancer','2020-04-10 00:00:00'),(10995,100008986,'University of Guelph','2020-04-10 00:00:00'),(10996,100009157,'National Institute on Disability, Independent Living, and Rehabilitation Research','2020-04-10 00:00:00'),(10997,100009209,'Montana Department of Transportation','2020-04-10 00:00:00'),(10998,100009634,'Susan G. Komen','2020-04-10 00:00:00'),(10999,100009776,'McMaster University','2020-04-10 00:00:00'),(11000,100009908,'Dwight D. Eisenhower School for National Security and Resource Strategy','2020-04-10 00:00:00'),(11001,100009910,'Naval Postgraduate School','2020-04-10 00:00:00'),(11002,100012479,'Weston Brain Institute','2020-04-10 00:00:00'),(11003,100013132,'Combat Casualty Care Research Program','2020-04-10 00:00:00'),(11004,100013133,'Defense and Veterans Brain Injury Center','2020-04-10 00:00:00'),(11005,100013154,'Center for Surveillance, Epidemiology, and Laboratory Services','2020-04-10 00:00:00'),(11006,100013398,'Office of International Studies and Programs, University of Missouri, St. Louis','2020-04-10 00:00:00'),(11007,100013467,'Association of Avian Veterinarians','2020-04-10 00:00:00'),(11008,100013884,'Macula Society','2020-04-10 00:00:00'),(11009,100014009,'Center for State, Tribal, Local and Territorial Support','2020-04-10 00:00:00'),(11010,100014318,'Sir John Soane\'s Museum Foundation','2020-04-10 00:00:00'),(11011,100014811,'Ministero per i beni e le attivit&#224; culturali','2020-04-10 00:00:00'),(11012,100015336,'ATVINNUM&#193;L KVENNA','2020-04-10 00:00:00'),(11013,100015341,'Humanities North Dakota','2020-04-10 00:00:00'),(11014,100015401,'Innovate BC','2020-04-10 00:00:00'),(11015,100015764,'Center for Preparedness and Response','2020-04-10 00:00:00');
/*!40000 ALTER TABLE `sci_related_orgs_vendor` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_scholarly_output`
--

DROP TABLE IF EXISTS `sci_scholarly_output`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_scholarly_output` (
  `SCHOLARLY_ID` bigint(20) NOT NULL,
  `OUTPUT_ITEM_TYPE` bigint(20) DEFAULT NULL,
  `ITEM_TYPE_TYPE` bigint(20) DEFAULT NULL,
  `RELATION_TYPE` bigint(20) DEFAULT NULL,
  `ITEM_TYPE_TEXT` varchar(3000) DEFAULT '',
  `OPPORTUNITY_ID` bigint(20) DEFAULT NULL,
  `AWARD_ID` bigint(20) DEFAULT NULL,
  `CREATED_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`SCHOLARLY_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_scholarly_output`
--

LOCK TABLES `sci_scholarly_output` WRITE;
/*!40000 ALTER TABLE `sci_scholarly_output` DISABLE KEYS */;
/*!40000 ALTER TABLE `sci_scholarly_output` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_statecodes`
--

DROP TABLE IF EXISTS `sci_statecodes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_statecodes` (
  `STATEID` bigint(20) NOT NULL,
  `COUNTRYID` bigint(20) DEFAULT NULL,
  `NAME` varchar(2000) DEFAULT '',
  `CODE` varchar(2000) DEFAULT '',
  PRIMARY KEY (`STATEID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_statecodes`
--

LOCK TABLES `sci_statecodes` WRITE;
/*!40000 ALTER TABLE `sci_statecodes` DISABLE KEYS */;
INSERT INTO `sci_statecodes` VALUES (1,227,'Alabama','AL'),(2,227,'Alaska','AK'),(3,227,'Arizona','AZ'),(4,227,'Arkansas','AR'),(5,227,'California','CA'),(6,227,'Colorado','CO'),(7,227,'Connecticut','CT'),(8,227,'Delaware','DE'),(9,227,'Dist.  of Colombia','DC'),(10,227,'Florida','FL'),(11,227,'Georgia','GA'),(12,227,'Hawaii','HI'),(13,227,'Idaho','ID'),(14,227,'Illinois','IL'),(15,227,'Indiana','IN'),(16,227,'Iowa','IA'),(17,227,'Kansas','KS'),(18,227,'Kentucky','KY'),(19,227,'Louisiana','LA'),(20,227,'Maine','ME'),(21,227,'Maryland','MD'),(22,227,'Massachusetts','MA'),(23,227,'Michigan','MI'),(24,227,'Minnesota','MN'),(25,227,'Mississippi','MS'),(26,227,'Missouri','MO'),(27,227,'Montana','MT'),(28,227,'Nebraska','NE'),(29,227,'Nevada','NV'),(30,227,'New Hamsphire','NH'),(31,227,'New Jersey','NJ'),(32,227,'New Mexico','NM'),(33,227,'New York','NY'),(34,227,'North Carolina','NC'),(35,227,'North Dakota','ND'),(36,227,'Ohio','OH'),(37,227,'Oklahoma','OK'),(38,227,'Oregon','OR'),(39,227,'Pennsylvania','PA'),(40,227,'Rhode Island','RI'),(41,227,'South Carolina','SC'),(42,227,'South Dakota','SD'),(43,227,'Tennessee','TN'),(44,227,'Texas','TX'),(45,227,'Utah','UT'),(46,227,'Vermont','VT'),(47,227,'Virginia','VA'),(48,227,'Washington','wa'),(49,227,'West Virginia','WV'),(50,227,'Wisconsin','WI'),(51,227,'Wyoming','WY'),(52,13,'New South Wales','NSW'),(53,13,'Northern Territory','NT'),(54,13,'Queensland','QLD'),(55,13,'Canberra','ACT'),(56,13,'South Australia','SA'),(57,13,'Tasmania','TAS'),(58,13,'Victoria','VIC'),(59,13,'Western Australia','WA'),(60,38,'Alberta','AB'),(61,38,'British Columbia','BC'),(62,38,'Manitoba','MB'),(63,38,'New Brunswick','NB'),(64,38,'New Foundland  and Labrador','NL'),(65,38,'Northwest Territories','nt'),(66,38,'Nova Scotia','NS'),(68,38,'Nunavut Territory','NU'),(69,38,'Prince Edward Island','PE'),(70,38,'Ontario','ON'),(71,38,'Quebec','QC'),(72,38,'Saskatchewan','SK'),(73,38,'Yukon Territory','YT');
/*!40000 ALTER TABLE `sci_statecodes` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_tasks`
--

DROP TABLE IF EXISTS `sci_tasks`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_tasks` (
  `TASKID` bigint(20) NOT NULL,
  `TASKNAME` varchar(2000) DEFAULT '',
  PRIMARY KEY (`TASKID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_tasks`
--

LOCK TABLES `sci_tasks` WRITE;
/*!40000 ALTER TABLE `sci_tasks` DISABLE KEYS */;
INSERT INTO `sci_tasks` VALUES (1,'Collection'),(2,'QC'),(3,'Genrate XML'),(4,'Workflow '),(5,'User'),(6,'Assignment'),(7,'Expiry'),(8,'Job Entry'),(9,'Update Job Entry'),(10,'Reports'),(11,'Web Watcher'),(12,'XML Import'),(13,'Correction'),(14,'Track User'),(15,'Auto QC Pass'),(16,'Delete'),(17,'Delete XML Delivery'),(18,'Vendor Fundingbody');
/*!40000 ALTER TABLE `sci_tasks` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_timesheet`
--

DROP TABLE IF EXISTS `sci_timesheet`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_timesheet` (
  `TRANSITIONALID` bigint(20) NOT NULL,
  `WORKFLOWID` bigint(20) DEFAULT NULL,
  `MODULEID` bigint(20) DEFAULT NULL,
  `ID` bigint(20) DEFAULT NULL,
  `TASKID` bigint(20) DEFAULT NULL,
  `USERID` bigint(20) DEFAULT NULL,
  `CYCLEID` bigint(20) DEFAULT NULL,
  `STATUSCODE` bigint(20) DEFAULT NULL,
  `STARTDATE` datetime DEFAULT NULL,
  `ENDDATE` datetime DEFAULT NULL,
  `IDLETIME` bigint(20) DEFAULT NULL,
  `ISERROR` varchar(2000) DEFAULT '',
  PRIMARY KEY (`TRANSITIONALID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_timesheet`
--

LOCK TABLES `sci_timesheet` WRITE;
/*!40000 ALTER TABLE `sci_timesheet` DISABLE KEYS */;
INSERT INTO `sci_timesheet` VALUES (1,4293,2,501100000009,1,51,0,7,'2020-08-27 20:14:06',NULL,NULL,''),(2,4272,2,501100000003,1,51,0,7,'2020-08-31 20:14:06','2020-08-31 23:41:19',72949633,''),(3,4305,2,501100000012,1,51,0,7,'2020-08-31 20:14:06',NULL,NULL,'');
/*!40000 ALTER TABLE `sci_timesheet` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_timesheetremarks`
--

DROP TABLE IF EXISTS `sci_timesheetremarks`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_timesheetremarks` (
  `WORKFLOWID` bigint(20) DEFAULT NULL,
  `TRANSITIONALID` bigint(20) NOT NULL,
  `STATUSCODE` bigint(20) DEFAULT NULL,
  `REMARKS` varchar(4000) DEFAULT '',
  `USERID` bigint(20) DEFAULT NULL,
  `CREATEDDATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`TRANSITIONALID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_timesheetremarks`
--

LOCK TABLES `sci_timesheetremarks` WRITE;
/*!40000 ALTER TABLE `sci_timesheetremarks` DISABLE KEYS */;
INSERT INTO `sci_timesheetremarks` VALUES (4293,0,5,'Test Remark',50,'2020-07-26 11:21:38');
/*!40000 ALTER TABLE `sci_timesheetremarks` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_tran_type_master`
--

DROP TABLE IF EXISTS `sci_tran_type_master`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_tran_type_master` (
  `TRAN_TYPE_ID` bigint(20) NOT NULL,
  `TRAN_NAME` varchar(200) DEFAULT '',
  PRIMARY KEY (`TRAN_TYPE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_tran_type_master`
--

LOCK TABLES `sci_tran_type_master` WRITE;
/*!40000 ALTER TABLE `sci_tran_type_master` DISABLE KEYS */;
/*!40000 ALTER TABLE `sci_tran_type_master` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_urlmaster`
--

DROP TABLE IF EXISTS `sci_urlmaster`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_urlmaster` (
  `ORGDBID` bigint(20) DEFAULT NULL,
  `URLID` bigint(20) NOT NULL,
  `URL` varchar(2000) DEFAULT '',
  `STATUS` bigint(20) DEFAULT NULL,
  `MODULEID` bigint(20) DEFAULT NULL,
  `CREATEDBY` bigint(20) DEFAULT NULL,
  `RETAIN_DELETEBY` bigint(20) DEFAULT NULL,
  `LASTUPDATEDBY` bigint(20) DEFAULT NULL,
  `CREATEDDATE` datetime DEFAULT NULL,
  `RETAIN_DELETEDATE` datetime DEFAULT NULL,
  `LASTUPDATEDDATE` datetime DEFAULT NULL,
  `BATCH` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`URLID`),
  KEY `IND_SCI_URLMASTER` (`ORGDBID`),
  KEY `IND_SCI_URLMST1` (`STATUS`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_urlmaster`
--

LOCK TABLES `sci_urlmaster` WRITE;
/*!40000 ALTER TABLE `sci_urlmaster` DISABLE KEYS */;
/*!40000 ALTER TABLE `sci_urlmaster` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_urlretain`
--

DROP TABLE IF EXISTS `sci_urlretain`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_urlretain` (
  `ORGDBID` bigint(20) DEFAULT NULL,
  `URL` varchar(2000) DEFAULT '',
  `MODULEID` bigint(20) DEFAULT NULL,
  `GROUPCOUNTER` bigint(20) DEFAULT NULL,
  `BATCH` bigint(20) DEFAULT NULL,
  `URLID` varchar(2000) NOT NULL DEFAULT ''
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_urlretain`
--

LOCK TABLES `sci_urlretain` WRITE;
/*!40000 ALTER TABLE `sci_urlretain` DISABLE KEYS */;
/*!40000 ALTER TABLE `sci_urlretain` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_urls`
--

DROP TABLE IF EXISTS `sci_urls`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_urls` (
  `ID` bigint(20) NOT NULL,
  `MODULEID` bigint(20) DEFAULT NULL,
  `PAGENAME` varchar(2000) DEFAULT '',
  `URL` varchar(2000) DEFAULT '',
  `USERID` bigint(20) DEFAULT NULL,
  `ISACTIVE` varchar(1) DEFAULT '0',
  `DELETEDBY` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_urls`
--

LOCK TABLES `sci_urls` WRITE;
/*!40000 ALTER TABLE `sci_urls` DISABLE KEYS */;
INSERT INTO `sci_urls` VALUES (501100000003,2,'establish.aspx','https://arcticnet.ulaval.ca/',51,'0',NULL),(501100000009,2,'FundingBase','http://www.casa-acea.ca/',50,'0',NULL);
/*!40000 ALTER TABLE `sci_urls` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_userlog`
--

DROP TABLE IF EXISTS `sci_userlog`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_userlog` (
  `WORKFLOWID` bigint(20) NOT NULL,
  `MODULEID` bigint(20) DEFAULT NULL,
  `ID` bigint(20) DEFAULT NULL,
  `CYCLEID` bigint(20) DEFAULT NULL,
  `PAGENAME` varchar(2000) DEFAULT '',
  `USERID` bigint(20) DEFAULT NULL,
  `CREATEDDATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `ACTION` varchar(2000) DEFAULT '',
  PRIMARY KEY (`WORKFLOWID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_userlog`
--

LOCK TABLES `sci_userlog` WRITE;
/*!40000 ALTER TABLE `sci_userlog` DISABLE KEYS */;
INSERT INTO `sci_userlog` VALUES (501100000003,NULL,501100000003,NULL,'FUNDINGBASE.ASPX',51,'2020-07-25 05:42:59','UPDATE'),(501100000009,NULL,501100000009,NULL,'FUNDINGBASE.ASPX',51,'2020-07-26 07:50:08','UPDATE'),(501100000010,NULL,501100000010,NULL,'FUNDINGBASE.ASPX',51,'2020-08-25 16:36:13','UPDATE'),(501100000011,NULL,501100000011,NULL,'FUNDINGBASE.ASPX',51,'2020-08-25 18:15:45','UPDATE');
/*!40000 ALTER TABLE `sci_userlog` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_usermaster`
--

DROP TABLE IF EXISTS `sci_usermaster`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_usermaster` (
  `USERID` bigint(20) NOT NULL,
  `USERNAME` varchar(2000) NOT NULL DEFAULT '',
  `PASSWORD` varchar(2000) DEFAULT '',
  `NAME` varchar(2000) DEFAULT '',
  `EMPCODE` varchar(2000) NOT NULL DEFAULT '',
  `CONTACTNO` varchar(2000) DEFAULT '',
  `EMAIL` varchar(2000) DEFAULT '',
  `ISACTIVE` varchar(1) NOT NULL DEFAULT 'Y',
  `CREATEDDATE` datetime NOT NULL,
  `CREADTEDBY` bigint(20) NOT NULL,
  PRIMARY KEY (`USERID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_usermaster`
--

LOCK TABLES `sci_usermaster` WRITE;
/*!40000 ALTER TABLE `sci_usermaster` DISABLE KEYS */;
INSERT INTO `sci_usermaster` VALUES (1,'ADMIN','ADMIN','ADMIN','QQ','9899908322','piyush.pandey@aptaracorp.com','Y','2011-01-31 13:01:18',0),(2,'nikhil','nikhil','nikhil','123','0000000000','abc@abc.com','Y','2011-04-11 12:12:31',1),(3,'expiry','expiry','Expiry','EXP','9865326598','exp@aptaracorp.com','N','2011-04-11 12:13:06',1),(4,'Jiby','zpr','Jiby K Kurian','ZPR','8802288052','jiby.kurian@aptaracorp.com','N','2011-04-13 15:36:47',1),(5,'AAA','AAA','AAA','AAA','1234567890','FGF@JG.COM','N','2011-04-13 15:56:43',1),(6,'Prashant','tfa','Prahshant Jain','TFA','9810741128','prahshant.jain@aptaracorp.com','N','2011-04-13 15:57:28',1),(7,'Arsha','zyj','Arsha Sasikumar','ZYJ','8802288052','arsha.sasikumar@aptaracorp.com','N','2011-04-13 16:04:16',1),(8,'Raja','xuz','Raja Soni','XUZ','8802288052','raja.soni@aptaracorp.com','N','2011-04-13 16:05:21',1),(9,'Jaspal','zyp','Jaspal Kaur','ZYP','8802288052','jaspal.kaur@aptaracorp.com','N','2011-04-13 16:06:07',1),(10,'Misbah','amk','Misbah Khan','AMK','8802288052','scival@aptaracorp.com','N','2011-04-13 16:16:50',1),(11,'Priyadarshini','apj','Priyadarshini Jha','APJ','8802288052','scival@aptaracorp.com','N','2011-04-13 16:19:26',1),(12,'Ashish','a079','Ashish Sahotra','AAS','9958425550','scival@aptaracorp.com','N','2011-04-13 16:24:53',1),(13,'Rons','arw','Rons Wilson','ARW','8802288052','scival@aptaracorp.com','N','2011-04-13 16:25:26',1),(14,'Monali','akm','Monali Katara','AKM','8802288052','scival@aptaracorp.com','N','2011-04-13 16:25:53',1),(15,'Madan','aml','Madan Lal Punia','AML','8802288052','scival@aptaracorp.com','N','2011-04-13 16:26:30',1),(16,'Dhriti','adg','Dhriti Gupta','ADG','8802288052','scival@aptaracorp.com','N','2011-04-13 16:27:02',1),(17,'Swati','asg','Swati Goel','ASG','8802288052','swati.goel@aptaracorp.com','N','2011-04-13 16:27:26',1),(18,'Ratna','arn','Ratna Nath','ARN','8802288052','scival@aptaracorp.com','N','2011-04-13 16:27:55',1),(19,'Subhra','asn','Subhra Nandi','ASN','8802288052','scival@aptaracorp.com','N','2011-04-13 16:28:23',1),(20,'Abhishek','zkb','Abhishek Nagar','ZKB','8802288052','scival@aptaracorp.com','N','2011-04-13 16:29:33',1),(21,'Rashmi','xnt','Rashmi Kumari','XNT','8802288052','scival@aptaracorp.com','N','2011-04-13 16:29:55',1),(22,'Kheya','xns','Kheya Chakravarty','XNS','8802288052','scival@aptaracorp.com','N','2011-04-13 16:30:19',1),(23,'Shruti','xtz','Shruti Jain','XTZ','8802288052','scival@aptaracorp.com','N','2011-04-13 16:30:42',1),(24,'Suman','xbz','Suman Pandey','XBZ','8802288052','scival@aptaracorp.com','N','2011-04-13 16:31:07',1),(25,'Abhinav','ZLP','Abhinav Raj','ZLP','9873847341','scival@aptaracorp.com','Y','2011-04-13 16:31:46',1),(26,'BHUPESH','BHUPESH','BHUPESH','YQH','9898989898','TEST@TEST.COM','Y','2011-04-26 14:23:54',1),(27,'Shashank','zym','Shashank','ZYM','9899461152','shshank.nigotre@aptaracorp.com','N','2011-04-30 19:20:12',1),(28,'Sonal','zsy','Sonal','ZSY','9871946787','sonal.jha@aptaracorp.com','N','2011-04-30 19:24:39',1),(29,'Gyanesh','vme','Gyanesh','VME','9999799873','gynesh.gunjan@aptaracorp.com','N','2011-06-10 20:56:45',1),(30,'web','web','web','WEB','2356891245','web@scival.com','Y','2011-06-14 12:54:49',1),(31,'ankita','A483','Ankita Kumar','ZZZ','9818847016','ankita89kumar@gmail.com','N','2011-07-05 16:06:24',1),(32,'Amanveer','aman','Amanveer','AMA','8800269258','aman@aptaracorp.com','N','2011-09-12 16:22:25',1),(33,'Aditi','aditi','Aditi','ADITI','8800269258','aditi@aptaracorp.com','N','2011-09-12 20:04:25',1),(34,'Swikriti','swikriti','Swikriti','SWIKRITI','8800269258','Swikriti@aptaracorp.com','N','2011-09-12 20:06:56',1),(35,'Varun','varun','Varun','VARUN','8800269258','varun@aptaracorp.com','N','2011-09-12 20:08:30',1),(36,'Mini','mini','Mini','MINI','8800269258','mini@aptaracorp.com','N','2011-09-12 20:11:47',1),(37,'Tasavvur','tasavvur','Tasavvur','TASAVVUR','8800269258','tasavvur@aptaracorp.com','N','2011-09-12 20:13:49',1),(38,'Aashima','aashima','Aashima','AASHIMA','8800269258','aashima@aptaracorp.com','N','2011-09-12 21:18:48',1),(39,'Sukanya','sukanya','Sukanya','SUK','8800269258','scival@aptaracorp.com','N','2011-12-23 18:12:56',1),(40,'Asha','asha','Asha','ASH','8800269258','scival@aptaracorp.com','N','2011-12-23 18:24:38',1),(41,'Renu','renu','Renu','REN','8800269258','renu.singh@aptaracorp.com','N','2011-12-23 18:27:28',1),(42,'Rashmi1','ras','Rashmi','ABC','8800269258','rashmi.kumari@aptaracorp.com','N','2012-02-08 17:58:00',1),(43,'Subhash1','subhash','Subhash Rawat','ABCDE','9990307870','websitewatcher@aptaracorp.com','N','2012-05-21 16:41:27',1),(44,'Madan1','madan1','Madan','MAD','8800269258','scival@aptaracorp.com','Y','2012-07-03 11:18:42',1),(45,'Tasavvur1','tasavvur1','Tasavvur','TAS','8800269258','scival@aptaracorp.com','Y','2012-07-03 11:23:17',1),(46,'Shashanknigotre','zym','Shashank','SHA','8800269258','scival@aptaracorp.com','Y','2012-07-03 11:25:18',1),(47,'RonsWilson','arw','Rons','RON','8800269258','scival@aptaracorp.com','Y','2012-07-03 11:26:46',1),(48,'Priya','apj','Priyadarshini','PRI','8800269258','scival@aptaracorp.com','Y','2012-07-03 11:28:31',1),(49,'Aman','aman','Amanveer','AMAN','8800269258','scival@aptaracorp.com','Y','2012-07-03 11:29:40',1),(50,'z','z','Ankit','A1357','8802880401','ankit.kaushik@aptaracorp.com','Y','2012-07-03 11:31:15',1),(51,'arun','arun','Arun','A1234','9999999999','arun@gmail.com','Y','2012-07-03 11:31:15',1);
/*!40000 ALTER TABLE `sci_usermaster` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_usertask`
--

DROP TABLE IF EXISTS `sci_usertask`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_usertask` (
  `USERID` bigint(20) NOT NULL,
  `TASKID` bigint(20) NOT NULL,
  `MODULEID` bigint(20) NOT NULL,
  PRIMARY KEY (`USERID`,`TASKID`,`MODULEID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_usertask`
--

LOCK TABLES `sci_usertask` WRITE;
/*!40000 ALTER TABLE `sci_usertask` DISABLE KEYS */;
INSERT INTO `sci_usertask` VALUES (26,1,1),(26,2,1),(26,3,1),(26,4,1),(26,5,1),(26,6,1),(26,7,1),(26,8,1),(26,9,1),(26,10,1),(26,11,5),(26,12,1),(26,13,1),(26,14,1),(26,15,1),(26,16,1),(26,17,1),(26,18,1),(50,1,2),(50,3,2),(50,4,2),(50,5,2),(50,6,2),(50,7,2),(50,8,2),(50,9,2),(50,10,2),(50,12,2),(50,13,2),(50,14,2),(50,15,2),(50,16,2),(50,18,2),(51,1,1),(51,1,2),(51,1,3),(51,1,4),(51,1,5),(51,2,1),(51,2,2),(51,2,3),(51,2,4),(51,2,5),(51,3,1),(51,3,2),(51,3,3),(51,3,4),(51,3,5),(51,4,1),(51,4,2),(51,4,3),(51,4,4),(51,4,5),(51,5,1),(51,5,2),(51,5,3),(51,5,4),(51,5,5),(51,6,1),(51,6,2),(51,6,3),(51,6,4),(51,6,5),(51,7,1),(51,7,2),(51,7,3),(51,7,4),(51,7,5),(51,8,1),(51,8,2),(51,8,3),(51,8,4),(51,8,5),(51,9,1),(51,9,2),(51,9,3),(51,9,4),(51,9,5),(51,10,1),(51,10,2),(51,10,3),(51,10,4),(51,10,5),(51,11,2),(51,11,3),(51,11,4),(51,11,5),(51,12,1),(51,12,2),(51,12,3),(51,12,4),(51,12,5),(51,13,1),(51,13,2),(51,13,3),(51,13,4),(51,13,5),(51,14,1),(51,14,2),(51,14,3),(51,14,4),(51,14,5),(51,15,1),(51,15,2),(51,15,3),(51,15,4),(51,15,5),(51,16,1),(51,16,2),(51,16,3),(51,16,4),(51,16,5),(51,17,1),(51,17,2),(51,17,3),(51,17,4),(51,17,5),(51,18,1),(51,18,2),(51,18,3),(51,18,4),(51,18,5),(53,1,1),(53,2,1),(53,3,1),(53,4,1),(53,5,1),(53,6,1),(53,7,1),(53,8,1),(53,9,1),(53,10,1),(53,12,1),(53,13,1),(53,14,1),(53,15,1),(53,16,1),(53,17,1),(58,2,1);
/*!40000 ALTER TABLE `sci_usertask` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_version`
--

DROP TABLE IF EXISTS `sci_version`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_version` (
  `VERSION_ID` varchar(10) CHARACTER SET utf8 NOT NULL,
  `RELEASE_DATE` datetime DEFAULT NULL,
  PRIMARY KEY (`VERSION_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_version`
--

LOCK TABLES `sci_version` WRITE;
/*!40000 ALTER TABLE `sci_version` DISABLE KEYS */;
INSERT INTO `sci_version` VALUES ('6.0.0.0','2020-04-26 19:04:32');
/*!40000 ALTER TABLE `sci_version` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_workflow`
--

DROP TABLE IF EXISTS `sci_workflow`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_workflow` (
  `WORKFLOWID` bigint(20) NOT NULL,
  `MODULEID` bigint(20) DEFAULT NULL,
  `ID` bigint(20) DEFAULT NULL,
  `CYCLE` bigint(20) DEFAULT NULL,
  `TEMPLATEID` bigint(20) DEFAULT NULL,
  `TASKID` bigint(20) DEFAULT NULL,
  `SEQUENCE` bigint(20) DEFAULT NULL,
  `STARTDATE` datetime DEFAULT NULL,
  `STARTBY` bigint(20) DEFAULT NULL,
  `COMPLETEDDATE` datetime DEFAULT NULL,
  `COMPLETEDBY` bigint(20) DEFAULT NULL,
  `CREATEDBY` bigint(20) DEFAULT NULL,
  `ASSIGNBY` bigint(20) DEFAULT NULL,
  `ASSIGNDATE` datetime DEFAULT NULL,
  `STATUSID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`WORKFLOWID`),
  KEY `IND_SCIWORKFLOW` (`CYCLE`,`ID`,`MODULEID`),
  KEY `IND_WORKFLOW` (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_workflow`
--

LOCK TABLES `sci_workflow` WRITE;
/*!40000 ALTER TABLE `sci_workflow` DISABLE KEYS */;
INSERT INTO `sci_workflow` VALUES (4261,2,501100000001,0,2,1,1,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4262,2,501100000001,1,2,1,1,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4263,2,501100000001,2,2,1,1,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4264,2,501100000001,3,2,1,1,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4265,2,501100000002,0,2,1,1,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4266,2,501100000002,1,2,1,1,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4267,2,501100000002,2,2,1,1,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4268,2,501100000002,3,2,1,1,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4269,2,501100000003,0,2,1,1,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4270,2,501100000003,1,2,1,1,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4271,2,501100000003,2,2,1,1,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4272,2,501100000003,3,2,1,1,'2020-09-04 00:00:00',51,NULL,NULL,1,NULL,NULL,7),(4273,2,501100000004,0,2,1,1,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4274,2,501100000004,1,2,1,1,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4275,2,501100000004,2,2,1,3,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4276,2,501100000004,3,2,1,4,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4277,2,501100000005,0,2,1,1,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4278,2,501100000005,1,2,1,2,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4279,2,501100000005,2,2,1,3,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4280,2,501100000005,3,2,1,4,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4281,2,501100000006,0,2,1,1,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4282,2,501100000006,1,2,1,2,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4283,2,501100000006,2,2,1,3,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4284,2,501100000006,3,2,1,4,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4286,2,501100000007,0,2,1,2,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4287,2,501100000007,1,2,3,3,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4288,2,501100000007,2,2,9,4,NULL,1,NULL,NULL,1,NULL,NULL,NULL),(4289,2,501100000003,0,2,1,1,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4290,2,501100000008,0,2,2,2,NULL,4,NULL,NULL,1,NULL,NULL,NULL),(4291,2,501100000008,0,2,3,3,NULL,1,NULL,NULL,1,NULL,NULL,NULL),(4292,2,501100000008,0,2,9,4,NULL,1,NULL,NULL,1,NULL,NULL,NULL),(4293,2,501100000009,0,2,1,1,'2020-08-27 00:00:00',51,NULL,NULL,1,NULL,NULL,7),(4294,2,501100000009,0,2,2,2,NULL,4,NULL,NULL,1,NULL,NULL,NULL),(4295,2,501100000009,0,2,3,3,NULL,1,NULL,NULL,1,NULL,NULL,NULL),(4296,2,501100000009,0,2,9,4,NULL,1,NULL,NULL,1,NULL,NULL,NULL),(4297,2,501100000010,0,2,1,1,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4298,2,501100000010,0,2,2,2,NULL,4,NULL,NULL,1,NULL,NULL,NULL),(4299,2,501100000010,0,2,3,3,NULL,1,NULL,NULL,1,NULL,NULL,NULL),(4300,2,501100000010,0,2,9,4,NULL,1,NULL,NULL,1,NULL,NULL,NULL),(4301,2,501100000011,0,2,1,1,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4302,2,501100000011,0,2,2,2,NULL,4,NULL,NULL,1,NULL,NULL,NULL),(4303,2,501100000011,0,2,3,3,NULL,1,NULL,NULL,1,NULL,NULL,NULL),(4304,2,501100000011,0,2,9,4,NULL,1,NULL,NULL,1,NULL,NULL,NULL),(4305,2,501100000012,0,2,1,1,'2020-08-30 00:00:00',51,NULL,NULL,1,NULL,NULL,7),(4306,2,501100000012,0,2,1,1,'2020-08-30 00:00:00',51,NULL,NULL,1,NULL,NULL,7),(4307,2,501100000012,0,2,1,1,'2020-08-30 00:00:00',51,NULL,NULL,1,NULL,NULL,7),(4308,2,501100000012,0,2,9,4,NULL,1,NULL,NULL,1,NULL,NULL,NULL),(4309,2,501100000013,0,2,1,1,NULL,51,NULL,NULL,1,NULL,NULL,NULL),(4310,2,501100000013,0,2,2,2,NULL,NULL,NULL,NULL,1,NULL,NULL,NULL);
/*!40000 ALTER TABLE `sci_workflow` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_workflowtemplate`
--

DROP TABLE IF EXISTS `sci_workflowtemplate`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_workflowtemplate` (
  `TEMPLATEID` bigint(20) NOT NULL,
  `TASKID` bigint(20) DEFAULT NULL,
  `SEQUENCE` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`TEMPLATEID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_workflowtemplate`
--

LOCK TABLES `sci_workflowtemplate` WRITE;
/*!40000 ALTER TABLE `sci_workflowtemplate` DISABLE KEYS */;
/*!40000 ALTER TABLE `sci_workflowtemplate` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sci_xml_limits`
--

DROP TABLE IF EXISTS `sci_xml_limits`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sci_xml_limits` (
  `NAME` varchar(200) NOT NULL DEFAULT '',
  `LIMITS` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`NAME`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sci_xml_limits`
--

LOCK TABLES `sci_xml_limits` WRITE;
/*!40000 ALTER TABLE `sci_xml_limits` DISABLE KEYS */;
/*!40000 ALTER TABLE `sci_xml_limits` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `subtype`
--

DROP TABLE IF EXISTS `subtype`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `subtype` (
  `ID` varchar(100) NOT NULL,
  `SUBTYPE_TEXT` varchar(2000) DEFAULT '',
  `FUNDINGBODY_ID` bigint(20) DEFAULT NULL,
  UNIQUE KEY `SUBTYPE_U01` (`FUNDINGBODY_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `subtype`
--

LOCK TABLES `subtype` WRITE;
/*!40000 ALTER TABLE `subtype` DISABLE KEYS */;
INSERT INTO `subtype` VALUES ('academ','Universities (academic only)',501100000644),('academ','Universities (academic only)',501100000645),('academ','Universities (academic only)',501100000649),('othern','other non-profit',501100000651),('othern','other non-profit',501100000652),('academ','Universities (academic only)',501100000653),('othern','other non-profit',501100000654),('asssoc','Associations and societies (private and public)',501100000681),('academ','Universities (academic only)',501100000697),('asssoc','Associations and societies (private and public)',501100000698),('othern','other non-profit',501100000703),('academ','Universities (academic only)',501100000741),('asssoc','Associations and societies (private and public)',501100000712),('asssoc','Associations and societies (private and public)',501100000683),('academ','Universities (academic only)',501100000716),('othern','other non-profit',501100000720),('academ','Universities (academic only)',501100000735),('academ','Universities (academic only)',501100000740),('asssoc','Associations and societies (private and public)',501100000692),('othern','other non-profit',501100000686),('intern','international',501100000775),('academ','Universities (academic only)',501100000779),('academ','Universities (academic only)',501100000770),('govfed','National government',501100000811),('govfed','Federal/National Government',501100000805),('govfed','Federal/National Government',501100000808),('govfed','National government',501100000806),('govfed','Federal/National Government',501100000810),('govfed','Federal/National Government',501100000804),('govfed','National government',501100000807),('govfed','Federal/National Government',501100000809),('govfed','Federal/National Government',501100000824),('govfed','National government',501100000847),('founda','foundation',501100000843),('othern','other non-profit',501100000861),('othern','other non-profit',501100000862),('asssoc','professional associations and societies',501100000827),('intern','international',501100000860),('govfed','National government',501100000844),('corpor','corporate',501100000823),('othern','other non-profit',501100000869),('intern','international',501100000854),('academ','Universities (academic only)',501100000821),('govnon','Local government',501100000985),('othern','other non-profit',501100000986),('founda','foundation',501100000952),('govfed','National government',501100000929),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000926),('govnon','government non-federal',501100000957),('govnon','government non-federal',501100000956),('othern','other non-profit',501100001044),('govfed','National government',501100001029),('govfed','Federal/National Government',501100001027),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100001045),('founda','foundation',501100001067),('govnon','Local government',501100001126),('govnon','government non-federal',501100001125),('asssoc','Associations and societies (private and public)',501100001127),('asssoc','Associations and societies (private and public)',501100001128),('academ','Universities (academic only)',501100001129),('asssoc','Associations and societies (private and public)',501100001130),('asssoc','Associations and societies (private and public)',501100001131),('govfed','National government',501100001134),('academ','academic',501100001135),('academ','Universities (academic only)',501100001136),('othern','other non-profit',501100001141),('academ','Universities (academic only)',501100001142),('govnon','Local government',501100001191),('corpor','For-profit companies (industry)',501100001229),('othern','other non-profit',501100001186),('othern','other non-profit',501100001244),('govfed','National government',501100000037),('asssoc','Associations and societies (private and public)',501100000007),('govfed','National government',501100000016),('othern','other non-profit',501100000014),('govfed','National government',501100000029),('govfed','National government',501100000030),('govnon','Local government',501100000048),('govfed','National government',501100000040),('asssoc','4293',501100000009),('govfed','National government',501100000036),('asssoc','Associations and societies (private and public)',501100000015),('govfed','Federal/National Government',501100000044),('govfed','National government',501100000045),('asssoc','Associations and societies (private and public)',501100000005),('othern','other non-profit',501100000080),('academ','Universities (academic only)',501100000084),('othern','other non-profit',501100000110),('govnon','Local government',501100000085),('asssoc','Associations and societies (private and public)',501100000142),('govfed','National government',501100000155),('govfed','National government',501100000159),('othern','other non-profit',501100000164),('founda','foundation',501100000197),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000204),('othern','other non-profit',501100000182),('othern','other non-profit',501100000233),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000222),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000262),('asssoc','Associations and societies (private and public)',501100000300),('othern','other non-profit',501100000301),('govfed','National government',501100000268),('academ','academic',501100000286),('academ','academic',501100000333),('othern','other non-profit',501100000295),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000296),('asssoc','professional associations and societies',501100000342),('asssoc','Associations and societies (private and public)',501100000411),('othern','other non-profit',501100000343),('academ','academic',501100000356),('intern','international',501100000391),('othern','other non-profit',501100000401),('othern','other non-profit',501100000400),('academ','Universities (academic only)',501100000349),('othern','other non-profit',501100000399),('othern','other non-profit',501100000385),('asssoc','Associations and societies (private and public)',501100000345),('asssoc','Associations and societies (private and public)',501100000593),('othern','other non-profit',501100000529),('intern','international',501100000531),('othern','other non-profit',501100000548),('academ','Universities (academic only)',501100000595),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000594),('academ','Universities (academic only)',501100000591),('othern','other non-profit',501100000522),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000615),('academ','Universities (academic only)',501100000609),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000665),('academ','Universities (academic only)',501100000622),('academ','Universities (academic only)',501100000636),('asssoc','Associations and societies (private and public)',501100000655),('othern','other non-profit',501100000657),('othern','other non-profit',501100000658),('othern','other non-profit',501100000662),('asssoc','Associations and societies (private and public)',501100000667),('govnon','Local government',501100000668),('asssoc','Associations and societies (private and public)',501100000670),('othern','other non-profit',501100000669),('academ','Universities (academic only)',501100000673),('academ','Universities (academic only)',501100000610),('asssoc','Associations and societies (private and public)',501100000623),('asssoc','Associations and societies (private and public)',501100000672),('othern','other non-profit',501100000671),('academ','Universities (academic only)',501100000663),('academ','Universities (academic only)',501100000666),('asssoc','Associations and societies (private and public)',501100000687),('academ','academic',501100000743),('othern','other non-profit',501100000773),('academ','Universities (academic only)',501100000764),('academ','Universities (academic only)',501100001198),('othern','other non-profit',501100001199),('asssoc','Associations and societies (private and public)',501100001202),('academ','Universities (academic only)',501100001205),('academ','Universities (academic only)',501100001206),('othern','other non-profit',501100001208),('academ','Universities (academic only)',501100001209),('othern','other non-profit',501100001210),('govnon','government non-federal',501100001214),('othern','other non-profit',501100001216),('othern','other non-profit',501100001254),('othern','other non-profit',501100001204),('academ','Universities (academic only)',501100001215),('asssoc','Associations and societies (private and public)',501100001232),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100001258),('asssoc','Associations and societies (private and public)',501100001233),('asssoc','Associations and societies (private and public)',501100001234),('asssoc','professional associations and societies',501100001235),('othern','other non-profit',501100001236),('founda','foundation',501100001193),('othern','other non-profit',501100001237),('asssoc','professional associations and societies',501100001238),('othern','other non-profit',501100001240),('govnon','Local government',501100001241),('govnon','government non-federal',501100001242),('govnon','government non-federal',501100001243),('govnon','Local government',501100001246),('asssoc','Associations and societies (private and public)',501100001247),('academ','Universities (academic only)',501100001248),('govnon','Local government',501100001231),('govfed','National government',501100000024),('academ','Universities (academic only)',501100000020),('govfed','National government',501100000042),('govfed','National government',501100000023),('govfed','National government',501100000031),('govfed','National government',501100000017),('othern','other non-profit',501100000082),('founda','foundation',501100000108),('corpor','For-profit companies (industry)',501100000075),('asssoc','Associations and societies (private and public)',501100000068),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000069),('asssoc','Associations and societies (private and public)',501100000070),('asssoc','Associations and societies (private and public)',501100000071),('corpor','For-profit companies (industry)',501100000145),('corpor','For-profit companies (industry)',501100000146),('asssoc','Associations and societies (private and public)',501100000143),('asssoc','Associations and societies (private and public)',501100000149),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000147),('othern','other non-profit',501100000150),('founda','foundation',501100000153),('asssoc','Associations and societies (private and public)',501100000157),('academ','Universities (academic only)',501100000162),('govnon','Local government',501100000195),('academ','academic',501100000181),('founda','foundation',501100000200),('academ','Universities (academic only)',501100000187),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000238),('govnon','Local government',501100000237),('othern','other non-profit',501100000228),('govnon','Local government',501100000232),('academ','Universities (academic only)',501100000305),('othern','other non-profit',501100000306),('govfed','National government',501100000270),('asssoc','Associations and societies (private and public)',501100000310),('othern','other non-profit',501100000317),('govfed','National government',501100000277),('othern','other non-profit',501100000319),('othern','other non-profit',501100000282),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000324),('othern','other non-profit',501100000283),('othern','other non-profit',501100000285),('othern','other non-profit',501100000327),('othern','other non-profit',501100000289),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000331),('academ','Universities (academic only)',501100000335),('othern','other non-profit',501100000382),('othern','other non-profit',501100000357),('othern','other non-profit',501100000387),('othern','other non-profit',501100000362),('othern','other non-profit',501100000346),('othern','other non-profit',501100000361),('asssoc','Associations and societies (private and public)',501100000373),('founda','foundation',501100000390),('othern','other non-profit',501100000368),('othern','other non-profit',501100000377),('othern','other non-profit',501100000405),('othern','other non-profit',501100000407),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000404),('asssoc','professional associations and societies',501100000369),('founda','foundation',501100000379),('othern','other non-profit',501100000354),('othern','other non-profit',501100000384),('othern','other non-profit',501100000383),('corpor','For-profit companies (industry)',501100000365),('asssoc','Associations and societies (private and public)',501100000526),('othern','other non-profit',501100000537),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000534),('academ','Universities (academic only)',501100000554),('asssoc','Associations and societies (private and public)',501100000559),('academ','academic',501100000603),('founda','foundation',501100000626),('othern','other non-profit',501100000624),('othern','other non-profit',501100000627),('founda','foundation',501100000631),('asssoc','Associations and societies (private and public)',501100000632),('asssoc','Associations and societies (private and public)',501100000633),('corpor','corporate',501100000630),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000625),('academ','Universities (academic only)',501100000621),('othern','other non-profit',501100000650),('academ','Universities (academic only)',501100000661),('othern','other non-profit',501100000647),('asssoc','Associations and societies (private and public)',501100000640),('othern','other non-profit',501100000634),('asssoc','Associations and societies (private and public)',501100000608),('intern','international',501100000612),('asssoc','Associations and societies (private and public)',501100000639),('othern','other non-profit',501100000642),('asssoc','Associations and societies (private and public)',501100000641),('academ','Universities (academic only)',501100000656),('govfed','National government',501100000659),('othern','other non-profit',501100000700),('asssoc','Associations and societies (private and public)',501100000682),('asssoc','Associations and societies (private and public)',501100000748),('academ','Universities (academic only)',501100000747),('asssoc','Associations and societies (private and public)',501100000729),('academ','Universities (academic only)',501100000739),('academ','Universities (academic only)',501100000737),('academ','Universities (academic only)',501100000728),('academ','Universities (academic only)',501100000727),('govfed','National government',501100000780),('academ','Universities (academic only)',501100000761),('corpor','For-profit companies (industry)',501100000767),('corpor','For-profit companies (industry)',501100000776),('othern','other non-profit',501100000771),('corpor','corporate',501100000801),('govfed','Federal/National Government',501100000803),('govfed','Federal/National Government',501100000802),('asssoc','Associations and societies (private and public)',501100000983),('corpor','For-profit companies (industry)',501100000948),('othern','other non-profit',501100000950),('othern','other non-profit',501100000951),('govfed','National government',501100000943),('othern','other non-profit',501100000966),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000928),('govfed','National government',501100000977),('othern','other non-profit',501100000973),('othern','other non-profit',501100000941),('asssoc','Associations and societies (private and public)',501100001066),('academ','academic',501100001052),('asssoc','Associations and societies (private and public)',501100001065),('govnon','government non-federal',501100001068),('govfed','National government',501100001072),('asssoc','Associations and societies (private and public)',501100001023),('asssoc','Associations and societies (private and public)',501100001062),('othern','other non-profit',501100001036),('govfed','National government',501100001021),('corpor','corporate',501100001053),('othern','other non-profit',501100001081),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100001034),('othern','other non-profit',501100001031),('academ','Universities (academic only)',501100001143),('asssoc','professional associations and societies',501100001132),('asssoc','Associations and societies (private and public)',501100001133),('govfed','National government',501100001137),('academ','academic',501100001144),('othern','other non-profit',501100001140),('asssoc','Associations and societies (private and public)',501100001145),('othern','other non-profit',501100001103),('asssoc','Associations and societies (private and public)',501100001146),('asssoc','Associations and societies (private and public)',501100001147),('othern','other non-profit',501100001149),('asssoc','Associations and societies (private and public)',501100001116),('othern','other non-profit',501100001181),('govfed','National government',501100001228),('govfed','National government',501100001213),('govfed','National government',501100001223),('govnon','government non-federal',501100001188),('govnon','government non-federal',501100001239),('govfed','Federal/National Government',501100001225),('govnon','Local government',501100001195),('academ','Universities (academic only)',501100001265),('othern','other non-profit',501100001266),('othern','other non-profit',501100001307),('asssoc','professional associations and societies',501100001267),('othern','other non-profit',501100001262),('corpor','For-profit companies (industry)',501100001269),('othern','other non-profit',501100001268),('asssoc','Associations and societies (private and public)',501100001301),('corpor','corporate',501100001270),('othern','other non-profit',501100001271),('othern','other non-profit',501100001273),('othern','other non-profit',501100001302),('othern','other non-profit',501100001272),('othern','other non-profit',501100001276),('govfed','National government',501100000026),('asssoc','Associations and societies (private and public)',501100000013),('corpor','For-profit companies (industry)',501100000098),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000106),('asssoc','Associations and societies (private and public)',501100000079),('othern','other non-profit',501100000109),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000088),('academ','Universities (academic only)',501100000087),('corpor','For-profit companies (industry)',501100000141),('academ','Universities (academic only)',501100000144),('asssoc','Associations and societies (private and public)',501100000152),('asssoc','Associations and societies (private and public)',501100000202),('asssoc','Associations and societies (private and public)',501100000188),('govnon','Local government',501100000193),('govnon','Local government',501100000205),('asssoc','Associations and societies (private and public)',501100000235),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000244),('asssoc','Associations and societies (private and public)',501100000261),('asssoc','Associations and societies (private and public)',501100000263),('othern','other non-profit',501100000299),('govfed','National government',501100000269),('othern','other non-profit',501100000307),('intern','international',501100000308),('govfed','National government',501100000271),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000273),('othern','other non-profit',501100000275),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000312),('asssoc','Associations and societies (private and public)',501100000313),('othern','other non-profit',501100000314),('othern','other non-profit',501100000316),('asssoc','Associations and societies (private and public)',501100000320),('othern','other non-profit',501100000321),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000322),('asssoc','Associations and societies (private and public)',501100000281),('othern','other non-profit',501100000325),('academ','Universities (academic only)',501100000287),('othern','other non-profit',501100000291),('othern','other non-profit',501100000292),('othern','other non-profit',501100000360),('asssoc','Associations and societies (private and public)',501100000398),('asssoc','Associations and societies (private and public)',501100000359),('othern','other non-profit',501100000414),('founda','foundation',501100000352),('othern','other non-profit',501100000410),('othern','other non-profit',501100000378),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000348),('academ','Universities (academic only)',501100000592),('asssoc','Associations and societies (private and public)',501100000544),('corpor','For-profit companies (industry)',501100000533),('asssoc','Associations and societies (private and public)',501100000550),('asssoc','Associations and societies (private and public)',501100000555),('asssoc','Associations and societies (private and public)',501100000556),('asssoc','Associations and societies (private and public)',501100000558),('academ','Universities (academic only)',501100000584),('govnon','Local government',501100000589),('academ','academic',501100000585),('academ','Universities (academic only)',501100000587),('asssoc','Associations and societies (private and public)',501100000523),('govfed','National government',501100000617),('govfed','National government',501100000664),('academ','Universities (academic only)',501100000745),('academ','Universities (academic only)',501100000744),('othern','other non-profit',501100000684),('academ','Universities (academic only)',501100000685),('asssoc','Associations and societies (private and public)',501100000730),('othern','other non-profit',501100000689),('academ','Universities (academic only)',501100000696),('othern','other non-profit',501100000690),('asssoc','Associations and societies (private and public)',501100000699),('academ','Universities (academic only)',501100000718),('academ','Universities (academic only)',501100000705),('othern','other non-profit',501100000749),('othern','other non-profit',501100000732),('othern','other non-profit',501100000733),('asssoc','Associations and societies (private and public)',501100000704),('intern','international',501100000726),('othern','other non-profit',501100000723),('othern','other non-profit',501100000717),('othern','other non-profit',501100000722),('founda','foundation',501100000721),('govfed','National government',501100000688),('asssoc','Associations and societies (private and public)',501100000713),('asssoc','Associations and societies (private and public)',501100000714),('asssoc','Associations and societies (private and public)',501100000711),('academ','Universities (academic only)',501100000710),('govfed','National government',501100000901),('academ','Universities (academic only)',501100000777),('asssoc','Associations and societies (private and public)',501100000846),('academ','Universities (academic only)',501100000840),('asssoc','professional associations and societies',501100000834),('asssoc','Associations and societies (private and public)',501100000841),('corpor','For-profit companies (industry)',501100000842),('asssoc','Associations and societies (private and public)',501100000865),('othern','other non-profit',501100000867),('othern','other non-profit',501100000852),('govfed','National government',501100000829),('othern','other non-profit',501100000832),('asssoc','Associations and societies (private and public)',501100000825),('asssoc','Associations and societies (private and public)',501100000828),('othern','other non-profit',501100000833),('othern','other non-profit',501100000870),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000872),('othern','other non-profit',501100000850),('govfed','federal',501100000830),('othern','other non-profit',501100000871),('corpor','For-profit companies (industry)',501100000831),('othern','other non-profit',501100000822),('othern','other non-profit',501100000849),('govfed','Federal/National Government',501100000890),('govfed','Federal/National Government',501100000887),('govfed','Federal/National Government',501100000899),('govfed','Federal/National Government',501100000905),('govfed','Federal/National Government',501100000904),('govfed','Federal/National Government',501100000897),('govfed','Federal/National Government',501100000888),('govfed','Federal/National Government',501100000889),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000019),('govfed','National government',501100000027),('govfed','National government',501100000028),('asssoc','Associations and societies (private and public)',501100000006),('govfed','National government',501100000008),('govfed','National government',501100000033),('asssoc','Associations and societies (private and public)',501100000104),('academ','Universities (academic only)',501100000078),('othern','other non-profit',501100000100),('govnon','Local government',501100000061),('asssoc','Associations and societies (private and public)',501100000066),('asssoc','Associations and societies (private and public)',501100000062),('govnon','Local government',501100000094),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000095),('asssoc','Associations and societies (private and public)',501100000097),('corpor','For-profit companies (industry)',501100000063),('academ','Universities (academic only)',501100000067),('govfed','National government',501100000065),('asssoc','Associations and societies (private and public)',501100000089),('othern','other non-profit',501100000091),('othern','other non-profit',501100000090),('academ','Universities (academic only)',501100000121),('govfed','Federal/National Government',501100000886),('asssoc','Associations and societies (private and public)',501100000186),('asssoc','Associations and societies (private and public)',501100000185),('othern','other non-profit',501100000189),('othern','other non-profit',501100000183),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000243),('govnon','Local government',501100000231),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000236),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000303),('asssoc','Associations and societies (private and public)',501100000304),('govfed','National government',501100000267),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000274),('asssoc','Associations and societies (private and public)',501100000311),('govfed','National government',501100000276),('othern','other non-profit',501100000280),('govnon','Local government',501100000284),('othern','other non-profit',501100000328),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000329),('founda','foundation',501100000330),('asssoc','Associations and societies (private and public)',501100000332),('othern','other non-profit',501100000334),('othern','other non-profit',501100000293),('othern','other non-profit',501100000294),('asssoc','professional associations and societies',501100000298),('othern','other non-profit',501100000388),('asssoc','Associations and societies (private and public)',501100000395),('othern','other non-profit',501100000363),('othern','other non-profit',501100000402),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000355),('asssoc','Associations and societies (private and public)',501100000406),('othern','other non-profit',501100000408),('othern','other non-profit',501100000341),('asssoc','professional associations and societies',501100000393),('othern','other non-profit',501100000350),('othern','other non-profit',501100000527),('othern','other non-profit',501100000538),('corpor','For-profit companies (industry)',501100000577),('asssoc','Associations and societies (private and public)',501100000547),('asssoc','Associations and societies (private and public)',501100000561),('asssoc','Associations and societies (private and public)',501100000562),('asssoc','Associations and societies (private and public)',501100000565),('asssoc','Associations and societies (private and public)',501100000543),('asssoc','Associations and societies (private and public)',501100000541),('asssoc','professional associations and societies',501100000542),('academ','Universities (academic only)',501100000553),('asssoc','Associations and societies (private and public)',501100000576),('asssoc','Associations and societies (private and public)',501100000549),('asssoc','Associations and societies (private and public)',501100000571),('asssoc','Associations and societies (private and public)',501100000573),('othern','other non-profit',501100000581),('othern','other non-profit',501100000582),('asssoc','professional associations and societies',501100000521),('asssoc','Associations and societies (private and public)',501100000614),('othern','other non-profit',501100000616),('asssoc','Associations and societies (private and public)',501100000675),('othern','other non-profit',501100000691),('asssoc','Associations and societies (private and public)',501100000707),('academ','Universities (academic only)',501100000695),('academ','Universities (academic only)',501100000742),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000724),('asssoc','Associations and societies (private and public)',501100000708),('othern','other non-profit',501100000706),('corpor','For-profit companies (industry)',501100000766),('othern','other non-profit',501100000762),('govfed','Federal/National Government',501100000778),('intern','international',501100000782),('govfed','Federal/National Government',501100000783),('govfed','National government',501100000781),('govfed','National government',501100000784),('govfed','Federal/National Government',501100000785),('govfed','National government',501100000812),('academ','Universities (academic only)',501100000839),('academ','Universities (academic only)',501100000866),('academ','Universities (academic only)',501100000859),('academ','Universities (academic only)',501100000857),('academ','Universities (academic only)',501100000837),('academ','Universities (academic only)',501100000836),('othern','other non-profit',501100000881),('academ','Universities (academic only)',501100000882),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000884),('academ','Universities (academic only)',501100000883),('founda','foundation',501100000885),('govnon','Local government',501100000902),('govfed','Federal/National Government',501100000895),('govfed','National government',501100000903),('govfed','Federal/National Government',501100000896),('govfed','Federal/National Government',501100000898),('govfed','Federal/National Government',501100000900),('govnon','Local government',501100000974),('othern','other non-profit',501100000932),('founda','foundation',501100000946),('academ','Universities (academic only)',501100000995),('corpor','For-profit companies (industry)',501100000978),('govfed','federal',501100000934),('govfed','National government',501100000923),('othern','other non-profit',501100000970),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000945),('asssoc','Associations and societies (private and public)',501100000944),('othern','other non-profit',501100001042),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100001043),('founda','foundation',501100001113),('asssoc','Associations and societies (private and public)',501100001153),('academ','academic',501100001156),('asssoc','Associations and societies (private and public)',501100001157),('asssoc','Associations and societies (private and public)',501100001160),('asssoc','Associations and societies (private and public)',501100001161),('asssoc','Associations and societies (private and public)',501100001163),('corpor','For-profit companies (industry)',501100001164),('govfed','National government',501100001138),('founda','foundation',501100001121),('othern','other non-profit',501100001152),('govfed','National government',501100001111),('othern','other non-profit',501100001108),('govfed','Federal/National Government',501100001175),('asssoc','Associations and societies (private and public)',501100001107),('govfed','Federal/National Government',501100001217),('govnon','government non-federal',501100001190),('govnon','Local government',501100001189),('govnon','government non-federal',501100001207),('othern','other non-profit',501100001183),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100001185),('othern','other non-profit',501100001187),('othern','other non-profit',501100001192),('corpor','For-profit companies (industry)',501100001252),('asssoc','professional associations and societies',501100001194),('othern','other non-profit',501100001218),('othern','other non-profit',501100001219),('othern','other non-profit',501100001255),('othern','other non-profit',501100001256),('othern','other non-profit',501100001220),('asssoc','Associations and societies (private and public)',501100001221),('govnon','government non-federal',501100001226),('govfed','Federal/National Government',501100001224),('govnon','government non-federal',501100001227),('govfed','National government',501100002001),('asssoc','Associations and societies (private and public)',501100000018),('corpor','corporate',501100000050),('govfed','Federal/National Government',501100000039),('othern','other non-profit',501100000002),('govfed','National government',501100000035),('govfed','National government',501100000041),('govfed','National government',501100000034),('asssoc','4297',501100000010),('othern','other non-profit',501100000022),('govfed','Federal/National Government',501100000047),('govfed','Federal/National Government',501100000025),('govfed','National government',501100000043),('govfed','National government',501100000038),('govfed','National government',501100000032),('govfed','National government',501100000046),('corpor','4301',501100000011),('asssoc','Associations and societies (private and public)',501100000012),('academ','4272',501100000003),('academ','Universities (academic only)',501100000077),('asssoc','Associations and societies (private and public)',501100000148),('academ','Universities (academic only)',501100000158),('academ','academic',501100000154),('othern','other non-profit',501100000160),('govfed','National government',501100000161),('govnon','Local government',501100000156),('asssoc','Associations and societies (private and public)',501100000199),('academ','Universities (academic only)',501100000190),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000194),('govnon','government non-federal',501100000192),('academ','Universities (academic only)',501100000184),('founda','foundation',501100000988),('asssoc','Associations and societies (private and public)',501100000221),('govnon','Local government',501100000234),('othern','other non-profit',501100000223),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000240),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000229),('govnon','Local government',501100000226),('govnon','Local government',501100000227),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000245),('govnon','Local government',501100000230),('govfed','National government',501100000265),('govfed','National government',501100000266),('othern','other non-profit',501100000302),('govfed','National government',501100000272),('othern','other non-profit',501100000318),('govfed','National government',501100000278),('othern','other non-profit',501100000326),('academ','Universities (academic only)',501100000288),('asssoc','Associations and societies (private and public)',501100000297),('corpor','corporate',501100000396),('asssoc','Associations and societies (private and public)',501100000364),('othern','other non-profit',501100000394),('othern','other non-profit',501100000358),('othern','other non-profit',501100000366),('asssoc','professional associations and societies',501100000415),('asssoc','Associations and societies (private and public)',501100000381),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000403),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000413),('asssoc','Associations and societies (private and public)',501100000372),('othern','other non-profit',501100000367),('asssoc','Associations and societies (private and public)',501100000409),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000351),('asssoc','Associations and societies (private and public)',501100000374),('asssoc','Associations and societies (private and public)',501100000376),('othern','other non-profit',501100000380),('othern','other non-profit',501100000397),('asssoc','Associations and societies (private and public)',501100000386),('othern','other non-profit',501100000370),('academ','Universities (academic only)',501100000524),('asssoc','Associations and societies (private and public)',501100000530),('asssoc','Associations and societies (private and public)',501100000535),('asssoc','Associations and societies (private and public)',501100000536),('asssoc','Associations and societies (private and public)',501100000545),('asssoc','Associations and societies (private and public)',501100000528),('asssoc','Associations and societies (private and public)',501100000540),('academ','Universities (academic only)',501100000552),('asssoc','Associations and societies (private and public)',501100000572),('asssoc','Associations and societies (private and public)',501100000563),('asssoc','Associations and societies (private and public)',501100000566),('asssoc','Associations and societies (private and public)',501100000567),('asssoc','Associations and societies (private and public)',501100000568),('asssoc','Associations and societies (private and public)',501100000575),('asssoc','Associations and societies (private and public)',501100000570),('asssoc','Associations and societies (private and public)',501100000539),('othern','other non-profit',501100000940),('academ','Universities (academic only)',501100000590),('academ','Universities (academic only)',501100000583),('academ','Universities (academic only)',501100000601),('othern','other non-profit',501100000629),('asssoc','Associations and societies (private and public)',501100000628),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100000606),('othern','other non-profit',501100000643),('academ','academic',501100000605),('academ','Universities (academic only)',501100000613),('asssoc','Associations and societies (private and public)',501100000607),('othern','other non-profit',501100000611),('academ','Universities (academic only)',501100000646),('founda','foundation',501100003137),('govnon','government non-federal',501100003139),('othern','other non-profit',501100003142),('founda','foundation',501100003143),('govnon','government non-federal',501100003150),('govnon','Local government',501100003130),('govnon','Local government',501100003151),('govfed','Federal/National Government',501100003221),('othern','other non-profit',501100003323),('academ','Universities (academic only)',501100003322),('corpor','corporate',501100003325),('othern','other non-profit',501100003326),('govfed','Federal/National Government',501100003328),('govnon','Local government',501100003332),('govnon','government non-federal',501100003352),('founda','foundation',501100003333),('othern','other non-profit',501100003334),('govfed','Federal/National Government',501100003336),('govfed','Federal/National Government',501100003338),('founda','foundation',501100003342),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100003343),('academ','academic',501100003341),('othern','other non-profit',501100003346),('govfed','National government',501100003327),('govfed','Federal/National Government',501100003337),('corpor','corporate',501100003324),('govfed','Federal/National Government',501100003345),('govfed','National government',501100003339),('govnon','Local government',501100003347),('founda','foundation',501100003348),('founda','foundation',501100003349),('govnon','government non-federal',501100003425),('govnon','government non-federal',501100003410),('asssoc','professional associations and societies',501100003417),('academ','Universities (academic only)',501100002323),('academ','academic',501100002574),('academ','academic',501100002567),('academ','academic',501100002564),('academ','Universities (academic only)',501100002563),('academ','academic',501100002562),('academ','academic',501100002561),('academ','academic',501100002560),('academ','academic',501100002559),('academ','academic',501100002558),('academ','academic',501100002557),('academ','academic',501100002556),('academ','academic',501100002495),('corpor','corporate',501100002707),('academ','Universities (academic only)',501100002799),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100002800),('founda','foundation',501100002801),('academ','Universities (academic only)',501100002802),('othern','other non-profit',501100002804),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100002805),('corpor','corporate',501100002806),('founda','foundation',501100002807),('founda','foundation',501100002808),('corpor','corporate',501100002811),('corpor','corporate',501100002814),('corpor','corporate',501100002815),('asssoc','professional associations and societies',501100002816),('corpor','For-profit companies (industry)',501100002813),('govnon','government non-federal',501100002810),('corpor','corporate',501100002812),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100002803),('govnon','Local government',501100002809),('govnon','Local government',501100002797),('govnon','government non-federal',501100002783),('govnon','government non-federal',501100002796),('academ','academic',501100002781),('othern','other non-profit',501100002798),('govnon','government non-federal',501100003075),('asssoc','professional associations and societies',501100003077),('govnon','government non-federal',501100003147),('govnon','government non-federal',501100003134),('corpor','corporate',501100003144),('corpor','corporate',501100003145),('asssoc','professional associations and societies',501100003146),('govnon','government non-federal',501100003153),('govnon','government non-federal',501100003148),('govfed','Federal/National Government',501100003126),('othern','other non-profit',501100003127),('govnon','Local government',501100003133),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100003125),('govfed','National government',501100003128),('othern','other non-profit',501100003183),('othern','other non-profit',501100003188),('founda','Trusts, charities, foundations (both publically funded and privately funded)',501100003170),('govnon','government non-federal',501100003182),('govfed','Federal/National Government',501100003202),('govfed','National government',501100003196),('govnon','government non-federal',501100003169),('govfed','Federal/National Government',501100003198),('govnon','government non-federal',501100003193),('govfed','National government',501100003176),('govnon','government non-federal',501100003165),('govnon','government non-federal',501100003181),('corpor','corporate',501100003187),('govfed','National government',501100003246),('govnon','Local government',501100003242),('corpor','corporate',501100003247),('govnon','Local government',501100003253),('govfed','National government',501100001848),('govfed','Federal/National Government',501100003245),('govfed','Federal/National Government',501100003243),('othern','other non-profit',501100003251),('govfed','National government',501100001844),('govfed','National government',501100001843),('govfed','Federal/National Government',501100003384),('corpor','corporate',501100003396),('govfed','Federal/National Government',501100003391),('govnon','government non-federal',501100003405),('corpor','corporate',501100003389),('founda','foundation',501100003390),('corpor','corporate',501100003393),('othern','other non-profit',501100003394),('founda','foundation',501100003403),('founda','foundation',501100003402),('govnon','government non-federal',501100003401),('corpor','corporate',501100003409),('othern','other non-profit',501100003411),('govnon','government non-federal',501100003385),('academ','academic',501100003416),('corpor','corporate',501100003418),('govnon','government non-federal',501100003419),('corpor','corporate',501100003420),('academ','academic',501100003421),('govnon','government non-federal',501100003422),('corpor','corporate',501100003423),('founda','foundation',501100003427),('govnon','government non-federal',501100003412),('govnon','government non-federal',501100003408);
/*!40000 ALTER TABLE `subtype` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `synopsis`
--

DROP TABLE IF EXISTS `synopsis`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `synopsis` (
  `SYNOPSIS_ID` bigint(20) NOT NULL,
  `OPPORTUNITY_ID` bigint(20) DEFAULT NULL,
  `RELATEDITEMS_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`SYNOPSIS_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `synopsis`
--

LOCK TABLES `synopsis` WRITE;
/*!40000 ALTER TABLE `synopsis` DISABLE KEYS */;
/*!40000 ALTER TABLE `synopsis` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temp_scivalurl`
--

DROP TABLE IF EXISTS `temp_scivalurl`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `temp_scivalurl` (
  `Id` int(11) NOT NULL,
  `URL` varchar(4000) DEFAULT '',
  PRIMARY KEY (`Id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temp_scivalurl`
--

LOCK TABLES `temp_scivalurl` WRITE;
/*!40000 ALTER TABLE `temp_scivalurl` DISABLE KEYS */;
/*!40000 ALTER TABLE `temp_scivalurl` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temptable_subregion`
--

DROP TABLE IF EXISTS `temptable_subregion`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `temptable_subregion` (
  `COUNTRYNAME` varchar(200) DEFAULT '',
  `ALPHA_2` varchar(20) DEFAULT '',
  `ALPHA_3` varchar(20) DEFAULT '',
  `REGION` varchar(200) NOT NULL DEFAULT '',
  `SUBREGION` varchar(200) DEFAULT '',
  PRIMARY KEY (`REGION`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temptable_subregion`
--

LOCK TABLES `temptable_subregion` WRITE;
/*!40000 ALTER TABLE `temptable_subregion` DISABLE KEYS */;
/*!40000 ALTER TABLE `temptable_subregion` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `test`
--

DROP TABLE IF EXISTS `test`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `test` (
  `idTest` int(11) NOT NULL,
  PRIMARY KEY (`idTest`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `test`
--

LOCK TABLES `test` WRITE;
/*!40000 ALTER TABLE `test` DISABLE KEYS */;
INSERT INTO `test` VALUES (4272);
/*!40000 ALTER TABLE `test` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `totalamount`
--

DROP TABLE IF EXISTS `totalamount`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `totalamount` (
  `INSTALLMENTANDAMOUNT_ID` bigint(20) NOT NULL,
  `AMOUNT` decimal(20,2) DEFAULT NULL,
  `CURRENCY` varchar(50) DEFAULT '',
  `CREATED_DATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`INSTALLMENTANDAMOUNT_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `totalamount`
--

LOCK TABLES `totalamount` WRITE;
/*!40000 ALTER TABLE `totalamount` DISABLE KEYS */;
/*!40000 ALTER TABLE `totalamount` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tracking_award`
--

DROP TABLE IF EXISTS `tracking_award`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `tracking_award` (
  `TID` bigint(20) NOT NULL,
  `WORKFLOWID` bigint(20) DEFAULT NULL,
  `USERID` bigint(20) DEFAULT NULL,
  `PAGENAME` varchar(2000) DEFAULT '',
  `AWARDID` bigint(20) DEFAULT NULL,
  `TRACKINGDATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `STOP_STATUS` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`TID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tracking_award`
--

LOCK TABLES `tracking_award` WRITE;
/*!40000 ALTER TABLE `tracking_award` DISABLE KEYS */;
/*!40000 ALTER TABLE `tracking_award` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tracking_fb`
--

DROP TABLE IF EXISTS `tracking_fb`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `tracking_fb` (
  `TID` bigint(20) NOT NULL,
  `WORKFLOWID` bigint(20) DEFAULT NULL,
  `USERID` bigint(20) DEFAULT NULL,
  `PAGENAME` varchar(2000) DEFAULT '',
  `FUNDINGBODYID` bigint(20) DEFAULT NULL,
  `TRACKINGDATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `STOP_STATUS` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`TID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tracking_fb`
--

LOCK TABLES `tracking_fb` WRITE;
/*!40000 ALTER TABLE `tracking_fb` DISABLE KEYS */;
INSERT INTO `tracking_fb` VALUES (0,4285,51,'FundingBase',501100000003,'2020-08-26 08:23:03',NULL),(1,4285,51,'FundingBase',501100000003,'2020-08-26 08:24:03',NULL),(2,4285,51,'FundingBase',501100000003,'2020-08-26 08:24:14',NULL),(3,4285,51,'FundingBase',501100000003,'2020-08-26 08:24:27',NULL),(4,4285,51,'FundingBase',501100000003,'2020-08-26 08:26:12',NULL);
/*!40000 ALTER TABLE `tracking_fb` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tracking_log`
--

DROP TABLE IF EXISTS `tracking_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `tracking_log` (
  `TLOGID` bigint(20) NOT NULL,
  `MODULEID` bigint(20) DEFAULT NULL,
  `TASKID` bigint(20) DEFAULT NULL,
  `SEQUENCE` bigint(20) DEFAULT NULL,
  `STARTDATE` datetime DEFAULT NULL,
  `STARTBY` bigint(20) DEFAULT NULL,
  `COMPLETEDDATE` datetime DEFAULT NULL,
  `COMPLETEDBY` bigint(20) DEFAULT NULL,
  `STATUSID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`TLOGID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tracking_log`
--

LOCK TABLES `tracking_log` WRITE;
/*!40000 ALTER TABLE `tracking_log` DISABLE KEYS */;
INSERT INTO `tracking_log` VALUES (0,2,1,1,'2020-08-26 00:00:00',51,NULL,18,7),(1,2,1,1,'2020-08-26 00:00:00',51,NULL,18,7),(2,2,1,1,'2020-08-26 00:00:00',51,NULL,18,7),(3,2,1,1,'2020-08-26 00:00:00',51,NULL,18,7),(4,2,1,1,'2020-08-26 00:00:00',51,NULL,18,7),(5,2,1,1,'2020-09-01 00:00:00',51,NULL,NULL,7),(6,2,1,1,'2020-09-01 00:00:00',51,NULL,NULL,7),(7,2,1,1,'2020-09-03 00:00:00',51,NULL,NULL,7),(8,2,1,1,'2020-09-04 00:00:00',51,NULL,NULL,7),(9,2,1,1,'2020-09-04 00:00:00',51,NULL,NULL,7),(10,2,1,1,'2020-09-04 00:00:00',51,NULL,NULL,7),(11,2,1,1,'2020-09-04 00:00:00',51,NULL,NULL,7),(12,2,1,1,'2020-09-04 00:00:00',51,NULL,NULL,7),(13,2,1,1,'2020-09-04 00:00:00',51,NULL,NULL,7),(14,2,1,1,'2020-09-04 00:00:00',51,NULL,NULL,7),(15,2,1,1,'2020-09-04 00:00:00',51,NULL,NULL,7),(16,2,1,1,'2020-09-04 00:00:00',51,NULL,NULL,7);
/*!40000 ALTER TABLE `tracking_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tracking_opp`
--

DROP TABLE IF EXISTS `tracking_opp`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `tracking_opp` (
  `TID` bigint(20) NOT NULL,
  `WORKFLOWID` bigint(20) DEFAULT NULL,
  `USERID` bigint(20) DEFAULT NULL,
  `PAGENAME` varchar(2000) DEFAULT '',
  `OPPORTUNITYID` bigint(20) DEFAULT NULL,
  `TRACKINGDATE` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `STOP_STATUS` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`TID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tracking_opp`
--

LOCK TABLES `tracking_opp` WRITE;
/*!40000 ALTER TABLE `tracking_opp` DISABLE KEYS */;
/*!40000 ALTER TABLE `tracking_opp` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `userassignment`
--

DROP TABLE IF EXISTS `userassignment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `userassignment` (
  `AID` bigint(20) NOT NULL,
  `FUNDINGBODYID` bigint(20) DEFAULT NULL,
  `MODULEID` bigint(20) DEFAULT NULL,
  `TASKID` bigint(20) DEFAULT NULL,
  `USERID` bigint(20) DEFAULT NULL,
  `ASSIGNEDBY` bigint(20) DEFAULT NULL,
  `ASSIGNDATE` datetime DEFAULT NULL,
  `CYCLE` bigint(20) DEFAULT NULL,
  `OPPORTUNITYID` bigint(20) DEFAULT NULL,
  `AWARDID` bigint(20) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `userassignment`
--

LOCK TABLES `userassignment` WRITE;
/*!40000 ALTER TABLE `userassignment` DISABLE KEYS */;
INSERT INTO `userassignment` VALUES (7,501100000003,2,2,51,1,'2015-10-06 12:21:57',1,NULL,NULL),(8,501100000011,2,2,51,1,'2015-10-06 12:21:57',0,NULL,NULL),(13,501100000009,2,2,51,1,'2015-10-06 12:25:29',0,NULL,501401465252),(14,501100000010,2,2,51,1,'2015-10-06 12:25:29',0,NULL,501401465223),(17,501100000012,2,2,51,1,'2015-10-06 13:12:51',0,501300181624,NULL),(18,501100002256,2,2,51,1,'2015-10-06 13:13:29',0,NULL,NULL);
/*!40000 ALTER TABLE `userassignment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping events for database 'scival'
--

--
-- Dumping routines for database 'scival'
--
/*!50003 DROP FUNCTION IF EXISTS `sci_checkhiddenstatus_fb` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `sci_checkhiddenstatus_fb`(p_workflowid INTEGER) RETURNS int(11)
    READS SQL DATA
    DETERMINISTIC
BEGIN
   DECLARE v_id   INTEGER;
   DECLARE v_count  integer;
   DECLARE v_count1  integer;
 
   DECLARE EXIT HANDLER FOR SQLEXCEPTION
   BEGIN
      RETURN 1;
   END;
   SELECT   ID
     INTO   v_ID
     FROM   SCI_WORKFLOW
    WHERE   WORKFLOWID = p_WORKFLOWID;


    SELECT  COUNT(*)
     INTO   v_count
     FROM   item
     WHERE   RELTYPE IN ('isReplacedBy','incorporatedInto','mergedWith','renamedAs')
            AND About_id IN
                     (SELECT   About_id
                        FROM   about, fundingbody
                       WHERE   about.FundingBody_ID =
                                  fundingbody.FundingBody_ID
                               AND about.FundingBody_ID = v_ID
                               AND fundingbody.HIDDEN = 'False');
   IF v_count = 0
   THEN
      SELECT   COUNT(*)
        INTO   v_count1
        FROM   item
       WHERE   RELTYPE IN
                     ('isReplacedBy',
                      'incorporatedInto',
                      'mergedWith',
                      'renamedAs')
               AND Fundingpolicy_id IN
                        (SELECT   Fundingpolicy_id
                           FROM   Fundingpolicy, fundingbody
                          WHERE   Fundingpolicy.FundingBody_ID =
                                     fundingbody.FundingBody_ID
                                  AND Fundingpolicy.FundingBody_ID =501100001721
                                  AND fundingbody.HIDDEN = 'False');
      IF v_count1 > 0
      THEN
         RETURN 0;
      ELSE
         RETURN 1;
      END IF;
      else 
      
      RETURN 0;
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `TO_CHAR` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `TO_CHAR`(tdate date,dformat varchar(20)) RETURNS varchar(20) CHARSET latin1
BEGIN
declare ndate varchar(20);
set ndate='';
if dformat ='DD-Mon-YYYY' then
 SELECT  DATE_FORMAT(SYSDATE(), '%d-%m-%y') into ndate;
end if;
 RETURN ndate;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `asjc_description_prc` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `asjc_description_prc`(
		
)
BEGIN
	DECLARE v_amount   INTEGER;
 
	SELECT   code,Detail as description, code as sub_level_code,description as sub_level_description  
	FROM SCI_ASJCDESCRIPTION 
       
	ORDER BY code;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `awardssource_dml_prc` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `awardssource_dml_prc`(
   p_url                   VARCHAR(4000) /* DEFAULT NULL */ ,
   p_status                VARCHAR(4000) /* DEFAULT NULL */ ,
   p_lastvisited           DATETIME /* DEFAULT NULL */ ,
   p_Workflow_id           INTEGER /* DEFAULT NULL */ ,
   p_lang                  VARCHAR(4000) /* DEFAULT NULL */ ,
   p_mode                  INTEGER, -- 1 for insert, 2 for update ,3 for display, 4 for deleteion of award source
   p_award_source_id       INTEGER /* DEFAULT NULL */   
)
BEGIN
   DECLARE v_moduleid        INTEGER;
   DECLARE v_batch           INTEGER;
   DECLARE v_cnt             INTEGER;
   DECLARE v_award_sequnce   INTEGER;
   DECLARE v_id              INTEGER;

SELECT 
    id
INTO v_id FROM
    sci_workflow
WHERE
    WORKFLOWID = p_Workflow_id;

   IF p_mode = 1
   THEN
      SELECT   awardssource_seq.NEXTVAL INTO v_award_sequnce FROM DUAL;

      INSERT INTO awardssource (AWARD_SOURCE_ID,
                                URL,
                                STATUS,
                                LASTVISITED,
                                FUNDINGBODY_ID,
                                LANG)
        VALUES   (v_award_sequnce,
                  p_url,
                  p_status,
                  p_lastvisited,
                  v_id,
                  p_lang);
      
SELECT 
    NULL AWARD_SOURCE_ID,
    NULL URL,
    NULL STATUS,
    NULL LASTVISITED,
    NULL FUNDINGBODY_ID,
    NULL lang
FROM DUAL;
   ELSEIF p_mode = 2
   THEN
      UPDATE   awardssource
         SET   URL = p_url, STATUS = p_status, LASTVISITED = p_lastvisited, lang=p_lang
       WHERE   AWARD_SOURCE_ID = p_award_source_id;
      
SELECT 
    NULL AWARD_SOURCE_ID,
    NULL URL,
    NULL STATUS,
    NULL LASTVISITED,
    NULL FUNDINGBODY_ID,
    NULL lang
FROM DUAL;
   ELSEIF p_mode = 3
   THEN
      
         SELECT   AWARD_SOURCE_ID,
                  URL,
                  STATUS,
                  LASTVISITED,
                  FUNDINGBODY_ID,
                  LANG
           FROM   awardssource
          WHERE   FUNDINGBODY_ID = v_id;
      
   ELSEIF p_mode = 4
   THEN
      DELETE FROM   awardssource
            WHERE   AWARD_SOURCE_ID = p_award_source_id;

   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `awardssource_dml_prc_5` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `awardssource_dml_prc_5`(
   p_url                   VARCHAR(4000) /* DEFAULT NULL */ ,
   p_status                VARCHAR(4000) /* DEFAULT NULL */ ,
   p_lastvisited           DATETIME /* DEFAULT NULL */ ,
   p_Workflow_id           INTEGER /* DEFAULT NULL */ ,
   p_lang                  VARCHAR(4000) /* DEFAULT NULL */ ,
   p_name                 LONGTEXT /* DEFAULT NULL */ ,
   p_Frequency            Varchar(4000) /* DEFAULT NULL */ ,
   p_date_captureStart    DATETIME /* DEFAULT NULL */ ,
   p_date_captureEnd      DATETIME /* DEFAULT NULL */ ,
   p_Comment              LONGTEXT /* DEFAULT NULL */ ,
   p_mode                  INTEGER, -- 1 for insert, 2 for update ,3 for display, 4 for deleteion of award source
   p_award_source_id       INTEGER /* DEFAULT NULL */
)
BEGIN
   DECLARE v_moduleid        INTEGER;
   DECLARE v_batch           INTEGER;
   DECLARE v_cnt             INTEGER;
   DECLARE v_award_sequnce   INTEGER;
   DECLARE v_id              INTEGER;

SELECT 
    id
INTO v_id FROM
    sci_workflow
WHERE
    WORKFLOWID = p_Workflow_id;

   IF p_mode = 1
   THEN
      SELECT   awardssource_seq.NEXTVAL INTO v_award_sequnce FROM DUAL;

      INSERT INTO awardssource (AWARD_SOURCE_ID,
                                URL,
                                STATUS,
                                LASTVISITED,
                                FUNDINGBODY_ID,
                                LANG,
                                 NAME,
                                          FREQUENCY,
                                          CAPTURESTART,
                                          CAPTUREEND,
                                          Aw_COMMENT)
        VALUES   (v_award_sequnce,
                  p_url,
                  p_status,
                  p_lastvisited,
                  v_id,
                  p_lang,
                   p_name,
                   p_Frequency,
                  truncate(p_date_captureStart, 0),
                  truncate(p_date_captureEnd, 0), 
                   p_Comment);
      
	SELECT 
    NULL AWARD_SOURCE_ID,
    NULL URL,
    NULL STATUS,
    NULL LASTVISITED,
    NULL FUNDINGBODY_ID,
    NULL lang
FROM DUAL;
   ELSEIF p_mode = 2
   THEN
      UPDATE   awardssource
         SET   URL = p_url, STATUS = p_status, LASTVISITED = p_lastvisited, lang=p_lang,
          NAME=p_name,
                                          FREQUENCY=p_Frequency,
                                          CAPTURESTART=p_date_captureStart,
                                          CAPTUREEND=p_date_captureEnd,
                                          Aw_COMMENT=p_Comment
       WHERE   AWARD_SOURCE_ID = p_award_source_id;
    
SELECT 
    NULL AWARD_SOURCE_ID,
    NULL URL,
    NULL STATUS,
    NULL LASTVISITED,
    NULL FUNDINGBODY_ID,
    NULL lang
FROM DUAL;
   ELSEIF p_mode = 3
   THEN
      
		SELECT   AWARD_SOURCE_ID,
                  URL,
                  STATUS,
                  LASTVISITED,
                  FUNDINGBODY_ID,
                  LANG,
                   NAME,
                  FREQUENCY,  
                  CAPTURESTART,
                  CAPTUREEND,
                  Aw_COMMENT
           FROM   awardssource
          WHERE   FUNDINGBODY_ID = v_id;

   ELSEIF p_mode = 4
   THEN
      DELETE FROM   awardssource
            WHERE   AWARD_SOURCE_ID = p_award_source_id;

   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dummy_tasklist_new` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `dummy_tasklist_new`(
	pUserId     INT,
	pModuleId	INT,
	pTaskId		INT,
	pCycle		INT,
	pAllocation	INT
)
BEGIN
	DECLARE lUserAssignmentCount	INT;
    
SELECT 
    COUNT(1)
INTO lUserAssignmentCount FROM
    userassignment
WHERE
    userid = pUserId
        AND moduleid = pModuleId;
    
    IF pModuleId = 2
    THEN
		IF pAllocation = 0
        THEN
			IF lUserAssignmentCount = 0
            THEN
				SELECT * FROM 
					(SELECT   modulename, ma.moduleid, fundingbodyname, ma.ID, taskname, ma.taskid, ma.CYCLE, TO_CHAR (duedate, 'DD-Mon-YYYY') duedate, duedate due FROM 
						(SELECT moduleid, ID, CYCLE, taskid FROM 
						sci_workflow sw WHERE taskid = pTaskId AND moduleid = pModuleId AND assignby IS NULL AND completeddate IS NULL AND CYCLE <> 0 
						AND IFNULL(sw.statusid, 0) NOT IN (7, 9) AND NOT EXISTS 
							(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
						) ma,  sci_modules sm, sci_tasks st, fundingbody_master fm  
						WHERE HIDDEN_FLAG = 0 AND ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND fm.fundingbody_id = ma.ID ORDER BY due, fundingbodyname) abc
					WHERE ROWNUM < 2;
            ELSE
				SELECT * FROM 
					(SELECT modulename, ma.moduleid, fundingbodyname, ma.ID, taskname, ma.taskid, ma.CYCLE, TO_CHAR (duedate, 'DD-Mon-YYYY') duedate, duedate due FROM 
						(SELECT moduleid, ID, CYCLE, taskid FROM 
						sci_workflow sw WHERE taskid = pTaskId AND moduleid = pModuleId AND assignby IS NULL AND completeddate IS NULL AND CYCLE <> 0 
						AND IFNULL(sw.statusid, 0) NOT IN (7, 9) AND NOT EXISTS 
							(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
						) ma, sci_modules sm, sci_tasks st, fundingbody_master fm 
						WHERE HIDDEN_FLAG = 0 AND ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND fm.fundingbody_id = ma.ID and fm.fundingbody_id IN 
							(SELECT FUNDINGBODYID FROM userassignment WHERE userid = pUserId and moduleid=pModuleId)
						ORDER BY due, fundingbodyname) abc;
            END IF;
        ELSE
			IF lUserAssignmentCount = 0
            THEN
				SELECT * FROM 
					(SELECT modulename, ma.moduleid, fundingbodyname, ma.ID, taskname, ma.taskid, ma.CYCLE, TO_CHAR (duedate, 'DD-Mon-YYYY' ) duedate, duedate due FROM 
						(SELECT moduleid, ID, CYCLE, taskid FROM 
						sci_workflow sw WHERE taskid = pTaskId AND moduleid = pModuleId AND assignby IS NULL AND completeddate IS NULL AND CYCLE <> 0
						AND IFNULL(sw.statusid, 0) NOT IN (7, 9) AND NOT EXISTS 
							(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
						) ma, sci_modules sm, sci_tasks st, fundingbody_master fm 
						WHERE HIDDEN_FLAG = 0 AND  ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND fm.fundingbody_id = ma.ID ORDER BY due, fundingbodyname) abc;
            ELSE
				SELECT * FROM 
					(SELECT modulename, ma.moduleid, fundingbodyname, ma.ID, taskname, ma.taskid, ma.CYCLE, TO_CHAR (duedate, 'DD-Mon-YYYY') duedate, duedate due FROM 
						(SELECT moduleid, ID, CYCLE, taskid 
						FROM sci_workflow sw WHERE taskid = pTaskId AND moduleid = pModuleId AND assignby IS NULL AND completeddate IS NULL AND CYCLE <> 0 
						AND IFNULL(sw.statusid, 0) NOT IN (7, 9) AND NOT EXISTS 
							(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
						) ma, sci_modules sm, sci_tasks st, fundingbody_master fm 
						WHERE HIDDEN_FLAG = 0 AND  ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND fm.fundingbody_id = ma.ID and FM.fundingbody_id IN 
							(SELECT FUNDINGBODYID FROM userassignment WHERE userid = pUserId and moduleid = pModuleId) 
						ORDER BY due, fundingbodyname) abc;
            END IF;
        END IF;
    END IF;
    
    IF pModuleId = 3
    THEN
		IF pAllocation = 0
        THEN
			IF lUserAssignmentCount = 0
            THEN
				SELECT * FROM 
					(SELECT modulename, ma.moduleid, fundingbodyname, fm.fundingbody_id ID, taskname, ma.taskid, ma.CYCLE, TO_CHAR (duedate, 'DD-Mon-YYYY') duedate, duedate due FROM 
						(SELECT moduleid, ID, CYCLE, taskid FROM 
						sci_workflow sw WHERE taskid = 2 AND moduleid = 3 AND assignby IS NULL AND completeddate IS NULL AND CYCLE <> 0
						AND IFNULL(sw.statusid, 0) NOT IN (7, 9) AND NOT EXISTS 
							(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
						) ma, sci_modules sm, sci_tasks st, fundingbody_master fm, opportunity_master om 
						WHERE HIDDEN_FLAG = 0 AND ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND fm.fundingbody_id = om.fundingbodyid AND om.opportunityid = ma.ID
						ORDER BY due, fundingbodyname) abc
				WHERE  ROWNUM < 2;
            ELSE
				SELECT * FROM 
					(SELECT modulename, ma.moduleid, fundingbodyname, fm.fundingbody_id ID, taskname, ma.taskid, ma.CYCLE, TO_CHAR (duedate, 'DD-Mon-YYYY') duedate, duedate due FROM 
						(SELECT moduleid, ID, CYCLE, taskid FROM 
						sci_workflow sw WHERE taskid = 2 AND moduleid = 3 AND assignby IS NULL AND completeddate IS NULL AND CYCLE <> 0
						AND IFNULL(sw.statusid, 0) NOT IN (7, 9) AND NOT EXISTS 
							(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
						) ma, sci_modules sm, sci_tasks st, fundingbody_master fm, opportunity_master om 
						WHERE HIDDEN_FLAG = 0 AND ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND fm.fundingbody_id = om.fundingbodyid AND om.opportunityid = ma.ID
						AND fm.fundingbody_id IN 
							(SELECT FUNDINGBODYID FROM userassignment WHERE userid = pUserId and moduleid = pModuleId)
						ORDER BY due, fundingbodyname) abc
					WHERE  ROWNUM < 2;
            END IF;
        ELSE
			IF lUserAssignmentCount = 0
			THEN
				SELECT * FROM 
					(SELECT modulename, ma.moduleid, fundingbodyname, fm.fundingbody_id ID, taskname, ma.taskid, ma.CYCLE, TO_CHAR (duedate, 'DD-Mon-YYYY') duedate, duedate due FROM 
						(SELECT moduleid, ID, CYCLE, taskid FROM 
						sci_workflow sw WHERE taskid = 2 AND moduleid = 3 AND assignby IS NULL AND completeddate IS NULL AND CYCLE <> 0 
						AND IFNULL(sw.statusid, 0) NOT IN (7, 9) AND NOT EXISTS 
							(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
						) ma, sci_modules sm, sci_tasks st, fundingbody_master fm, opportunity_master om
						WHERE HIDDEN_FLAG = 0 AND ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND fm.fundingbody_id = om.fundingbodyid AND om.opportunityid = ma.ID
						ORDER BY due, fundingbodyname) abc;
			ELSE
				SELECT * FROM 
					(SELECT modulename, ma.moduleid, fundingbodyname, fm.fundingbody_id ID, taskname, ma.taskid, ma.CYCLE, TO_CHAR (duedate, 'DD-Mon-YYYY') duedate, duedate due FROM 
						(SELECT moduleid, ID, CYCLE, taskid FROM 
						sci_workflow sw WHERE taskid = 2 AND moduleid = 3 AND assignby IS NULL AND completeddate IS NULL AND CYCLE <> 0 
						AND IFNULL(sw.statusid, 0) NOT IN (7, 9) AND NOT EXISTS 
							(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
						) ma, sci_modules sm, sci_tasks st, fundingbody_master fm, opportunity_master om 
						WHERE HIDDEN_FLAG = 0 AND ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND fm.fundingbody_id = om.fundingbodyid AND om.opportunityid = ma.ID
						AND om.opportunityid IN 
							(SELECT OPPORTUNITYID FROM userassignment WHERE userid = pUserId AND moduleid = pModuleId) 
						ORDER BY due, fundingbodyname) abc;
			END IF;
        END if;
    END IF;
    
    IF pModuleId = 4
    THEN
		IF pAllocation = 0
        THEN
			IF lUserAssignmentCount = 0
            THEN
				SELECT * FROM 
					(SELECT modulename, ma.moduleid, fundingbodyname, fm.fundingbody_id ID, taskname, ma.taskid, ma.CYCLE, TO_CHAR(duedate, 'DD-Mon-YYYY') duedate, duedate due FROM 
						(SELECT moduleid, ID, CYCLE, taskid FROM 
						sci_workflow sw WHERE taskid = 2 AND moduleid = 4 AND assignby IS NULL AND completeddate IS NULL AND CYCLE <> 0 
						AND IFNULL(sw.statusid, 0) NOT IN (7, 9) AND NOT EXISTS 
							(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
						) ma, sci_modules sm, sci_tasks st, fundingbody_master fm, award_master om
					WHERE HIDDEN_FLAG = 0 AND ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND fm.fundingbody_id = om.fundingbodyid AND om.awardid = ma.ID 
					ORDER BY due, fundingbodyname) abc
				WHERE  ROWNUM < 2;
            ELSE
				SELECT * FROM 
					(SELECT modulename, ma.moduleid, fundingbodyname, fm.fundingbody_id ID, taskname, ma.taskid, ma.CYCLE, TO_CHAR(duedate, 'DD-Mon-YYYY') duedate, duedate due FROM 
						(SELECT moduleid, ID, CYCLE, taskid FROM 
						sci_workflow sw WHERE taskid = 2 AND moduleid = 4 AND assignby IS NULL AND completeddate IS NULL AND CYCLE <> 0 
						AND IFNULL(sw.statusid, 0) NOT IN (7, 9) AND NOT EXISTS 
							(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
						) ma, sci_modules sm, sci_tasks st, fundingbody_master fm, award_master om  
						WHERE HIDDEN_FLAG = 0 AND ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND fm.fundingbody_id = om.fundingbodyid AND om.awardid = ma.ID AND fm.fundingbody_id IN 
							(SELECT FUNDINGBODYID FROM userassignment WHERE userid = pUserId AND moduleid = pModuleId)
						ORDER BY due, fundingbodyname) abc
				WHERE  ROWNUM < 2;
            END IF;
        ELSE
			IF lUserAssignmentCount = 0
			THEN
				SELECT * FROM 
					(SELECT modulename, ma.moduleid, fundingbodyname, fm.fundingbody_id ID, taskname, ma.taskid, ma.CYCLE, TO_CHAR(duedate, 'DD-Mon-YYYY') duedate, duedate due FROM 
						(SELECT moduleid, ID, CYCLE, taskid FROM 
						sci_workflow sw WHERE taskid = 2 AND moduleid = 4 AND assignby IS NULL AND completeddate IS NULL AND CYCLE <> 0 
						AND IFNULL(sw.statusid, 0) NOT IN (7, 9) AND NOT EXISTS 
							(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
						) ma, sci_modules sm, sci_tasks st, fundingbody_master fm, award_master om  
						WHERE HIDDEN_FLAG = 0 AND ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND fm.fundingbody_id = om.fundingbodyid and not exists 
							(select 1 from userassignment where moduleid = 4 and awardid = om.awardid)
						AND om.awardid = ma.ID 
						ORDER BY due, fundingbodyname) abc;
			ELSE
				SELECT * FROM 
					(SELECT modulename, ma.moduleid, fundingbodyname, fm.fundingbody_id ID, taskname, ma.taskid, ma.CYCLE, TO_CHAR(duedate, 'DD-Mon-YYYY') duedate, duedate due FROM 
						(SELECT moduleid, ID, CYCLE, taskid FROM 
						sci_workflow sw WHERE taskid = 2 AND moduleid = 4 AND assignby IS NULL AND completeddate IS NULL AND CYCLE <> 0 
						AND IFNULL(sw.statusid, 0) NOT IN (7, 9) AND NOT EXISTS 
							(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
						) ma, sci_modules sm, sci_tasks st, fundingbody_master fm, award_master om  
					WHERE HIDDEN_FLAG = 0 AND ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND fm.fundingbody_id = om.fundingbodyid AND om.awardid = ma.ID and om.awardid IN 
						(SELECT awardid FROM userassignment WHERE userid = pUserId and moduleid = pModuleId) ORDER BY due, fundingbodyname) abc;
			END IF;
        END if;
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `fundingbodysource_dml_prc_5` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `fundingbodysource_dml_prc_5`(
   p_url                  VARCHAR(4000) /* DEFAULT NULL */ ,
   p_status               VARCHAR(4000) /* DEFAULT NULL */ ,
   p_Workflow_id          INTEGER /* DEFAULT NULL */ ,
   p_lang                 VARCHAR(4000) /* DEFAULT NULL */ ,
   p_name                 LONGTEXT /* DEFAULT NULL */ ,
   p_Frequency            Varchar(4000) /* DEFAULT NULL */ ,
   p_date_captureStart    DATETIME /* DEFAULT NULL */ ,
   p_date_captureEnd      DATETIME /* DEFAULT NULL */ ,
   p_Comment              LONGTEXT /* DEFAULT NULL */ ,
   p_mode                 INTEGER, -- 1 for insert, 2 for update ,3 for display , 4 for deletion of data
   p_opp_source_id        INTEGER /* DEFAULT NULL */
)
BEGIN
   DECLARE v_moduleid      INTEGER;
   DECLARE v_batch         INTEGER;
   DECLARE v_cnt           INTEGER;
   DECLARE v_opp_sequnce   INTEGER;
   DECLARE v_id            integer;

SELECT 
    id
INTO v_id FROM
    sci_workflow
WHERE
    WORKFLOWID = p_Workflow_id;
   IF p_mode = 1
   THEN
               SELECT   fundingbodiesSOURCE_SEQ.NEXTVAL INTO v_opp_sequnce FROM DUAL;

         INSERT INTO fundingBodyDataset (FB_SOURCE_ID,
                                          URL,
                                          STATUS,
                                          FUNDINGBODY_ID,
                                          LANG,
                                          NAME,
                                          FREQUENCY,
                                          CAPTURESTART,
                                          CAPTUREEND,
                                          FB_COMMENT)
           VALUES   (v_opp_sequnce,
                     p_url,
                     p_status,
                     v_id,
                     p_lang,
                     p_name,
                     p_Frequency,
                     truncate(p_date_captureStart, 0),
                    truncate(p_date_captureEnd, 0), 
                    p_Comment);         
         
SELECT 
    NULL FB_SOURCE_ID,
    NULL URL,
    NULL STATUS,
    NULL LASTVISITED,
    NULL FUNDINGBODY_ID,
    NULL LANG
FROM DUAL;
         ELSEIF p_mode = 2
   THEN
      UPDATE   fundingBodyDataset
         SET   URL = p_url, STATUS = p_status, LANG=p_lang,
          NAME=p_name,
                                          FREQUENCY=p_Frequency,
                                          CAPTURESTART=p_date_captureStart,
                                          CAPTUREEND=p_date_captureEnd,
                                          FB_COMMENT=p_Comment
       WHERE   FB_SOURCE_ID = p_opp_source_id;
      
SELECT 
    NULL FB_SOURCE_ID,
    NULL URL,
    NULL STATUS,
    NULL LASTVISITED,
    NULL FUNDINGBODY_ID,
    NULL LANG
FROM DUAL;
   ELSEIF p_mode = 3
   THEN
      
         SELECT   FB_SOURCE_ID,
                  URL,
                  STATUS,
                  LASTVISITED,
                  FUNDINGBODY_ID,
                  LANG,
                  NAME,
                  FREQUENCY,  
                  CAPTURESTART,
                  CAPTUREEND,
                  FB_COMMENT
           FROM   fundingBodyDataset
          WHERE   FUNDINGBODY_ID = v_id;
      
    ELSEIF p_mode = 4
   THEN   
     delete from fundingBodyDataset where FB_SOURCE_ID=p_opp_source_id;
    
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_funding_details` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_funding_details`(
   P_WFID           INTEGER
)
BEGIN
   DECLARE v_award_id   INTEGER;
   DECLARE v_count      INTEGER;
   DECLARE v_count2     INTEGER;
   DECLARE v_moduleid   INTEGER;
 
   BEGIN
      SELECT   ID, moduleid
        INTO   v_award_id, v_moduleid
        FROM   sci_workflow
       WHERE   workflowid = P_WFID;
     END;

   SELECT   COUNT(1)
     INTO   v_count
     FROM   FUNDEDPROJECTDETAIL fpd, FUNDEDSUBPROJECT fsp
    WHERE   fpd.AWARD_ID = v_award_id AND FPD.AWARD_ID = FSP.AWARD_ID;

   IF v_count != 0
   THEN
     -- OPEN P_dataout FOR
         SELECT   fpd.FUND_ID,
                  fpd.AWARD_ID,
                  ACRONYM,
                  BUDGET_AMOUNT,
                  BUDGET_CURRENCY,
                  ENDDATE,
                  fpd.FUNDINGBODYPROJECTID,
                  STARTDATE,
                  STATUS,
                  COUNTRY,
                  LOCALITY,
                  POSTALCODE,
                  REGION,
                  STREET,
                  POSTOFFICEBOXNUMBER,
                  LINK,
                  SUBFUND_ID,
                  AMOUNT,
                  CURRENCY
           FROM   FUNDEDPROJECTDETAIL fpd, FUNDEDSUBPROJECT fsp
          WHERE   fpd.AWARD_ID = v_award_id AND FPD.AWARD_ID = FSP.AWARD_ID;
   END IF;

   SELECT   COUNT (1)
     INTO   v_count2
     FROM   SCI_LANGUAGE_DETAIL
    WHERE   SCIVAL_ID = v_award_id AND MODULEID = v_moduleid;

   IF v_count2 != 0
   THEN
     -- OPEN p_dataout1 FOR
         SELECT   sld.TRAN_ID,
                  sld.SCIVAL_ID,
                  sld.COLUMN_DESC,
                  sld.COLUMN_ID,
                  sld.MODULEID,
                  sld.LANGUAGE_ID,
                  slm.LANGUAGE_CODE,
                  sld.TRAN_TYPE_ID,
                  sld.CREATED_DATE
           FROM   SCI_LANGUAGE_DETAIL sld, SCI_LANGUAGE_MASTER slm
          WHERE       SCIVAL_ID = v_award_id
                  AND MODULEID = v_moduleid
                  AND slm.CODE_LENGTH = 2
                  AND SLD.LANGUAGE_ID = SLM.LANGUAGE_ID
                  AND COLUMN_ID = 8;
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Get_GroupCountries_prc1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `Get_GroupCountries_prc1`(
	in p_countrygroupid integer  
)
begin    
	select COUNTRYGROUP_ID,COUNTRYGROUP_NAME,COUNTRYGROUP_STATUS from SCI_COUNTRYGROUP;
  
	select COUNTRY_ID,COUNTRY_NAME,COUNTRY_CODE,COUNTRYGROUP_ID,
	(select COUNTRYID from sci_countrycodes where upper(LCODE)= country_code)  old_countryid
	from SCI_COUNTRIES
	where  COUNTRYGROUP_ID= p_countrygroupid;   
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_opportunity_dateins_data5` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_opportunity_dateins_data5`(
   P_WORKFLOWID                     INTEGER
)
BEGIN
	DECLARE V_MODULEID               INTEGER;
	DECLARE Pv_RAWTEXT               VARCHAR (100);
	DECLARE v_subtype                INTEGER;
	DECLARE V_ID                     INTEGER;
	DECLARE V_CYCLE                  INTEGER;
	DECLARE V_FUNDINGBODYID          INTEGER;
	DECLARE v_value                  VARCHAR (2000);
	DECLARE v_REVISIONHISTORYID      INTEGER;	
	DECLARE V_TRUSTING               VARCHAR (200);
	DECLARE v_preferedorgname        LONGTEXT;
	DECLARE v_type                   VARCHAR (2000);
	DECLARE v_RELATEDORGS_ID         INTEGER;
	DECLARE v_cnt                    INTEGER;	
	DECLARE l_opportunity_name_chk   INTEGER;
	DECLARE l_count                  INTEGER;
	DECLARE l_o_id                   INTEGER;
   
	SELECT   MODULEID, ID, CYCLE INTO   V_MODULEID, V_ID, V_CYCLE FROM   SCI_WORKFLOW WHERE   WORKFLOWID = P_WORKFLOWID;
      
	IF V_MODULEID = 3
	THEN		
		SELECT   FUNDINGBODYID INTO   V_FUNDINGBODYID FROM   OPPORTUNITY_MASTER WHERE   OPPORTUNITYID = V_ID;

		SELECT   TRUSTING, PREFERREDORGNAME, TYPE INTO   V_TRUSTING, v_preferedorgname, v_type FROM   FUNDINGBODY
		WHERE   FUNDINGBODY_ID = V_FUNDINGBODYID;        

		SELECT COUNT(1) INTO   v_subtype FROM   SUBTYPE
		WHERE   SUBTYPE_TEXT IN ('federal', 'Federal/National Government') AND FUNDINGBODY_ID = V_FUNDINGBODYID;	
	END IF;
      
	SELECT   opportunity_id,
               DATE_FORMAT (loi_due_date, '%d-%m-%Y') loi_DATE,
               sequence_id,
               DATE_REMARKS,
               (CASE
                   WHEN lang IS NULL THEN 'en'
                   ELSE lang
                END) Lang
    FROM   sci_opp_loi_duedate_detail
    WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 1;
   
    SELECT   opportunity_id,
               (CASE
                   WHEN loi_due_date IS NULL THEN (DATE_REMARKS)
                   ELSE TO_CLOB (DATE_FORMAT (loi_due_date, '%d-%m-%Y'))
                END)
                  DUE_DATE,
               sequence_id,
               DATE_REMARKS,
               (CASE
                   WHEN lang IS NULL THEN 'en'
                   ELSE lang
                END) Lang
    FROM   sci_opp_loi_duedate_detail
    WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 2;
   
	SELECT   opportunity_id,
               DATE_FORMAT (loi_due_date, '%d-%m-%Y') expiration_date,
               sequence_id,
               DATE_REMARKS,
               (CASE
                   WHEN lang IS NULL THEN 'en'
                   ELSE lang
                END) Lang
    FROM   sci_opp_loi_duedate_detail
    WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 3;
   
	SELECT   opportunity_id,
               DATE_FORMAT (loi_due_date, '%d-%m-%Y') firstpost_date,
               sequence_id,
               DATE_REMARKS,
               (CASE
                   WHEN lang IS NULL THEN 'en'
                   ELSE lang
                END) Lang
    FROM   sci_opp_loi_duedate_detail
    WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 4;
   
	SELECT   opportunity_id,
               DATE_FORMAT (loi_due_date, '%d-%m-%Y') lastmodifedpost_date,
               sequence_id,
               DATE_REMARKS,
               (CASE
                   WHEN lang IS NULL THEN 'en'
                   ELSE lang
                END) Lang
    FROM   sci_opp_loi_duedate_detail
    WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 5;
   
	SELECT   opportunity_id,
               DATE_FORMAT (loi_due_date, '%d-%m-%Y') open_date,
               sequence_id,
               DATE_REMARKS,
               (CASE
                   WHEN lang IS NULL THEN 'en'
                   ELSE lang
                END) Lang
    FROM   sci_opp_loi_duedate_detail
    WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 6;
   
	SELECT   OPPORTUNITYSTATUS FROM   opportunity WHERE   OPPORTUNITY_ID = V_ID;
 
	SELECT   opportunity_id,
               DATE_FORMAT (loi_due_date, '%d-%m-%Y') PreProposalDate,
               sequence_id,
               DATE_REMARKS,
               (CASE
                   WHEN lang IS NULL THEN 'en'
                   ELSE lang
                END) Lang
    FROM   sci_opp_loi_duedate_detail
    WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 7;
         
	SELECT   opportunity_id,
               DATE_FORMAT (loi_due_date, '%d-%m-%Y') DecisionDate,
               sequence_id,
               DATE_REMARKS,
               (CASE
                   WHEN lang IS NULL THEN 'en'
                   ELSE lang
                END) Lang
    FROM   sci_opp_loi_duedate_detail
    WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 8;	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `LoadLanguageData` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `LoadLanguageData`()
BEGIN
SELECT   sl_dtl.tran_id,
               sl_dtl.scival_id,
               sl_dtl.column_desc,
               sl_dtl.column_id,
               (SELECT   column_name
                  FROM   sci_column_master
                 WHERE   column_id = sl_dtl.column_id)
                  column_name,
               sl_dtl.moduleid,
               (SELECT   modulename
                  FROM   sci_modules
                 WHERE   moduleid = sl_dtl.moduleid)
                  modulename,
               sl_mast.language_id,
               sl_mast.language_group_id,
               sl_mast.language_name,
               sl_mast.language_code,
               sl_mast.code_length,
               sl_mast.priority,
               sl_dtl.tran_type_id,
               (SELECT   tran_name
                  FROM   sci_tran_type_master
                 WHERE   tran_type_id = sl_dtl.tran_type_id)
                  tran_name
        FROM   sci_language_detail sl_dtl, sci_language_master sl_mast
       WHERE       sl_dtl.language_id = sl_mast.language_id
      || (CASE WHEN tran_id IS NOT NULL THEN ' AND sl_dtl.tran_id = ' END)
      || tran_id
      || (CASE
             WHEN scival_id IS NOT NULL THEN ' AND sl_dtl.scival_id = '
          END)
      || scival_id
      || (CASE
             WHEN column_id IS NOT NULL THEN ' AND sl_dtl.column_id = '
          END)
      || column_id
      || (CASE
             WHEN moduleid IS NOT NULL THEN ' AND sl_dtl.moduleid = '
          END)
      || moduleid
      -- || (CASE
         --    WHEN language_id IS NOT NULL THEN ' AND sl_dtl.language_id = '
          -- END)
      -- || language_id
      || (CASE
             WHEN tran_type_id IS NOT NULL
             THEN
                ' AND sl_dtl.tran_type_id = '
          END)
      || tran_type_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `opportunitiessource_dml_prc_5` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `opportunitiessource_dml_prc_5`(
   p_url                  VARCHAR(4000) /* DEFAULT NULL */ ,
   p_status               VARCHAR(4000) /* DEFAULT NULL */ ,
   p_Workflow_id          INTEGER /* DEFAULT NULL */ ,
   p_lang                 VARCHAR(4000) /* DEFAULT NULL */ ,
   p_name                 LONGTEXT /* DEFAULT NULL */ ,
   p_Frequency            Varchar(4000) /* DEFAULT NULL */ ,
   p_date_captureStart    DATETIME /* DEFAULT NULL */ ,
   p_date_captureEnd      DATETIME /* DEFAULT NULL */ ,
   p_Comment              LONGTEXT /* DEFAULT NULL */ ,
   p_mode                 INTEGER, -- 1 for insert, 2 for update ,3 for display , 4 for deletion of data
   p_opp_source_id        INTEGER /* DEFAULT NULL */
)
BEGIN
   DECLARE v_moduleid      INTEGER;
   DECLARE v_batch         INTEGER;
   DECLARE v_cnt           INTEGER;
   DECLARE v_opp_sequnce   INTEGER;
   DECLARE v_id            integer;
    
SELECT 
    id
INTO v_id FROM
    sci_workflow
WHERE
    WORKFLOWID = p_Workflow_id;
   IF p_mode = 1
   THEN
               SELECT   opportunitiessource_seq.NEXTVAL INTO v_opp_sequnce FROM DUAL;

         INSERT INTO OPPORTUNITIESSOURCE (OPP_SOURCE_ID,
                                          URL,
                                          STATUS,
                                          FUNDINGBODY_ID,
                                          LANG,
                                          NAME,
                                          FREQUENCY,
                                          CAPTURESTART,
                                          CAPTUREEND,
                                          OPP_COMMENT)
           VALUES   (v_opp_sequnce,
                     p_url,
                     p_status,
                     v_id,
                     p_lang,
                     p_name,
                     p_Frequency,
                     truncate(p_date_captureStart, 0),
                    truncate(p_date_captureEnd, 0), 
                    p_Comment);         

SELECT 
    NULL OPP_SOURCE_ID,
    NULL URL,
    NULL STATUS,
    NULL LASTVISITED,
    NULL FUNDINGBODY_ID,
    NULL LANG
FROM DUAL;
         ELSEIF p_mode = 2
   THEN
      UPDATE   OPPORTUNITIESSOURCE
         SET   URL = p_url, STATUS = p_status, LANG=p_lang,
          NAME=p_name,
                                          FREQUENCY=p_Frequency,
                                          CAPTURESTART=p_date_captureStart,
                                          CAPTUREEND=p_date_captureEnd,
                                          OPP_COMMENT=p_Comment
       WHERE   OPP_SOURCE_ID = p_opp_source_id;      
	
SELECT 
    NULL OPP_SOURCE_ID,
    NULL URL,
    NULL STATUS,
    NULL LASTVISITED,
    NULL FUNDINGBODY_ID,
    NULL LANG
FROM DUAL;
   ELSEIF p_mode = 3
   THEN
   
         SELECT   OPP_SOURCE_ID,
                  URL,
                  STATUS,
                  LASTVISITED,
                  FUNDINGBODY_ID,
                  LANG,
                  NAME,
                  FREQUENCY,  
                  CAPTURESTART,
                  CAPTUREEND,
                  OPP_COMMENT
           FROM   OPPORTUNITIESSOURCE
          WHERE   FUNDINGBODY_ID = v_id;
      
    ELSEIF p_mode = 4
   THEN   
     delete from OPPORTUNITIESSOURCE where OPP_SOURCE_ID=p_opp_source_id;
     
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `opportunity_location_insupdel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `opportunity_location_insupdel`(
	p_workflowid        INTEGER,
	p_insdel            INTEGER,
	p_country           VARCHAR(4000) /* DEFAULT NULL */ ,
	p_room              VARCHAR(4000) /* DEFAULT NULL */ ,
	p_street            VARCHAR(4000) /* DEFAULT NULL */ ,
	p_city              VARCHAR(4000) /* DEFAULT NULL */ ,
	p_state             VARCHAR(4000) /* DEFAULT NULL */ ,
	p_postalcode        VARCHAR(4000) /* DEFAULT NULL */ ,
	p_location_id       INTEGER /* DEFAULT NULL */  
)
BEGIN
	DECLARE v_opportunity_id   INTEGER;
	DECLARE v_value            INTEGER;
	DECLARE v_moduleid         INTEGER;
	DECLARE v_count            INTEGER;
    
	SELECT   ID, moduleid INTO   v_opportunity_id, v_moduleid FROM   sci_workflow
    WHERE   workflowid = p_workflowid;

	IF v_moduleid = 3  
    THEN
		IF p_insdel = 0
		THEN
			Select count(*) into v_count FROM opportunity_location WHERE COUNTRY=p_country AND opportunity_id=v_opportunity_id;
			
			SELECT   opportunity_location_SEQ.NEXTVAL INTO v_value FROM DUAL;

			INSERT INTO opportunity_location (location_id,
                                           country,
                                           room,
                                           street,
                                           city,
                                           state,
                                           postalcode,
                                           opportunity_id)
			VALUES   (v_value,
                     p_country,
                     p_room,
                     p_street,
                     p_city,
                     p_state,
                     p_postalcode,
                     v_opportunity_id);
         
         
      
		ELSEIF p_insdel = 2
		THEN
			UPDATE   opportunity_location
            SET   country = p_country,
                  room = p_room,
                  street = p_street,
                  city = p_city,
                  state = p_state,
                  postalcode = p_postalcode
			WHERE   location_id = p_location_id;			

		ELSEIF p_insdel = 1
		THEN
			DELETE FROM   opportunity_location WHERE   location_id = p_location_id;         
		END IF;
      
		SELECT   a.LOCATION_ID,
                  a.country countrycode,
                  cc.name countryname,
                  a.room,
                  a.street,
                  a.city,
                  IFNULL (a.state, a.state) statecode,
                  IFNULL (sc.name, a.state) statename,
                  a.postalcode,
                  OPPORTUNITY_ID
        FROM   opportunity_location a
        LEFT JOIN SCI_STATECODES sc
        ON sc.code = a.STATE
        LEFT JOIN SCI_COUNTRYCODES cc
        ON cc.LCODE = a.COUNTRY                  
        WHERE a.OPPORTUNITY_ID = v_opportunity_id;
	END IF;   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `opportunity_location_insup_DEL` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `opportunity_location_insup_DEL`(
   P_DELETEGROUPID     INTEGER /* DEFAULT NULL */ ,
   p_workflowid        INTEGER,
   p_insdel            INTEGER,   
   p_country           VARCHAR(4000) /* DEFAULT NULL */ ,
   p_room              VARCHAR(4000) /* DEFAULT NULL */ ,
   p_street            VARCHAR(4000) /* DEFAULT NULL */ ,
   p_city              VARCHAR(4000) /* DEFAULT NULL */ ,
   p_state             VARCHAR(4000) /* DEFAULT NULL */ ,
   p_postalcode        VARCHAR(4000) /* DEFAULT NULL */ ,
   p_location_id       INTEGER /* DEFAULT NULL */  
)
BEGIN
	DECLARE v_opportunity_id   INTEGER;
	DECLARE v_value            INTEGER;
	DECLARE v_moduleid         INTEGER;
	DECLARE v_count            INTEGER;
 
	SELECT   ID, moduleid INTO   v_opportunity_id, v_moduleid FROM   sci_workflow WHERE   workflowid = p_workflowid;

	IF v_moduleid = 3  
    THEN
		IF p_insdel = 0
		THEN
			Select count(*) into v_count FROM opportunity_location WHERE COUNTRY=p_country AND opportunity_id=v_opportunity_id;         

			SELECT   opportunity_location_SEQ.NEXTVAL INTO v_value FROM DUAL;

			INSERT INTO opportunity_location (location_id,
                                           country,
                                           room,
                                           street,
                                           city,
                                           state,
                                           postalcode,
                                           opportunity_id)
			VALUES   (v_value,
                     p_country,
                     p_room,
                     p_street,
                     p_city,
                     p_state,
                     p_postalcode,
                     v_opportunity_id);		
		END IF;               
	ELSEIF p_insdel = 2
	THEN
		UPDATE   opportunity_location
        SET   country = p_country,
                  room = p_room,
                  street = p_street,
                  city = p_city,
                  state = p_state,
                  postalcode = p_postalcode
        WHERE   location_id = p_location_id;	
	ELSEIF p_insdel = 1
    THEN
		IF P_DELETEGROUPID IS NULL 
        THEN
			DELETE FROM   opportunity_location WHERE   location_id = p_location_id;           
		ELSE		
            DELETE FROM   opportunity_location WHERE   OPPORTUNITY_ID = v_opportunity_id; 
         END IF;
	END IF;
      
	SELECT   a.LOCATION_ID,
                  a.country countrycode,
                  cc.name countryname,
                  a.room,
                  a.street,
                  a.city,
                  IFNULL (a.state, a.state) statecode,
                  IFNULL (sc.name, a.state) statename,
                  a.postalcode,
                  OPPORTUNITY_ID
    FROM   opportunity_location a
    LEFT JOIN SCI_STATECODES sc
    ON sc.code = a.STATE
    LEFT JOIN SCI_COUNTRYCODES cc
    ON cc.LCODE = a.COUNTRY				
	WHERE a.OPPORTUNITY_ID = v_opportunity_id;	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `opportunity_location_list` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `opportunity_location_list`(
	p_workflowid       INTEGER  
)
BEGIN
	DECLARE v_opportunity_id   INTEGER;
	DECLARE v_moduleid         INTEGER;
 
	SELECT   ID, moduleid INTO   v_opportunity_id, v_moduleid FROM   sci_workflow
    WHERE   WORKFLOWID = p_workflowid;
   
	SELECT   a.location_id,
               a.country countrycode,
               cc.name countryname,
               a.room,
               a.street,
               a.city,
               ifnull (a.state, a.state) statecode,
               ifnull (sc.name, a.state) statename,
               a.postalcode,
               opportunity_id
	FROM   opportunity_location a LEFT JOIN SCI_STATECODES sc
    ON sc.code = a.STATE
    LEFT JOIN SCI_COUNTRYCODES cc
    ON cc.LCODE = a.COUNTRY
	WHERE a.opportunity_id = v_opportunity_id;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `opprotunity_loi_status` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `opprotunity_loi_status`(P_WORKFLOWID                 INTEGER)
BEGIN
   DECLARE v_cnt           INTEGER;
   DECLARE V_MODULEID      INTEGER;
   DECLARE V_ID            INTEGER;
   DECLARE V_CYCLE         INTEGER;
   DECLARE l_status        VARCHAR (500);
   DECLARE l_status1       VARCHAR (500);
   DECLARE l_status2       VARCHAR (500);
   DECLARE l_name_status   VARCHAR (1000);
 
   SELECT   MODULEID, ID, CYCLE
     INTO   V_MODULEID, V_ID, V_CYCLE
     FROM   SCI_WORKFLOW
    WHERE   WORKFLOWID = P_WORKFLOWID;

   SELECT   LOI_MANDATORY
     INTO   l_status
     FROM   opportunity
    WHERE   OPPORTUNITY_ID = V_ID;

   SELECT   REPEATINGOPPORTUNITY
     INTO   l_status1
     FROM   opportunity
    WHERE   OPPORTUNITY_ID = V_ID;


   SELECT   PREPROPOSALMANDATORY
     INTO   l_status2
     FROM   opportunity
    WHERE   OPPORTUNITY_ID = V_ID;
    
    SELECT l_status, l_status1, l_status1;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `publicationsource_dml_prc_5` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `publicationsource_dml_prc_5`(
   p_url                  VARCHAR(4000) /* DEFAULT NULL */ ,
   p_status               VARCHAR(4000) /* DEFAULT NULL */ ,
   p_Workflow_id          INTEGER /* DEFAULT NULL */ ,
   p_lang                 VARCHAR(4000) /* DEFAULT NULL */ ,
   p_name                 LONGTEXT /* DEFAULT NULL */ ,
   p_Frequency            Varchar(4000) /* DEFAULT NULL */ ,
   p_date_captureStart    DATETIME /* DEFAULT NULL */ ,
   p_date_captureEnd      DATETIME /* DEFAULT NULL */ ,
   p_Comment              LONGTEXT /* DEFAULT NULL */ ,
   p_mode                 INTEGER, -- 1 for insert, 2 for update ,3 for display , 4 for deletion of data
   p_opp_source_id        INTEGER /* DEFAULT NULL */
)
BEGIN
   DECLARE v_moduleid      INTEGER;
   DECLARE v_batch         INTEGER;
   DECLARE v_cnt           INTEGER;
   DECLARE v_opp_sequnce   INTEGER;
   DECLARE v_id            integer;
      
SELECT 
    id
INTO v_id FROM
    sci_workflow
WHERE
    WORKFLOWID = p_Workflow_id;
   IF p_mode = 1
   THEN
               SELECT   publicationsSOURCE_SEQ.NEXTVAL INTO v_opp_sequnce FROM DUAL;

         INSERT INTO publicationDataset (PUB_SOURCE_ID,
                                          URL,
                                          STATUS,
                                          FUNDINGBODY_ID,
                                          LANG,
                                          NAME,
                                          FREQUENCY,
                                          CAPTURESTART,
                                          CAPTUREEND,
                                          PUB_COMMENT)
           VALUES   (v_opp_sequnce,
                     p_url,
                     p_status,
                     v_id,
                     p_lang,
                     p_name,
                     p_Frequency,
                     truncate(p_date_captureStart, 0),
                    truncate(p_date_captureEnd, 0), 
                    p_Comment);         
         
SELECT 
    NULL PUB_SOURCE_ID,
    NULL URL,
    NULL STATUS,
    NULL LASTVISITED,
    NULL FUNDINGBODY_ID,
    NULL LANG
FROM DUAL;
         ELSEIF p_mode = 2
   THEN
      UPDATE   publicationDataset
         SET   URL = p_url, STATUS = p_status, LANG=p_lang,
          NAME=p_name,
                                          FREQUENCY=p_Frequency,
                                          CAPTURESTART=p_date_captureStart,
                                          CAPTUREEND=p_date_captureEnd,
                                          PUB_COMMENT=p_Comment
       WHERE   PUB_SOURCE_ID = p_opp_source_id;      
      
SELECT 
    NULL PUB_SOURCE_ID,
    NULL URL,
    NULL STATUS,
    NULL LASTVISITED,
    NULL FUNDINGBODY_ID,
    NULL LANG
FROM DUAL;
   ELSEIF p_mode = 3
   THEN
   
         SELECT   PUB_SOURCE_ID,
                  URL,
                  STATUS,
                  LASTVISITED,
                  FUNDINGBODY_ID,
                  LANG,
                  NAME,
                  FREQUENCY,  
                  CAPTURESTART,
                  CAPTUREEND,
                  PUB_COMMENT
           FROM   publicationDataset
          WHERE   FUNDINGBODY_ID = v_id;
      
    ELSEIF p_mode = 4
   THEN   
     delete from publicationDataset where PUB_SOURCE_ID=p_opp_source_id;     
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `savefundingbody_json` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `savefundingbody_json`(
   P_fundingBodyProjectId       BIGINT,
   P_json                     	longtext,
   P_createdby                	VARCHAR(45),
   P_createddate       			VARCHAR(100),
   P_modifiedby                 VARCHAR(45),
   P_modifieddate               VARCHAR(100),
   P_trigger					integer
   )
BEGIN
	IF P_trigger=1
    THEN
		INSERT INTO fundingbody_main (FUNDINGBODY_ID, DATAJSON, CreatedBy, CreatedTime, ModifiedBy, ModifiedTime) VALUES (P_fundingBodyProjectId, P_json, P_createdby, P_createddate, P_modifiedby, P_modifieddate); 
     ELSE
         UPDATE   fundingbody_main
               SET   DATAJSON = P_json,
                     ModifiedBy = P_modifiedby,
                     ModifiedTime = P_modifieddate
             WHERE   FUNDINGBODY_ID = P_fundingBodyProjectId;
         END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `save_funding_prc3` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `save_funding_prc3`(
   P_fundingBodyProjectId_f       VARCHAR(4000),
   P_Amount_f                     DOUBLE,
   P_ddlCurrency_f                VARCHAR(4000),
   P_fundingBodyProjectId_h       VARCHAR(4000),
   P_Amount_h                     DOUBLE,
   P_ddlCurrency_h                VARCHAR(4000),
   P_acronym                      VARCHAR(4000),
   P_SrtDate                      DATETIME,
   P_EndDateDate                  DATETIME,
   P_Status                       VARCHAR(4000),
   P_link                         VARCHAR(4000),
   P_postofficeboxn               VARCHAR(4000),
   P_Street                       VARCHAR(4000),
   P_locality                     VARCHAR(4000),
   P_region                       VARCHAR(4000),
   P_PostalCode                   VARCHAR(4000),
   P_COUNTRY                      VARCHAR(4000),
   P_COLUMN_DESC                  VARCHAR(4000),
   P_LANGUAGE_NAME                VARCHAR(4000),
   P_COLUMN_ID                    INTEGER,
   P_TRAN_TYPE_ID                 INTEGER,
   P_WFID                         INTEGER,
   P_pagemode                     INTEGER,
   P_mode                         INTEGER,
   P_SEQUENCE_ID                  INTEGER
)
BEGIN
   DECLARE v_award_id       INTEGER;
   DECLARE v_value          INTEGER;
   DECLARE v_moduleid       INTEGER;
   DECLARE v_LANGUAGE_ID    INTEGER;
   DECLARE v_count          INTEGER;
   DECLARE v_count1         INTEGER;
   DECLARE v_count2         INTEGER;
   DECLARE v_COLUMN_ID      INTEGER;
   DECLARE v_TRAN_TYPE_ID   INTEGER;
 
   BEGIN
      SELECT   ID, moduleid
        INTO   v_award_id, v_moduleid
        FROM   sci_workflow
       WHERE   workflowid = P_WFID;
     END;

   

   IF v_moduleid = 4
   THEN
      IF P_mode = 0
      THEN
         SELECT   COUNT(*)
           INTO   v_count
           FROM   FUNDEDPROJECTDETAIL
          WHERE   AWARD_ID = v_award_id;

         IF v_count > 0
         THEN
            UPDATE   FUNDEDPROJECTDETAIL
               SET   ACRONYM = P_acronym,
                     BUDGET_AMOUNT = P_Amount_f,
                     BUDGET_CURRENCY = P_ddlCurrency_f,
                     ENDDATE = P_EndDateDate,
                     FUNDINGBODYPROJECTID = P_fundingBodyProjectId_f,
                     STARTDATE = P_SrtDate,
                     STATUS = P_Status,
                     COUNTRY = P_COUNTRY,
                     LOCALITY = P_locality,
                     POSTALCODE = P_PostalCode,
                     REGION = P_region,
                     STREET = P_Street,
                     POSTOFFICEBOXNUMBER = P_postofficeboxn,
                     link = P_link
             WHERE   AWARD_ID = v_award_id;
         ELSE
            INSERT INTO SCIVAL.FUNDEDPROJECTDETAIL (FUND_ID,
                                                    AWARD_ID,
                                                    ACRONYM,
                                                    BUDGET_AMOUNT,
                                                    BUDGET_CURRENCY,
                                                    ENDDATE,
                                                    FUNDINGBODYPROJECTID,
                                                    STARTDATE,
                                                    STATUS,
                                                    COUNTRY,
                                                    LOCALITY,
                                                    POSTALCODE,
                                                    REGION,
                                                    STREET,
                                                    POSTOFFICEBOXNUMBER)
              VALUES   (FUND_ID.NEXTVAL,
                        v_award_id,
                        P_acronym,
                        P_Amount_f,
                        P_ddlCurrency_f,
                        P_EndDateDate,
                        P_fundingBodyProjectId_f,
                        P_SrtDate,
                        P_Status,
                        P_COUNTRY,
                        P_locality,
                        P_PostalCode,
                        P_region,
                        P_Street,
                        P_postofficeboxn);
         END IF;

         SELECT   COUNT(*)
           INTO   v_count1
           FROM   FUNDEDSUBPROJECT
          WHERE   AWARD_ID = v_award_id;

         IF v_count1 > 0
         THEN
            UPDATE   FUNDEDSUBPROJECT
               SET   FUNDINGBODYPROJECTID = P_fundingBodyProjectId_h,
                     AMOUNT = P_Amount_h,
                     CURRENCY = P_ddlCurrency_h
             WHERE   AWARD_ID = v_award_id;
         ELSE
            INSERT INTO SCIVAL.FUNDEDSUBPROJECT (SUBFUND_ID,
                                                 FUND_ID,
                                                 AWARD_ID,
                                                 FUNDINGBODYPROJECTID,
                                                 AMOUNT,
                                                 CURRENCY)
              VALUES   (SUBFUND_ID.NEXTVAL,
                        FUND_ID.CURRVAL,
                        v_award_id,
                        P_fundingBodyProjectId_h,
                        P_Amount_h,
                        P_ddlCurrency_h);
         END IF;
      END IF;
      COMMIT;
   END IF;

 --  OPEN P_dataout FOR
      SELECT   fpd.FUND_ID,
               fpd.AWARD_ID,
               ACRONYM,
               BUDGET_AMOUNT,
               BUDGET_CURRENCY,
               ENDDATE,
               fpd.FUNDINGBODYPROJECTID,
               STARTDATE,
               STATUS,
               COUNTRY,
               LOCALITY,
               POSTALCODE,
               REGION,
               STREET,
               POSTOFFICEBOXNUMBER,
               LINK,
               SUBFUND_ID,
               AMOUNT,
               CURRENCY
        FROM   FUNDEDPROJECTDETAIL fpd, FUNDEDSUBPROJECT fsp
       WHERE   fpd.AWARD_ID = v_award_id AND FPD.AWARD_ID = FSP.AWARD_ID;

   -- OPEN p_dataout1 FOR
      SELECT   TRAN_ID,
               SCIVAL_ID,
               COLUMN_DESC,
               COLUMN_ID,
               MODULEID,
               LANGUAGE_ID,
               TRAN_TYPE_ID,
               CREATED_DATE
        FROM   SCI_LANGUAGE_DETAIL
       WHERE       SCIVAL_ID = v_award_id
               AND COLUMN_ID = v_COLUMN_ID
               AND MODULEID = v_moduleid;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sciFundedProgramType` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sciFundedProgramType`(
   p_workflowid       integer,
   p_id               varchar(4000),
   p_typeid           varchar(4000),
   p_mode             integer,
   p_oldtypeid      varchar(4000)
)
sp_lbl:

BEGIN
   DECLARE v_fundingbodyid            integer;
   DECLARE v_FUNDEDPROGRAMSTYPESID    integer;
   DECLARE v_FUNDEDPROGRAMTYPESTEXT   varchar (2000);
   DECLARE v_count                    integer;
   DECLARE v_counfundid               integer;
   DECLARE v_counttype                integer;

   SELECT   ID
     INTO   v_fundingbodyid
     FROM   sci_workflow
    WHERE   WORKFLOWID = p_workflowid;

   IF p_mode = 0
   THEN
      SELECT   COUNT(*)
        INTO   v_count
        FROM   FUNDEDPROGRAMSTYPES
       WHERE   FUNDINGBODY_ID = v_fundingbodyid;

      IF v_count = 0
      THEN
         SELECT   FUNDEDPROGRAMSTYPES_SEQ.NEXTVAL
           INTO   v_FUNDEDPROGRAMSTYPESID
           FROM   DUAL;

         INSERT INTO FUNDEDPROGRAMSTYPES
           VALUES   (v_FUNDEDPROGRAMSTYPESID, v_fundingbodyid);

         SELECT   FUNDEDPROGRAMTYPESTEXT
           INTO   v_FUNDEDPROGRAMTYPESTEXT
           FROM   sci_fundedprogramstypelist
          WHERE   TRIM (TYPEID) = TRIM (p_typeid);

         SELECT   COUNT(*)
           INTO   v_counttype
           FROM   FUNDEDPROGRAMSTYPE
          WHERE   FUNDEDPROGRAMSTYPES_ID IN
                        (SELECT   FUNDEDPROGRAMSTYPES_ID
                           FROM   FUNDEDPROGRAMSTYPES
                          WHERE   FUNDINGBODY_ID = v_fundingbodyid)
                  AND ID = TRIM (p_typeid);

         IF v_counttype > 0
         THEN
            ROLLBACK;

               SELECT   FUNDINGBODY_ID,
                        fps.FUNDEDPROGRAMSTYPES_ID,
                        ID,
                        FUNDEDPROGRAMSTYPE_TEXT
                 FROM   FUNDEDPROGRAMSTYPES fps, FUNDEDPROGRAMSTYPE fp
                WHERE   fp.FUNDEDPROGRAMSTYPES_ID =
                           fps.FUNDEDPROGRAMSTYPES_ID
                        AND fps.FUNDINGBODY_ID = v_fundingbodyid;
            
         END IF;

         INSERT INTO FUNDEDPROGRAMSTYPE
           VALUES   (
                        p_typeid,
                        v_FUNDEDPROGRAMTYPESTEXT,
                        v_FUNDEDPROGRAMSTYPESID
                    );
      ELSE
         SELECT   FUNDEDPROGRAMSTYPES_ID
           INTO   v_FUNDEDPROGRAMSTYPESID
           FROM   FUNDEDPROGRAMSTYPES
          WHERE   FUNDINGBODY_ID = v_fundingbodyid;

         SELECT   FUNDEDPROGRAMTYPESTEXT
           INTO   v_FUNDEDPROGRAMTYPESTEXT
           FROM   sci_fundedprogramstypelist
          WHERE   TRIM (TYPEID) = TRIM (p_typeid);

         SELECT   COUNT(*)
           INTO   v_counttype
           FROM   FUNDEDPROGRAMSTYPE
          WHERE   FUNDEDPROGRAMSTYPES_ID IN
                        (SELECT   FUNDEDPROGRAMSTYPES_ID
                           FROM   FUNDEDPROGRAMSTYPES
                          WHERE   FUNDINGBODY_ID = v_fundingbodyid)
                  AND ID = TRIM (p_typeid);

         IF v_counttype > 0
         THEN
            ROLLBACK;
            
               SELECT   FUNDINGBODY_ID,
                        fps.FUNDEDPROGRAMSTYPES_ID,
                        ID,
                        FUNDEDPROGRAMSTYPE_TEXT
                 FROM   FUNDEDPROGRAMSTYPES fps, FUNDEDPROGRAMSTYPE fp
                WHERE   fp.FUNDEDPROGRAMSTYPES_ID =
                           fps.FUNDEDPROGRAMSTYPES_ID
                        AND fps.FUNDINGBODY_ID = v_fundingbodyid;            
            
         END IF;

         INSERT INTO FUNDEDPROGRAMSTYPE
           VALUES   (
                        p_typeid,
                        v_FUNDEDPROGRAMTYPESTEXT,
                        v_FUNDEDPROGRAMSTYPESID
                    );
      END IF;
   ELSEIF p_mode = 1
   THEN
      DELETE FROM   FUNDEDPROGRAMSTYPE
            WHERE   FUNDEDPROGRAMSTYPES_ID =p_id 
                    AND trim (ID) = TRIM (p_typeid);

      SELECT   COUNT(*)
        INTO   v_counfundid
        FROM   FUNDEDPROGRAMSTYPE
       WHERE   FUNDEDPROGRAMSTYPES_ID =p_id ;

      IF v_counfundid = 0
      THEN
         DELETE FROM   FUNDEDPROGRAMSTYPES
               WHERE   FUNDEDPROGRAMSTYPES_ID =p_id ;
      END IF;
   ELSEIF p_mode = 2
   THEN
      SELECT   COUNT(*)
        INTO   v_counfundid
        FROM   FUNDEDPROGRAMSTYPE
       WHERE   TRIM (ID) = TRIM (p_typeid)
               AND FUNDEDPROGRAMSTYPES_ID IN
                        (SELECT   FUNDEDPROGRAMSTYPES_ID
                           FROM   FUNDEDPROGRAMSTYPES
                          WHERE   FUNDINGBODY_ID = v_fundingbodyid);

      IF v_counfundid > 0
      THEN         
         
            SELECT   FUNDINGBODY_ID,
                     fps.FUNDEDPROGRAMSTYPES_ID,
                     ID,
                     FUNDEDPROGRAMSTYPE_TEXT
              FROM   FUNDEDPROGRAMSTYPES fps, FUNDEDPROGRAMSTYPE fp
             WHERE   fp.FUNDEDPROGRAMSTYPES_ID = fps.FUNDEDPROGRAMSTYPES_ID
                     AND fps.FUNDINGBODY_ID = v_fundingbodyid;
                                          
      END IF;

      SELECT   FUNDEDPROGRAMTYPESTEXT
        INTO   v_FUNDEDPROGRAMTYPESTEXT
        FROM   sci_fundedprogramstypelist
       WHERE   TRIM (TYPEID) = TRIM (p_typeid);

      UPDATE   FUNDEDPROGRAMSTYPE
         SET   ID = p_typeid,
               FUNDEDPROGRAMSTYPE_TEXT = v_FUNDEDPROGRAMTYPESTEXT
       WHERE   FUNDEDPROGRAMSTYPES_ID IN
                     (SELECT   FUNDEDPROGRAMSTYPES_ID
                        FROM   FUNDEDPROGRAMSTYPES
                       WHERE   FUNDINGBODY_ID = v_fundingbodyid)
               AND id = p_oldtypeid;
   ELSE
      
      LEAVE sp_lbl;
   END IF;
   
      SELECT   FUNDINGBODY_ID,
               fps.FUNDEDPROGRAMSTYPES_ID,
               ID,
               FUNDEDPROGRAMSTYPE_TEXT
        FROM   FUNDEDPROGRAMSTYPES fps, FUNDEDPROGRAMSTYPE fp
       WHERE   fp.FUNDEDPROGRAMSTYPES_ID = fps.FUNDEDPROGRAMSTYPES_ID
               AND fps.FUNDINGBODY_ID = v_fundingbodyid;   

   COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sciFundedProgramType_win` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sciFundedProgramType_win`(
   p_workflowid       integer,
   p_id               varchar(4000),
   p_typeid           varchar(4000),
   p_mode             integer,
   p_oldtypeid        varchar(4000)  
)
sp_lbl:

BEGIN
	DECLARE v_fundingbodyid            integer;
	DECLARE v_FUNDEDPROGRAMSTYPESID    integer;
	DECLARE v_FUNDEDPROGRAMTYPESTEXT   varchar (2000);
	DECLARE v_count                    integer;
	DECLARE v_counfundid               integer;
	DECLARE v_counttype                integer;
	DECLARE v_tab                      varchar(4000);
	DECLARE NOT_FOUND INT DEFAULT 0;


	-- SELECT list BULK COLLECT INTO   v_tab FROM   table (scigetcsvtoLIST (p_typeid));

	SELECT ID INTO   v_fundingbodyid FROM   sci_workflow	WHERE   WORKFLOWID = p_workflowid;

	IF p_mode = 0
	THEN
      SELECT   COUNT(*) INTO   v_count FROM   FUNDEDPROGRAMSTYPES WHERE   FUNDINGBODY_ID = v_fundingbodyid;

	IF v_count = 0
    THEN
         SELECT   FUNDEDPROGRAMSTYPES_SEQ.NEXTVAL INTO   v_FUNDEDPROGRAMSTYPESID FROM   DUAL;

         INSERT INTO FUNDEDPROGRAMSTYPES VALUES   (v_FUNDEDPROGRAMSTYPESID, v_fundingbodyid);
         
         /*DECLARE i CURSOR FOR v_tab.FIRST . v_tab.LAST
         OPEN i;
         FETCH i INTO;
         WHILE NOT_FOUND=0
         DO
            SELECT   FUNDEDPROGRAMTYPESTEXT INTO   v_FUNDEDPROGRAMTYPESTEXT FROM   sci_fundedprogramstypelist
			WHERE   TRIM (TYPEID) = TRIM (v_tab (i));

            SELECT COUNT(*) INTO   v_counttype FROM   FUNDEDPROGRAMSTYPE
			WHERE FUNDEDPROGRAMSTYPES_ID IN
			(SELECT FUNDEDPROGRAMSTYPES_ID FROM   FUNDEDPROGRAMSTYPES
			WHERE FUNDINGBODY_ID = v_fundingbodyid) AND ID = TRIM (v_tab (i));

            IF v_counttype > 0
            THEN
               ROLLBACK;
               
                  SELECT   FUNDINGBODY_ID,
                           fps.FUNDEDPROGRAMSTYPES_ID,
                           ID,
                           FUNDEDPROGRAMSTYPE_TEXT
                    FROM   FUNDEDPROGRAMSTYPES fps, FUNDEDPROGRAMSTYPE fp
                   WHERE   fp.FUNDEDPROGRAMSTYPES_ID =
                              fps.FUNDEDPROGRAMSTYPES_ID
                           AND fps.FUNDINGBODY_ID = v_fundingbodyid;
               
               RAISE e_error;
            END IF;

            INSERT INTO FUNDEDPROGRAMSTYPE
              VALUES   (
                           v_tab(i),
                           v_FUNDEDPROGRAMTYPESTEXT,
                           v_FUNDEDPROGRAMSTYPESID
                       );
         FETCH  INTO;
         END WHILE;
         CLOSE ;*/
      

      ELSE
        SELECT   FUNDEDPROGRAMSTYPES_ID INTO   v_FUNDEDPROGRAMSTYPESID FROM   FUNDEDPROGRAMSTYPES
		WHERE   FUNDINGBODY_ID = v_fundingbodyid;

         /*DECLARE i CURSOR FOR v_tab.FIRST . v_tab.LAST
         OPEN i;
         FETCH i INTO;
         WHILE NOT_FOUND=0
         DO
            SELECT   FUNDEDPROGRAMTYPESTEXT INTO   v_FUNDEDPROGRAMTYPESTEXT FROM   sci_fundedprogramstypelist
			WHERE   TRIM (TYPEID) = TRIM (v_tab (i));

            SELECT   COUNT(*) INTO   v_counttype FROM   FUNDEDPROGRAMSTYPE WHERE   FUNDEDPROGRAMSTYPES_ID IN
			(SELECT   FUNDEDPROGRAMSTYPES_ID FROM   FUNDEDPROGRAMSTYPES WHERE   FUNDINGBODY_ID = v_fundingbodyid)
			AND ID = TRIM (v_tab (i));

            IF v_counttype > 0
            THEN
               ROLLBACK;

               SET NOT_FOUND = 0;
               
                  SELECT   FUNDINGBODY_ID,
                           fps.FUNDEDPROGRAMSTYPES_ID,
                           ID,
                           FUNDEDPROGRAMSTYPE_TEXT
                    FROM   FUNDEDPROGRAMSTYPES fps, FUNDEDPROGRAMSTYPE fp
                   WHERE   fp.FUNDEDPROGRAMSTYPES_ID =
						   fps.FUNDEDPROGRAMSTYPES_ID AND fps.FUNDINGBODY_ID = v_fundingbodyid;
               
               RAISE e_error;
            END IF;

            INSERT INTO FUNDEDPROGRAMSTYPE
              VALUES   (
                           v_tab(i),
                           v_FUNDEDPROGRAMTYPESTEXT,
                           v_FUNDEDPROGRAMSTYPESID
                       );
         FETCH  INTO;
         END WHILE;
         CLOSE ;*/
      END IF;
   ELSEIF p_mode = 1
   THEN
      /*DECLARE i CURSOR FOR v_tab.FIRST . v_tab.LAST
      OPEN i;
      FETCH i INTO;
      WHILE NOT_FOUND=0
      DO
         DELETE FROM   FUNDEDPROGRAMSTYPE
               WHERE   FUNDEDPROGRAMSTYPES_ID = p_id
                       AND TRIM (ID) = TRIM (v_tab (i));
      FETCH  INTO;
      END WHILE;
      CLOSE ; */

      SELECT COUNT(*) INTO v_counfundid FROM FUNDEDPROGRAMSTYPE WHERE FUNDEDPROGRAMSTYPES_ID = p_id;


      IF v_counfundid = 0
      THEN
         DELETE FROM FUNDEDPROGRAMSTYPES WHERE   FUNDEDPROGRAMSTYPES_ID = p_id;
      END IF;
   /*ELSEIF p_mode = 2
   THEN
      DECLARE i CURSOR FOR v_tab.FIRST . v_tab.LAST
      OPEN i;
      FETCH i INTO;
      WHILE NOT_FOUND=0
      DO
        SELECT COUNT(*) INTO   v_counfundid FROM   FUNDEDPROGRAMSTYPE
		WHERE TRIM(ID) = TRIM(v_tab(i)) AND FUNDEDPROGRAMSTYPES_ID 
        IN (SELECT FUNDEDPROGRAMSTYPES_ID FROM FUNDEDPROGRAMSTYPES WHERE FUNDINGBODY_ID = v_fundingbodyid);

         IF v_counfundid > 0
         THEN
            ROLLBACK;
            
            SET NOT_FOUND = 0;
            
				SELECT   FUNDINGBODY_ID, fps.FUNDEDPROGRAMSTYPES_ID, ID, FUNDEDPROGRAMSTYPE_TEXT
				FROM   FUNDEDPROGRAMSTYPES fps, FUNDEDPROGRAMSTYPE fp
                WHERE   fp.FUNDEDPROGRAMSTYPES_ID = fps.FUNDEDPROGRAMSTYPES_ID AND fps.FUNDINGBODY_ID = v_fundingbodyid;

            RAISE e_error;
         END IF;

        SELECT   FUNDEDPROGRAMTYPESTEXT INTO   v_FUNDEDPROGRAMTYPESTEXT FROM   sci_fundedprogramstypelist
		WHERE   TRIM (TYPEID) = TRIM (v_tab (i));

         UPDATE   FUNDEDPROGRAMSTYPE
            SET   ID = v_tab(i),
                  FUNDEDPROGRAMSTYPE_TEXT = v_FUNDEDPROGRAMTYPESTEXT
          WHERE   FUNDEDPROGRAMSTYPES_ID IN
                        (SELECT   FUNDEDPROGRAMSTYPES_ID
                           FROM   FUNDEDPROGRAMSTYPES
                          WHERE   FUNDINGBODY_ID = v_fundingbodyid)
                  AND id = p_oldtypeid;
      FETCH  INTO;
      END WHILE;
      CLOSE ;   
      
   END IF;*/


   SET NOT_FOUND = 0;
   
      SELECT   FUNDINGBODY_ID,
               fps.FUNDEDPROGRAMSTYPES_ID,
               ID,
               FUNDEDPROGRAMSTYPE_TEXT
        FROM   FUNDEDPROGRAMSTYPES fps, FUNDEDPROGRAMSTYPE fp
       WHERE   fp.FUNDEDPROGRAMSTYPES_ID = fps.FUNDEDPROGRAMSTYPES_ID
               AND fps.FUNDINGBODY_ID = v_fundingbodyid;
   
   COMMIT;
END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_auto_lead_relorgs_prc` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_auto_lead_relorgs_prc`(
   p_id             INTEGER,
   p_moduleid       INTEGER,
   p_flag           INTEGER   
)
sp_lbl:

BEGIN
	DECLARE L_COUNT               INTEGER;
	DECLARE l_relatedorgs_count   INTEGER;
	DECLARE v_sci_id              INTEGER;
	DECLARE v_fbid VARCHAR(4000);
   
	SELECT   ID INTO   v_sci_id FROM   SCI_WORKFLOW a WHERE   A.WORKFLOWID = p_id;
      
	IF p_moduleid = 3
    THEN
		SELECT   FUNDINGBODYID INTO   v_fbid FROM   OPPORTUNITY_MASTER WHERE   OPPORTUNITYID = v_sci_id;
	ELSE
		SELECT   FUNDINGBODYID INTO   v_fbid FROM   award_MASTER WHERE   AWARDID = v_sci_id;
	END IF;     

	SELECT COUNT(*) INTO l_count FROM auto_lead_relatedorgs
    WHERE FUNDINGBODYID = v_fbid and 1=2;

	IF p_flag = 0
	THEN
		IF l_count > 0
		THEN
			SELECT   LEAD_FUNDINGBODYID,
                     COMPONENT_FUNDINGBODYID,
                     component_fundingbodyid_other
            FROM   auto_lead_relatedorgs
            WHERE   FUNDINGBODYID =v_fbid; -- p_id;		
		ELSE         
			SELECT   NULL LEAD_FUNDINGBODYID,
                     NULL COMPONENT_FUNDINGBODYID,
                     NULL component_fundingbodyid_other
            FROM   DUAL;		
		END IF;
	ELSE
		IF p_moduleid = 3
		THEN
			SELECT COUNT(*) INTO   l_relatedorgs_count FROM   relatedorgs WHERE   OPPORTUNITY_ID = v_sci_id;           

			IF l_relatedorgs_count > 0
			THEN				
				SELECT   RELO.HIERARCHY,
                        ORGS.ORGDBID,
                        ORGS.RELTYPE,
                        ORGS.ORG_TEXT,
                        ORGS.RELATEDORGS_ID
                FROM   relatedorgs RELO, ORG ORGS
                WHERE   ORGS.RELATEDORGS_ID = RELO.RELATEDORGS_ID
                        AND OPPORTUNITY_ID = v_sci_id;            
			ELSE
				SELECT   NULL LEAD_FUNDINGBODYID,
                        NULL COMPONENT_FUNDINGBODYID,
                        NULL component_fundingbodyid_other
                 FROM   DUAL;
			END IF;
		ELSE
			SELECT   COUNT(*) INTO   l_relatedorgs_count FROM   relatedorgs WHERE   award_id = v_sci_id;    

			IF l_relatedorgs_count > 0
			THEN				
				SELECT   RELO.HIERARCHY,
                        ORGS.ORGDBID,
                        ORGS.RELTYPE,
                        ORGS.ORG_TEXT,
                        ORGS.RELATEDORGS_ID
                FROM   relatedorgs RELO, ORG ORGS
                WHERE   ORGS.RELATEDORGS_ID = RELO.RELATEDORGS_ID
                        AND award_id = v_sci_id;                                  
			ELSE            
				SELECT   NULL LEAD_FUNDINGBODYID,
                        NULL COMPONENT_FUNDINGBODYID,
                        NULL component_fundingbodyid_other
                FROM   DUAL;            
			END IF;
		END IF;
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_awardstatisticsinsert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_awardstatisticsinsert`(
   p_workflowid              INTEGER,
   p_insdel                  INTEGER,      -- 0 * insert ,2* update ,1* delete
   p_currency                VARCHAR(4000),
   p_totalfunding_text       VARCHAR(4000), 
   p_url                     VARCHAR(4000),
   p_link_text               VARCHAR(4000)
)
sp_lbl:

BEGIN
   DECLARE v_fundingbodyid      INTEGER;
   DECLARE v_value              INTEGER;
   DECLARE v_count              INTEGER;
   DECLARE aw_count             INTEGER;
   DECLARE awcnt                INTEGER;
   DECLARE lv_totalfunding_text varchar(2000);
 
   IF LOCATE('.', p_totalfunding_text,1)>0 
   THEN
      
      leave sp_lbl;
   ELSE
      SET lv_totalfunding_text = TRIM(p_totalfunding_text);-- TO_NUMBER(TRIM(p_totalfunding_text));
   END IF;
  -- -----------------------------------------------------------------------------------------------------------
SELECT 
    ID
INTO v_fundingbodyid FROM
    sci_workflow
WHERE
    workflowid = p_workflowid;

   IF p_insdel = 0
   THEN
      SELECT COUNT(*)
        INTO aw_count
        FROM awardstatistics
       WHERE fundingbody_id = v_fundingbodyid;

SELECT awardstatistics_seq.NEXTVAL INTO v_value FROM DUAL;

      INSERT INTO awardstatistics
                  (awardstatistics_id, fundingbody_id
                  )
           VALUES (v_value, v_fundingbodyid
                  );

      IF p_currency IS NOT NULL
      THEN
         INSERT INTO totalfunding
                     (currency, totalfunding_text, awardstatistics_id
                     )
              VALUES (p_currency, lv_totalfunding_text, v_value
                     );
      END IF;

      IF p_url IS NOT NULL
      THEN
         INSERT INTO LINK
                     (url, link_text, awardstatistics_id
                     )
              VALUES (p_url, p_link_text, v_value
                     );
      END IF;

   ELSEIF p_insdel = 1
   THEN
      DELETE FROM LINK
            WHERE awardstatistics_id IN (
                                       SELECT awardstatistics_id
                                         FROM awardstatistics
                                        WHERE fundingbody_id =
                                                              v_fundingbodyid);

DELETE FROM totalfunding 
WHERE
    awardstatistics_id IN (SELECT 
        awardstatistics_id
    FROM
        awardstatistics
    
    WHERE
        fundingbody_id = v_fundingbodyid);

DELETE FROM awardstatistics 
WHERE
    fundingbody_id = v_fundingbodyid;
   ELSEIF p_insdel = 2
   THEN
      SELECT COUNT (`*`)
        INTO v_count
        FROM LINK
       WHERE 
         awardstatistics_id IN (SELECT awardstatistics_id
                                      FROM awardstatistics
                                     WHERE fundingbody_id = v_fundingbodyid);

      IF v_count > 0
      THEN
         IF p_url IS NULL
         THEN
            DELETE FROM LINK
                  WHERE awardstatistics_id IN (
                                       SELECT awardstatistics_id
                                         FROM awardstatistics
                                        WHERE fundingbody_id =
                                                              v_fundingbodyid);
         ELSE
            UPDATE LINK
               SET url = p_url,
                   link_text = p_link_text
             WHERE awardstatistics_id IN (
                                        SELECT awardstatistics_id
                                          FROM awardstatistics
                                         WHERE fundingbody_id =
                                                               v_fundingbodyid);
         END IF;
      ELSEIF p_url IS NOT NULL
      THEN
         SELECT awardstatistics_id
           INTO v_value
           FROM awardstatistics
          WHERE fundingbody_id = v_fundingbodyid;

         INSERT INTO LINK
                     (url, link_text, awardstatistics_id
                     )
              VALUES (p_url, p_link_text, v_value
                     );
      END IF;

SELECT 
    COUNT(*)
INTO awcnt FROM
    totalfunding
WHERE
    awardstatistics_id IN (SELECT 
            awardstatistics_id
        FROM
            awardstatistics
        WHERE
            fundingbody_id = v_fundingbodyid);

      IF (awcnt > 0)
      THEN
         UPDATE totalfunding
            SET currency = p_currency,
                totalfunding_text = lv_totalfunding_text
          WHERE awardstatistics_id IN (SELECT awardstatistics_id
                                         FROM awardstatistics
                                        WHERE fundingbody_id = v_fundingbodyid);
      ELSEIF p_currency IS NOT NULL
      THEN
         SELECT awardstatistics_id
           INTO v_value
           FROM awardstatistics
          WHERE fundingbody_id = v_fundingbodyid;

         INSERT INTO totalfunding
                     (currency, totalfunding_text, awardstatistics_id
                     )
              VALUES (p_currency, lv_totalfunding_text, v_value
                     );
      END IF;

SELECT 
    COUNT(*)
INTO v_count FROM
    LINK
WHERE
    url IS NULL AND link_text IS NULL
        AND awardstatistics_id IN (SELECT 
            awardstatistics_id
        FROM
            awardstatistics
        WHERE
            fundingbody_id = v_fundingbodyid);

      IF v_count > 0
      THEN
         DELETE FROM LINK
               WHERE awardstatistics_id IN (
                                       SELECT awardstatistics_id
                                         FROM awardstatistics
                                        WHERE fundingbody_id =
                                                              v_fundingbodyid);
      END IF;

SELECT 
    COUNT(*)
INTO v_count FROM
    totalfunding
WHERE
    currency IS NULL
        AND totalfunding_text IS NULL
        AND awardstatistics_id IN (SELECT 
            awardstatistics_id
        FROM
            awardstatistics
        WHERE
            fundingbody_id = v_fundingbodyid);

      IF v_count > 0
      THEN
         DELETE FROM totalfunding
               WHERE awardstatistics_id IN (
                                       SELECT awardstatistics_id
                                         FROM awardstatistics
                                        WHERE fundingbody_id =
                                                              v_fundingbodyid);
		END IF;   
	END IF;   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_AWARDSTATISTICSlist` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_AWARDSTATISTICSlist`(
	p_workflowid integer
)
BEGIN
   DECLARE v_fundingbodyid   integer;
    
SELECT 
    ID
INTO v_fundingbodyid FROM
    sci_workflow
WHERE
    WORKFLOWID = p_workflowid;
   
SELECT 
    ast.AWARDSTATISTICS_ID,
    ast.FUNDINGBODY_ID,
    tf.CURRENCY,
    tf.TOTALFUNDING_TEXT,
    l.URL,
    l.LINK_TEXT
FROM
    AWARDSTATISTICS ast
        LEFT JOIN
    TOTALFUNDING tf ON ast.AWARDSTATISTICS_ID = tf.AWARDSTATISTICS_ID
        LEFT JOIN
    link l ON ast.AWARDSTATISTICS_ID = l.AWARDSTATISTICS_ID
WHERE
    ast.FUNDINGBODY_ID = v_fundingbodyid;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_AW_ADDRESSINSDEL` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_AW_ADDRESSINSDEL`(
   P_AFFILIATION_ID_IN        INTEGER,
   P_FLAG_IN                 INTEGER,
   P_COUNTRY_IN VARCHAR(4000),
   P_ROOM_IN VARCHAR(4000),
   P_STREET_IN VARCHAR(4000),
   P_CITY_IN VARCHAR(4000)  ,
   P_STATE_IN VARCHAR(4000) ,
   P_POSTALCODE_IN VARCHAR(4000) ,
   P_OLD_COUNTRY_IN VARCHAR(4000) ,
   P_OLD_ROOM_IN VARCHAR(4000)  ,
   P_OLD_STREET_IN VARCHAR(4000),
   P_OLD_CITY_IN VARCHAR(4000) ,
   P_OLD_STATE_IN VARCHAR(4000),
   P_OLD_POSTALCODE_IN VARCHAR(4000),
   OUT P_STATUS_OUT          INTEGER,
   OUT P_ERROR_OUT           VARCHAR(4000)
)
BEGIN
   /********************************************************************************
     Modified By    :  Julfcar Ali
     Modified Date  :  20-Feb-2013
     Module         :  SciVal.
     Enhancements   :  Address table is being used for address detail instead of awardaddress.
     -------------------------------------------------------------------------------
     Code Location  :  http://192.168.212.28:9870/PowerManage/branches/Dev/Source/Back End/Objects/Procedures/
     Please Note    :
                      1. P_FLAG_IN -  0 - Insert Record
                                      1 - Delete Record
                                      2 - Update Record
                      2. P_OLD_ denotes that the parameter contains the old  address value.
                      3. There is one observation, that a address id column should be added in address table to uniquely identify the address record
                         to retrieve, update and delete.
    ********************************************************************************/
   DECLARE L_V_NVL VARCHAR (2) default '-0';
      INSERT INTO FROG VALUES(CONCAT(IFNULL(P_AFFILIATION_ID_IN, ''),' - ',IFNULL(P_STATE_IN, '')),SYSDATE());
      
   IF P_FLAG_IN = 0
   THEN
      INSERT INTO ADDRESS (COUNTRYTEST,
                           ROOM,
                           STREET,
                           CITY,
                           STATE,
                           POSTALCODE,
                           AFFILIATION_ID)
        VALUES   (P_COUNTRY_IN,
                  P_ROOM_IN,
                  P_STREET_IN,
                  P_CITY_IN,
                  P_STATE_IN,
                  P_POSTALCODE_IN,
                  P_AFFILIATION_ID_IN);
   ELSEIF P_FLAG_IN = 1
   THEN
      DELETE FROM   ADDRESS
            WHERE       AFFILIATION_ID = P_AFFILIATION_ID_IN
                    AND IFNULL (COUNTRYTEST, L_V_NVL) = IFNULL (P_COUNTRY_IN, L_V_NVL)
                    AND IFNULL (ROOM, L_V_NVL) = IFNULL (P_ROOM_IN, L_V_NVL)
                    AND IFNULL (STREET, L_V_NVL) = IFNULL (P_STREET_IN, L_V_NVL)
                    AND IFNULL (CITY, L_V_NVL) = IFNULL (P_CITY_IN, L_V_NVL)
                    AND IFNULL (STATE, L_V_NVL) = IFNULL (P_STATE_IN, L_V_NVL)
                    AND IFNULL (POSTALCODE, L_V_NVL) =
                          IFNULL (P_POSTALCODE_IN, L_V_NVL);
   ELSEIF P_FLAG_IN = 2
   THEN
      UPDATE   ADDRESS
         SET   COUNTRYTEST = P_COUNTRY_IN,
               ROOM = P_ROOM_IN,
               STREET = P_STREET_IN,
               CITY = P_CITY_IN,
               STATE = P_STATE_IN,
               POSTALCODE = P_POSTALCODE_IN
       WHERE       AFFILIATION_ID = P_AFFILIATION_ID_IN
               AND IFNULL (COUNTRYTEST, L_V_NVL) = IFNULL (P_OLD_COUNTRY_IN, L_V_NVL)
               AND IFNULL (ROOM, L_V_NVL) = IFNULL (P_OLD_ROOM_IN, L_V_NVL)
               AND IFNULL (STREET, L_V_NVL) = IFNULL (P_OLD_STREET_IN, L_V_NVL)
               AND IFNULL (CITY, L_V_NVL) = IFNULL (P_OLD_CITY_IN, L_V_NVL)
               AND IFNULL (STATE, L_V_NVL) = IFNULL (P_OLD_STATE_IN, L_V_NVL)
               AND IFNULL (POSTALCODE, L_V_NVL) =
                     IFNULL (P_OLD_POSTALCODE_IN, L_V_NVL);
END IF;
      SELECT   A.COUNTRYTEST,
               C.NAME COUNTRYNAME,
               A.ROOM,
               A.STREET,
               A.CITY,
               A.STATE,
               A.POSTALCODE,
               A.AFFILIATION_ID
        FROM   ADDRESS A, SCI_COUNTRYCODES C
       WHERE   C.LCODE = A.COUNTRYTEST AND AFFILIATION_ID = P_AFFILIATION_ID_IN;
   END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_AW_ADDRESSLIST` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_AW_ADDRESSLIST`(
   P_AFFILIATION_ID_IN       INTEGER
)
BEGIN
     SELECT   A.COUNTRYTEST country,
               C.NAME COUNTRYNAME,
               A.ROOM,
               A.STREET,
               A.CITY,
               IFNULL(SC.NAME,A.STATE) STATE,
               A.POSTALCODE,
               A.AFFILIATION_ID,
               A.STATE STATECODE
        FROM   ADDRESS A, SCI_COUNTRYCODES C, SCI_STATECODES SC
       WHERE   C.LCODE = A.COUNTRYTEST AND SC.CODE= A.STATE AND AFFILIATION_ID = P_AFFILIATION_ID_IN;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_AW_AWARDEEINSDEL_41` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_AW_AWARDEEINSDEL_41`(
   P_WORKFLOWID           INTEGER,
   P_INSDEL               INTEGER,
   P_TYPE                 VARCHAR(4000),
   P_SCOPUSAUTHORID       INTEGER,
   P_externalRes_Id       VARCHAR(4000),
   P_ORCID                VARCHAR(4000),
   P_INDEXEDNAME          VARCHAR(4000),
   P_GIVENNAME            VARCHAR(4000),
   P_INITIALS             VARCHAR(4000),
   P_SURNAME              VARCHAR(4000),
   p_AWARDEE_ID           INTEGER,
   p_currency             VARCHAR(4000),
   p_amount               INTEGER 
)
BEGIN
   DECLARE V_ID                     INTEGER;
   DECLARE V_MODULEID               INTEGER;
   DECLARE V_AWARDEESID             INTEGER;
   DECLARE V_AWARDEEID              INTEGER;
   DECLARE V_INSCOUNT               INTEGER;
   DECLARE v_delcount               INTEGER;
   DECLARE V_AWARDEEINSTITUTIONID   INTEGER;
   DECLARE l_awrdcount              INTEGER;
   DECLARE l_awardees_id            INTEGER;
   DECLARE l_awaree_cnt             INTEGER;
   DECLARE V_INDEXCHK               INTEGER;      
   DECLARE l_amt_cnt                integer;
   DECLARE V_AWARDEE_NAME_ID_SEQ    INTEGER;
   
SELECT 
    ID, MODULEID
INTO V_ID , V_MODULEID FROM
    SCI_WORKFLOW
WHERE
    WORKFLOWID = P_WORKFLOWID;

SELECT  COUNT(1) INTO V_INDEXCHK FROM
    (SELECT TRIM(LEADING CHAR(9 USING ASCII) FROM TRIM(INDEXEDNAME)) INDEXEDNAME FROM AWARDEENAME 
      WHERE AWARDEE_ID IN (SELECT  AWARDEE_ID FROM AWARDEENAME WHERE AWARDEE_ID IN (SELECT  AWARDEE_ID FROM AWARDEE
                    WHERE AWARDEES_ID IN (SELECT  AWARDEES_ID FROM  AWARDEES WHERE AWARD_ID = V_ID))) AND INDEXEDNAME LIKE '%'
                    OR CONCAT(IFNULL(P_INDEXEDNAME, ''), '%')) T
                   WHERE INDEXEDNAME = P_INDEXEDNAME;
   IF V_INDEXCHK < 0
   THEN
  SELECT   COUNT(*)
        INTO   l_awrdcount
        FROM   AWARDEES
       WHERE   AWARD_ID = V_ID;

      IF l_awrdcount > 0
      THEN
        SELECT   ifnull(AWARDEES_ID,0)
              INTO   l_awardees_id
              FROM   AWARDEES
             WHERE   AWARD_ID = V_ID;
             IF P_TYPE in ( 'PI')
             THEN
            SELECT   COUNT(*)
              INTO   l_awaree_cnt
              FROM   AWARDEE
             WHERE   AWARDEES_ID = l_awardees_id AND TYPE = P_TYPE;

		else

            SELECT   COUNT(*)
              INTO   l_awaree_cnt
              FROM   AWARDEE
             WHERE   AWARDEES_ID = l_awardees_id AND TYPE in ( 'PI',
      'institution');

           end if;
         END IF;
      END IF;
    IF P_INSDEL = 0
      THEN
         SELECT   COUNT(*)
           INTO   V_INSCOUNT
           FROM   AWARDEES
          WHERE   AWARD_ID = V_ID;

         IF V_INSCOUNT = 0
         THEN
            SELECT   AWARDEESID_SEQ.NEXTVAL INTO V_AWARDEESID FROM DUAL;

            INSERT INTO AWARDEES (AWARDEES_ID, AWARD_ID)
              VALUES   (V_AWARDEESID, V_ID);
         ELSE
            SELECT   AWARDEES_ID
              INTO   V_AWARDEESID
              FROM   AWARDEES
             WHERE   AWARD_ID = V_ID;
         END IF;



SELECT AWARDEEID_SEQ.NEXTVAL INTO V_AWARDEEID FROM DUAL;
SELECT AWARDEE_NAME_ID_SEQ.NEXTVAL INTO v_awardee_name_id_seq FROM DUAL;


         INSERT INTO AWARDEE (TYPE,
                              SCOPUSAUTHORID,
                              externalResearcherIdentifier,
                              ORCID,
                              AWARDEE_ID,
                              AWARDEES_ID)
           VALUES   (P_TYPE,
                     P_SCOPUSAUTHORID,
                     P_externalRes_Id,
                     P_ORCID,
                     V_AWARDEEID,
                     V_AWARDEESID);

         IF p_INDEXEDNAME IS NOT NULL
         THEN
            INSERT INTO AWARDEENAME (INDEXEDNAME,
                                     GIVENNAME,
                                     INITIALS,
                                     SURNAME,
                                     AWARDEE_ID,
                                      AWADEENAME_ID,
                                     LANG)
              VALUES   (p_INDEXEDNAME,
                        p_GIVENNAME,
                        p_INITIALS,
                        p_SURNAME,
                        V_AWARDEEID,
                        v_awardee_name_id_seq,
                      'en'
                        );
         END IF;

SELECT 
    COUNT(*)
INTO l_amt_cnt FROM
    AMOUNT
WHERE
    AWARDEE_ID = V_AWARDEEID;

         if l_amt_cnt=0 then
            IF p_amount < 1 OR p_amount is null THEN
               INSERT INTO  AMOUNT(CURRENCY,AMOUNT_TEXT, AWARD_ID,AWARDEE_ID)
                                   VALUES('USD',p_amount, V_ID,V_AWARDEEID);
            ELSE
               INSERT INTO  AMOUNT(CURRENCY,AMOUNT_TEXT, AWARD_ID,AWARDEE_ID)
                                   VALUES(p_currency,p_amount, V_ID,
      V_AWARDEEID);
            END IF;
         end if ;
SELECT AWARDEEINSTITUTIONID_SEQ.NEXTVAL INTO V_AWARDEEINSTITUTIONID FROM DUAL;
         INSERT INTO AWARDEEINSTITUTION (AWARDEE_ID, AWARDEEINSTITUTION_ID)
           VALUES   (V_AWARDEEID, V_AWARDEEINSTITUTIONID);
         IF p_type = 'institution'
         THEN
            INSERT INTO AFFILIATION (
                                        ORG,
                                        AFFILIATION_ID,
                                        AWARDEEINSTITUTION_ID,lang
                       )
              VALUES   (
                           P_INDEXEDNAME,
                           AFFILIATIONID_SEQ.NEXTVAL,
                           V_AWARDEEINSTITUTIONID,'en'
                       );
         ELSE
            INSERT INTO AFFILIATION (
                                        ORG,
                                        lang,
                                        AFFILIATION_ID,
                                        AWARDEEINSTITUTION_ID
                       )
              VALUES   (
                           'Not Available',
                           'en',
                           AFFILIATIONID_SEQ.NEXTVAL,
                           V_AWARDEEINSTITUTIONID
                       );
         END IF;
      ELSEIF P_INSDEL = 1
      THEN
         SELECT   AWARDEES_ID
           INTO   v_AWARDEESID
           FROM   awardee
          WHERE   AWARDEE_ID = p_AWARDEE_ID;

DELETE FROM AWARDEENAME 
WHERE
    AWARDEE_ID = p_AWARDEE_ID;

DELETE FROM telephone 
WHERE
    AFFILIATION_ID IN (SELECT 
        AFFILIATION_ID
    FROM
        AFFILIATION
    
    WHERE
        AWARDEEINSTITUTION_ID IN (SELECT 
            AWARDEEINSTITUTION_ID
        FROM
            AWARDEEINSTITUTION
        
        WHERE
            AWARDEE_ID = p_AWARDEE_ID));


DELETE FROM fax 
WHERE
    AFFILIATION_ID IN (SELECT 
        AFFILIATION_ID
    FROM
        AFFILIATION
    
    WHERE
        AWARDEEINSTITUTION_ID IN (SELECT 
            AWARDEEINSTITUTION_ID
        FROM
            AWARDEEINSTITUTION        
        WHERE
            AWARDEE_ID = p_AWARDEE_ID));
DELETE FROM address 
WHERE
    AFFILIATION_ID IN (SELECT 
        AFFILIATION_ID
    FROM
        AFFILIATION
    
    WHERE
        AWARDEEINSTITUTION_ID IN (SELECT 
            AWARDEEINSTITUTION_ID
        FROM
            AWARDEEINSTITUTION
        
        WHERE
            AWARDEE_ID = p_AWARDEE_ID));


DELETE FROM AWARDADDRESS 
WHERE
    AFFILIATION_ID IN (SELECT 
        AFFILIATION_ID
    FROM
        AFFILIATION
    
    WHERE
        AWARDEEINSTITUTION_ID IN (SELECT 
            AWARDEEINSTITUTION_ID
        FROM
            AWARDEEINSTITUTION
        
        WHERE
            AWARDEE_ID = p_AWARDEE_ID));

DELETE FROM AFFILIATION 
WHERE
    AWARDEEINSTITUTION_ID IN (SELECT 
        AWARDEEINSTITUTION_ID
    FROM
        AWARDEEINSTITUTION
    
    WHERE
        AWARDEE_ID = p_AWARDEE_ID);


DELETE FROM AWARDEEINSTITUTION 
WHERE
    AWARDEE_ID = p_AWARDEE_ID;
DELETE FROM amount 
WHERE
    AWARDEE_ID = p_AWARDEE_Id;

DELETE FROM AWARDEENAME_AFTER_UPDATE 
WHERE
    AWARDEE_ID = p_AWARDEE_ID;
        
DELETE FROM awardee 
WHERE
    AWARDEE_ID = p_AWARDEE_ID;



         SELECT   COUNT(*)
           INTO   v_delcount
           FROM   awardee
          WHERE   AWARDEEs_ID = v_AWARDEESID;

         IF v_delcount = 0
         THEN
            DELETE FROM   awardees
                  WHERE   AWARDEEs_ID = v_AWARDEESID;
         END IF;
      ELSEIF P_INSDEL = 2
      THEN
         UPDATE   awardee
            SET   TYPE = p_TYPE, SCOPUSAUTHORID = p_SCOPUSAUTHORID,externalresearcheridentifier=p_externalres_id,orcid=p_orcid
          WHERE   AWARDEE_ID = p_AWARDEE_ID;
UPDATE AWARDEENAME 
SET 
    INDEXEDNAME = p_INDEXEDNAME,
    GIVENNAME = p_GIVENNAME,
    INITIALS = p_INITIALS,
    SURNAME = p_SURNAME
WHERE
    AWARDEE_ID = p_AWARDEE_ID;
UPDATE amount 
SET 
    CURRENCY = p_currency,
    AMOUNT_TEXT = p_amount
WHERE
    AWARDEE_ID = p_AWARDEE_ID;
         IF p_type = 'institution'
         THEN
            SELECT   COUNT(*)
              INTO   V_INSCOUNT
              FROM   awardeeinstitution
             WHERE   awardee_id = p_AWARDEE_ID;

            IF V_INSCOUNT > 0
            THEN
               SELECT   AWARDEEINSTITUTION_ID
                 INTO   V_AWARDEEINSTITUTIONID
                 FROM   awardeeinstitution
                WHERE   awardee_id = p_AWARDEE_ID;

UPDATE AFFILIATION 
SET 
    org = P_INDEXEDNAME
WHERE
    AWARDEEINSTITUTION_ID = V_AWARDEEINSTITUTIONID;
            ELSE
               SELECT   AWARDEEINSTITUTIONID_SEQ.NEXTVAL
                 INTO   V_AWARDEEINSTITUTIONID
                 FROM   DUAL;

               INSERT INTO AWARDEEINSTITUTION (
                                                  AWARDEE_ID,
                                                  AWARDEEINSTITUTION_ID
                          )
                 VALUES   (V_AWARDEEID, V_AWARDEEINSTITUTIONID);


               INSERT INTO AFFILIATION (
                                           ORG,
                                           lang,
                                           AFFILIATION_ID,
                                           AWARDEEINSTITUTION_ID
                          )
                 VALUES   (
                              P_INDEXEDNAME,
                              'en',
                              AFFILIATIONID_SEQ.NEXTVAL,
                              V_AWARDEEINSTITUTIONID
                          );
            END IF;
         END IF;
      END IF;
           SELECT   AWARD_ID,
                    AWARDEES_ID,
                    AWARDEE_ID,
                    TYPE,
                    VALUE,
                    SCOPUSAUTHORID,
                    externalResearcherIdentifier,
                    ORCID,
                    INDEXEDNAME,
                    GIVENNAME,
                    INITIALS,
                    SURNAME,
                    CURRENCY,
                    AMOUNT_TEXT,
                    (CASE WHEN FLAG > 0 THEN 1 ELSE 0 END) FLAG
             FROM   (SELECT   A.AWARD_ID,
                              A.AWARDEES_ID,
                              B.AWARDEE_ID,
                              B.TYPE,
                              d.VALUE,
                              B.SCOPUSAUTHORID,
                              B.externalResearcherIdentifier,
                              B.ORCID,
                              INDEXEDNAME,
                              GIVENNAME,
                              INITIALS,
                              SURNAME,
                              CURRENCY,
                              AMOUNT_TEXT,
                              (SELECT   COUNT(1)
                                 FROM   AWARDEEINSTITUTION
                                WHERE   AWARDEE_ID = B.AWARDEE_ID)
                                 FLAG
                       FROM   AWARDEES A,
                              AWARDEE B,
                              AWARDEENAME C,
                              SCI_AWARDEETYPETYPE d,  amount am
                      WHERE       A.AWARDEES_ID = B.AWARDEES_ID
                              AND d.CODE = B.TYPE
                              and AM.AWARDEE_ID= B.AWARDEE_ID
                              AND B.AWARDEE_ID = C.AWARDEE_ID
                              AND a.AWARD_ID = V_ID) t
         ORDER BY   AWARDEE_ID DESC;
   
     
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_AW_AWARDEEINSDEL_50` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_AW_AWARDEEINSDEL_50`(
   P_WORKFLOWID           INTEGER,
   P_INSDEL               INTEGER,
   P_TYPE                 VARCHAR(4000),
   P_SCOPUSAUTHORID       INTEGER,
   P_externalRes_Id       VARCHAR(4000),
   P_ORCID                VARCHAR(4000),
   P_INDEXEDNAME          VARCHAR(4000),
   P_GIVENNAME            VARCHAR(4000),
   P_INITIALS             VARCHAR(4000),
   P_SURNAME              VARCHAR(4000),
   p_AWARDEE_ID           INTEGER,
   p_currency             VARCHAR(4000) ,
   p_amount               INTEGER,
   P_link                 VARCHAR(4000),
   P_DUNS                 VARCHAR(4000),
   P_ROR                 VARCHAR(4000),
   P_WIKIDATA            VARCHAR(4000)
   )
BEGIN
   DECLARE V_ID                     INTEGER;
   DECLARE V_MODULEID               INTEGER;
   DECLARE V_AWARDEESID             INTEGER;
   DECLARE V_AWARDEEID              INTEGER;
   DECLARE V_INSCOUNT               INTEGER;
   DECLARE v_delcount               INTEGER;
   DECLARE V_AWARDEEINSTITUTIONID   INTEGER;
   DECLARE l_awrdcount              INTEGER;
   DECLARE l_awardees_id            INTEGER;
   DECLARE l_awaree_cnt             INTEGER;
   DECLARE V_INDEXCHK               INTEGER;   
   DECLARE l_amt_cnt                integer;
   DECLARE V_AWARDEE_NAME_ID_SEQ    INTEGER;
   
   SELECT   ID, MODULEID
     INTO   V_ID, V_MODULEID
     FROM   SCI_WORKFLOW
    WHERE   WORKFLOWID = P_WORKFLOWID;

 SELECT   COUNT(1)
     INTO   V_INDEXCHK
     FROM   (SELECT   TRIM(LEADING CHAR (9 USING ASCII) FROM TRIM (INDEXEDNAME)) INDEXEDNAME
               FROM   AWARDEENAME
              WHERE   AWARDEE_ID IN
                            (SELECT   AWARDEE_ID
                               FROM   AWARDEENAME
                              WHERE   AWARDEE_ID IN
                                            (SELECT   AWARDEE_ID
                                               FROM   AWARDEE
                                              WHERE   AWARDEES_ID IN
                                                            (SELECT
      AWARDEES_ID
                                                               FROM   AWARDEES
                                                              WHERE   AWARD_ID
      =
                                                                         V_ID)
      ))
                      AND INDEXEDNAME LIKE '%' or CONCAT(IFNULL(P_INDEXEDNAME, '') , '%')) T
    WHERE   INDEXEDNAME = P_INDEXEDNAME;

   IF V_INDEXCHK  <= 0
   THEN
      SELECT   COUNT(*)
        INTO   l_awrdcount
        FROM   AWARDEES
       WHERE   AWARD_ID = V_ID;

      IF l_awrdcount > 0
      THEN
        SELECT   ifnull(AWARDEES_ID,0)
              INTO   l_awardees_id
              FROM   AWARDEES
             WHERE   AWARD_ID = V_ID;
             IF P_TYPE in ( 'PI') 
			THEN
            SELECT   COUNT(*)
              INTO   l_awaree_cnt
              FROM   AWARDEE
             WHERE   AWARDEES_ID = l_awardees_id AND TYPE = P_TYPE;
            
            SELECT   COUNT(*)
              INTO   l_awaree_cnt
              FROM   AWARDEE
             WHERE   AWARDEES_ID = l_awardees_id AND TYPE in ( 'PI', 'institution');

            END IF;
      
      IF P_INSDEL = 0
      THEN
         SELECT   COUNT(*)
           INTO   V_INSCOUNT
           FROM   AWARDEES
          WHERE   AWARD_ID = V_ID;

         IF V_INSCOUNT = 0
         THEN
         SELECT   AWARDEESID_SEQ.NEXTVAL INTO V_AWARDEESID FROM DUAL;

            INSERT INTO AWARDEES (AWARDEES_ID, AWARD_ID)
              VALUES   (V_AWARDEESID, V_ID);
         ELSE
            SELECT   AWARDEES_ID
              INTO   V_AWARDEESID
              FROM   AWARDEES
             WHERE   AWARD_ID = V_ID;
         END IF;



         SELECT   AWARDEEID_SEQ.NEXTVAL INTO V_AWARDEEID FROM DUAL;
         SELECT AWARDEE_NAME_ID_SEQ.NEXTVAL  INTO v_awardee_name_id_seq FROM DUAL;
INSERT
INTO AWARDEE
  (
    TYPE,
    SCOPUSAUTHORID,
    AWARDEE_ID,
    AWARDEES_ID,
    NAME,
    AWARDEEAFFILIATIONID,
    ACTIVITYTYPE,
    DEPARTMENTNAME,
    FBORGANIZATIONID,
    LINK,
    DUNS,
    ROR,
    WIKIDATA,
    VATNUMBER
  )
  VALUES
  (
    P_TYPE,
    P_SCOPUSAUTHORID,
    V_AWARDEEID,
    V_AWARDEESID,
    P_GIVENNAME,
    P_INITIALS,
    P_SURNAME,
    P_INDEXEDNAME,
    P_ORCID,
    P_link,
    P_DUNS,
    P_ROR,
    P_WIKIDATA,
    P_externalRes_Id
  );
  IF p_INDEXEDNAME IS NOT NULL and 1=2
         THEN
            INSERT INTO AWARDEENAME (INDEXEDNAME,
                                     GIVENNAME,
                                     INITIALS,
                                     SURNAME,
                                     AWARDEE_ID,
                                      AWADEENAME_ID,
                                     LANG)
              VALUES   (p_INDEXEDNAME,
                        p_GIVENNAME,
                        p_INITIALS,
                        p_SURNAME,
                        V_AWARDEEID,
                        v_awardee_name_id_seq,
                      'en'
                        );
         END IF;

         select count(*) into l_amt_cnt from AMOUNT where AWARDEE_ID= V_AWARDEEID;

         if l_amt_cnt=0 then
            IF p_amount < 1 OR p_amount is null THEN
               INSERT INTO  AMOUNT(CURRENCY,AMOUNT_TEXT, AWARD_ID,AWARDEE_ID)
                                   VALUES('USD',p_amount, V_ID,V_AWARDEEID);
            ELSE
               INSERT INTO  AMOUNT(CURRENCY,AMOUNT_TEXT, AWARD_ID,AWARDEE_ID)
                                   VALUES(p_currency,p_amount, V_ID,
      V_AWARDEEID);
            END IF;
         end if ;
 SELECT   AWARDEEINSTITUTIONID_SEQ.NEXTVAL
           INTO   V_AWARDEEINSTITUTIONID
           FROM   DUAL;
         INSERT INTO AWARDEEINSTITUTION (AWARDEE_ID, AWARDEEINSTITUTION_ID)
           VALUES   (V_AWARDEEID, V_AWARDEEINSTITUTIONID);
         IF p_type = 'institution'
         THEN
            INSERT INTO AFFILIATION (
                                        ORG,
                                        AFFILIATION_ID,
                                        AWARDEEINSTITUTION_ID,lang
                       )
              VALUES   (
                           P_INDEXEDNAME,
                           AFFILIATIONID_SEQ.NEXTVAL,
                           V_AWARDEEINSTITUTIONID,'en'
                       );
         ELSE
            INSERT INTO AFFILIATION (
                                        ORG,
                                        lang,
                                        AFFILIATION_ID,
                                        AWARDEEINSTITUTION_ID
                       )
              VALUES   (
                           'Not Available',
                           'en',
                           AFFILIATIONID_SEQ.NEXTVAL,
                           V_AWARDEEINSTITUTIONID
                       );

         END IF;
      ELSEIF P_INSDEL = 1
      THEN
         SELECT   AWARDEES_ID
           INTO   v_AWARDEESID
           FROM   awardee
          WHERE   AWARDEE_ID = p_AWARDEE_ID;

         DELETE FROM   AWARDEENAME
               WHERE   AWARDEE_ID = p_AWARDEE_ID;

         DELETE FROM   telephone
               WHERE   AFFILIATION_ID IN
                             (SELECT   AFFILIATION_ID
                                FROM   AFFILIATION
                               WHERE   AWARDEEINSTITUTION_ID IN
                                             (SELECT   AWARDEEINSTITUTION_ID
                                                FROM   AWARDEEINSTITUTION
                                               WHERE   AWARDEE_ID =
                                                          p_AWARDEE_ID));


         DELETE FROM   fax
               WHERE   AFFILIATION_ID IN
                             (SELECT   AFFILIATION_ID
                                FROM   AFFILIATION
                               WHERE   AWARDEEINSTITUTION_ID IN
                                             (SELECT   AWARDEEINSTITUTION_ID
                                                FROM   AWARDEEINSTITUTION
                                               WHERE   AWARDEE_ID =
                                                          p_AWARDEE_ID));
         DELETE FROM   address
               WHERE   AFFILIATION_ID IN
                             (SELECT   AFFILIATION_ID
                                FROM   AFFILIATION
                               WHERE   AWARDEEINSTITUTION_ID IN
                                             (SELECT   AWARDEEINSTITUTION_ID
                                                FROM   AWARDEEINSTITUTION
                                               WHERE   AWARDEE_ID =
                                                          p_AWARDEE_ID));


         DELETE FROM   AWARDADDRESS
               WHERE   AFFILIATION_ID IN
                             (SELECT   AFFILIATION_ID
                                FROM   AFFILIATION
                               WHERE   AWARDEEINSTITUTION_ID IN
                                             (SELECT   AWARDEEINSTITUTION_ID
                                                FROM   AWARDEEINSTITUTION
                                               WHERE   AWARDEE_ID =
                                                          p_AWARDEE_ID));

         DELETE FROM   AFFILIATION
               WHERE   AWARDEEINSTITUTION_ID IN
                             (SELECT   AWARDEEINSTITUTION_ID
                                FROM   AWARDEEINSTITUTION
                               WHERE   AWARDEE_ID = p_AWARDEE_ID);


         DELETE FROM   AWARDEEINSTITUTION
               WHERE   AWARDEE_ID = p_AWARDEE_ID;
                DELETE FROM   amount
               WHERE   AWARDEE_ID = p_AWARDEE_Id;
            delete from   AWARDEENAME_AFTER_UPDATE
              WHERE   AWARDEE_ID = p_AWARDEE_ID;
        
         DELETE FROM   awardee
               WHERE   AWARDEE_ID = p_AWARDEE_ID;



         SELECT   COUNT(*)
           INTO   v_delcount
           FROM   awardee
          WHERE   AWARDEEs_ID = v_AWARDEESID;

         IF v_delcount = 0
         THEN
            DELETE FROM   awardees
                  WHERE   AWARDEEs_ID = v_AWARDEESID;
         END IF;
      ELSEIF P_INSDEL = 2
      THEN
         UPDATE   awardee
            SET   TYPE = p_TYPE, SCOPUSAUTHORID = p_SCOPUSAUTHORID,externalresearcheridentifier=p_externalres_id,orcid=p_orcid
          WHERE   AWARDEE_ID = p_AWARDEE_ID;


         UPDATE   AWARDEENAME
            SET   INDEXEDNAME = p_INDEXEDNAME,
                  GIVENNAME = p_GIVENNAME,
                  INITIALS = p_INITIALS,
                  SURNAME = p_SURNAME
          WHERE   AWARDEE_ID = p_AWARDEE_ID;
            UPDATE   amount
            SET   CURRENCY = p_currency, AMOUNT_TEXT = p_amount
          WHERE   AWARDEE_ID = p_AWARDEE_ID;
           

         IF p_type = 'institution'
         THEN
            SELECT   COUNT(*)
              INTO   V_INSCOUNT
              FROM   awardeeinstitution
             WHERE   awardee_id = p_AWARDEE_ID;

            IF V_INSCOUNT > 0
            THEN
               SELECT   AWARDEEINSTITUTION_ID
                 INTO   V_AWARDEEINSTITUTIONID
                 FROM   awardeeinstitution
                WHERE   awardee_id = p_AWARDEE_ID;

               UPDATE   AFFILIATION
                  SET   org = P_INDEXEDNAME
                WHERE   AWARDEEINSTITUTION_ID = V_AWARDEEINSTITUTIONID;
            ELSE
               SELECT   AWARDEEINSTITUTIONID_SEQ.NEXTVAL
                 INTO   V_AWARDEEINSTITUTIONID
                 FROM   DUAL;

               INSERT INTO AWARDEEINSTITUTION (
                                                  AWARDEE_ID,
                                                  AWARDEEINSTITUTION_ID
                          )
                 VALUES   (V_AWARDEEID, V_AWARDEEINSTITUTIONID);


               INSERT INTO AFFILIATION (
                                           ORG,
                                           lang,
                                           AFFILIATION_ID,
                                           AWARDEEINSTITUTION_ID
                          )
                 VALUES   (
                              P_INDEXEDNAME,
                              'en',
                              AFFILIATIONID_SEQ.NEXTVAL,
                              V_AWARDEEINSTITUTIONID
                          );
            END IF;

         END IF;
      END IF;

       SELECT  AWARD_ID,
                    AWARDEES_ID,
                    AWARDEE_ID,
                    TYPE,
                    VALUE,
                    SCOPUSAUTHORID,
                    externalResearcherIdentifier,
                    ORCID,
                     activityType,
                     awardeeAffiliationId,
                    departmentName,
                    FBORGANIZATIONID,
                    link,
                    name,
                    ROR,
                    DUNS,
                    VATNUMBER,
                    WIKIDATA,
                    INDEXEDNAME,
                    GIVENNAME,
                    INITIALS,
                    SURNAME,
                    CURRENCY,
                    AMOUNT_TEXT,
                    (CASE WHEN FLAG > 0 THEN 1 ELSE 0 END) FLAG
             FROM   (SELECT   A.AWARD_ID,
                              A.AWARDEES_ID,
                              B.AWARDEE_ID,
                              B.TYPE,
                              d.VALUE,
                              B.SCOPUSAUTHORID,
                              B.externalResearcherIdentifier,
                              B.ORCID,
                              activityType,
                              awardeeAffiliationId,
                              departmentName,
                              B.FBORGANIZATIONID,
                              B.link,
                              B.name,
                              B.ROR,
                              B.DUNS,
                              B.VATNUMBER,
                              B.WIKIDATA,
                              INDEXEDNAME,
                              GIVENNAME,
                              INITIALS,
                              SURNAME,
                              CURRENCY,
                              AMOUNT_TEXT,
                              (SELECT   COUNT (1)
                                 FROM   AWARDEEINSTITUTION
                                WHERE   AWARDEE_ID = B.AWARDEE_ID)
                                 FLAG
                       FROM   AWARDEES A,
                              AWARDEE B,
                              AWARDEENAME C,
                              SCI_AWARDEETYPETYPE d,  amount am
                      WHERE       A.AWARDEES_ID = B.AWARDEES_ID
                              AND d.CODE = B.TYPE
                              and AM.AWARDEE_ID= B.AWARDEE_ID
                              AND B.AWARDEE_ID = C.AWARDEE_ID
                              AND a.AWARD_ID = V_ID) T
         ORDER BY   AWARDEE_ID DESC;
   END IF;
end IF;


END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_Aw_awardeelist50` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_Aw_awardeelist50`(
   P_WORKFLOWID       INTEGER
)
BEGIN
   DECLARE V_ID         INTEGER;
   DECLARE V_MODULEID   INTEGER;
 
  SELECT   ID, MODULEID
     INTO   V_ID, V_MODULEID
     FROM   SCI_WORKFLOW
    WHERE   WORKFLOWID = P_WORKFLOWID;



  
        SELECT   AWARD_ID,
                    AWARDEES_ID,
                    AWARDEE_ID,
                    TYPE,
                    VALUE,
                    SCOPUSAUTHORID,
                    externalResearcherIdentifier,
                    ORCID,
                     activityType,
                     awardeeAffiliationId,
                    departmentName,
                    FBORGANIZATIONID,
                    link,
                    name,
                    ROR,
                    VATNUMBER,
                    WIKIDATA,
                    INDEXEDNAME,
                    GIVENNAME,
                    INITIALS,
                    SURNAME,
                    CURRENCY,
                    AMOUNT_TEXT,
                    (CASE WHEN FLAG > 0 THEN 1 ELSE 0 END) FLAG
             FROM   (SELECT   A.AWARD_ID,
                              A.AWARDEES_ID,
                              B.AWARDEE_ID,
                              B.TYPE,
                              d.VALUE,
                              B.SCOPUSAUTHORID,
                              B.externalResearcherIdentifier,
                              B.ORCID,
                              activityType,
                              awardeeAffiliationId,
                              departmentName,
                              B.FBORGANIZATIONID,
                              B.link,
                              B.name,
                              B.ROR,
                              B.VATNUMBER,
                              B.WIKIDATA,
                              INDEXEDNAME,
                              GIVENNAME,
                              INITIALS,
                              SURNAME,
                              CURRENCY,
                              AMOUNT_TEXT,
                              (SELECT   COUNT (1)
                                 FROM   AWARDEEINSTITUTION
                                WHERE   AWARDEE_ID = B.AWARDEE_ID)
                                 FLAG
                       FROM   AWARDEES A,
                              AWARDEE B,
                              AWARDEENAME C,
                              SCI_AWARDEETYPETYPE d,  amount am
                      WHERE       A.AWARDEES_ID = B.AWARDEES_ID
                              AND d.CODE = B.TYPE
                              and AM.AWARDEE_ID= B.AWARDEE_ID
                              AND B.AWARDEE_ID = C.AWARDEE_ID
                              AND a.AWARD_ID = V_ID) T
         ORDER BY   AWARDEE_ID DESC;

   SELECT   * FROM SCI_AWARDEETYPETYPE where code not in ('PI', 'coPI', 'institution');
   
           SELECT code, CONCAT(IFNULL(VALUE, '') , ' (' , ifnull(code, '') , ')') AS VALUE
           FROM sci_currencytype;
  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_aw_awexist` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_aw_awexist`(
	p_fundingbodyid       INTEGER,
	p_taskid              INTEGER,
	p_updateflag          INTEGER,
	p_userid              INTEGER
)
BEGIN
	DECLARE	v_cycle     INTEGER;
	DECLARE l_awardid   INTEGER;
    
    SELECT count(AWARDID) INTO l_awardid FROM USERASSIGNMENT WHERE USERID = p_userid AND MODULEID = 4 AND ROWNUM = 1;
    
    IF p_updateflag = 0
	THEN
		IF l_awardid = 0
		THEN
			SELECT   workflowid,
                     award_id,
                     fundingbodyawardid,
                     NAME,
                     op.id
              FROM   award op, sci_workflow sw,award_master om
             WHERE       fundingbody_id = p_fundingbodyid
                     AND op.award_id = sw.ID
                     And OM.awardID = op.award_id
                     AND moduleid = 4
                     AND sw.CYCLE = 0
                     And om.statuscode in (1,2)
                     AND taskid = p_taskid
                     AND COMPLETEDDATE IS NULL
                     AND NVL (statusid, 0) NOT IN (8, 7, 11,45)
                     AND NOT EXISTS
                           (SELECT   1
                              FROM   sci_workflow
                             WHERE       ID = sw.ID
                                     AND CYCLE = sw.CYCLE
                                     AND SEQUENCE < sw.SEQUENCE
                                     AND completeddate IS NULL)
            UNION ALL
            SELECT   WORKFLOWID,
                     AWARDID,
                     NULL FUNDINGBODYOPPORTUNITYID,
                     AWARDNAME name,
                     NULL id
              FROM   award_master om, sci_workflow sw
             WHERE       OM.awardID = sw.id
                     AND OM.CYCLE = sw.cycle
                     AND sw.taskid = p_taskid
                     AND sw.MODULEID = 4
                     AND FUNDINGBODYID = P_FUNDINGBODYID
                     AND isautomated = 1
                     AND om.cycle = 0
                     AND statuscode = 1
                     AND NVL (STATUSID, 0) NOT IN (7, 8, 11,45)
                     AND COMPLETEDDATE IS NULL
                     AND NOT EXISTS (SELECT   1
                                       FROM   AWARD
                                      WHERE   AWARD_ID = om.AWARDID)
                     AND NOT EXISTS
                           (SELECT   1
                              FROM   sci_workflow
                             WHERE       ID = sw.ID
                                     AND CYCLE = sw.CYCLE
                                     AND SEQUENCE < sw.SEQUENCE
                                     AND completeddate IS NULL)
            ORDER BY   name;
        ELSE
			SELECT   workflowid,
                     award_id,
                     fundingbodyawardid,
                     NAME,
                     op.id
              FROM   award op, sci_workflow sw,award_master om
             WHERE       fundingbody_id = p_fundingbodyid
                     AND op.award_id = sw.ID
                     And OM.awardID = op.award_id
                     AND moduleid = 4
                     AND sw.CYCLE = 0
                     And om.statuscode in (1,2)
                     AND taskid = p_taskid
                     AND op.AWARD_ID IN
                              (SELECT   AWARDID
                                 FROM   USERASSIGNMENT
                                WHERE   USERID = p_userid AND MODULEID = 4)
                     AND COMPLETEDDATE IS NULL
                     AND NVL (statusid, 0) NOT IN (8, 7,45)
                     AND NOT EXISTS
                           (SELECT   1
                              FROM   sci_workflow
                             WHERE       ID = sw.ID
                                     AND CYCLE = sw.CYCLE
                                     AND SEQUENCE < sw.SEQUENCE
                                     AND completeddate IS NULL)
            UNION ALL
            SELECT   WORKFLOWID,
                     AWARDID,
                     NULL FUNDINGBODYOPPORTUNITYID,
                     AWARDNAME name,
                     NULL id
              FROM   award_master om, sci_workflow sw
             WHERE       OM.awardID = sw.id
                     AND OM.CYCLE = sw.cycle
                     AND sw.taskid = p_taskid
                     AND sw.MODULEID = 4
                     AND FUNDINGBODYID = P_FUNDINGBODYID
                     AND isautomated = 1
                     AND om.cycle = 0
                     AND statuscode = 1
                     AND NVL (STATUSID, 0) NOT IN (7, 8,45)
                     AND om.AWARDID IN
                              (SELECT   AWARDID
                                 FROM   USERASSIGNMENT
                                WHERE   USERID = p_userid AND MODULEID = 4)
                     AND COMPLETEDDATE IS NULL
                     AND NOT EXISTS (SELECT   1
                                       FROM   AWARD
                                      WHERE   AWARD_ID = om.AWARDID)
                     AND NOT EXISTS
                           (SELECT   1
                              FROM   sci_workflow
                             WHERE       ID = sw.ID
                                     AND CYCLE = sw.CYCLE
                                     AND SEQUENCE < sw.SEQUENCE
                                     AND completeddate IS NULL)
            ORDER BY   name;
        END IF;
    END IF;
    
    IF p_updateflag = 1
	THEN
		IF l_awardid = 0
		THEN
			SELECT   workflowid,
                    award_id,
                    fundingbodyawardid,
                    NAME,
                    op.id
                FROM   award op, sci_workflow sw,award_master om
                WHERE       fundingbody_id = p_fundingbodyid
                    AND op.award_id = sw.ID
                     And OM.awardID = op.award_id
                    AND moduleid = 4
                    And om.statuscode in (1,2)
                    AND taskid = p_taskid
                    AND sw.CYCLE > 0
                    AND NVL (statusid, 0) NOT IN (8, 7,45)
                    AND NOT EXISTS
                          (SELECT   1
                             FROM   sci_workflow
                            WHERE       ID = sw.ID
                                    AND CYCLE = sw.CYCLE
                                    AND SEQUENCE < sw.SEQUENCE
                                    AND completeddate IS NULL)
                ORDER BY   name;
        ELSE
			SELECT   workflowid,
                    award_id,
                    fundingbodyawardid,
                    NAME,
                    op.id
                FROM   award op, sci_workflow sw,award_master om
                WHERE       fundingbody_id = p_fundingbodyid
                    AND op.award_id = sw.ID
                    AND moduleid = 4
                    And OM.awardID = op.award_id
                    And om.statuscode in (1,2)
                    AND taskid = p_taskid
                    AND sw.CYCLE > 0
                    AND NVL (statusid, 0) NOT IN (8, 7,45)
                    AND op.award_id IN
                              (SELECT   AWARDID
                                 FROM   USERASSIGNMENT
                                WHERE   USERID = p_userid AND MODULEID = 4)
                    AND NOT EXISTS
                          (SELECT   1
                             FROM   sci_workflow
                            WHERE       ID = sw.ID
                                    AND CYCLE = sw.CYCLE
                                    AND SEQUENCE < sw.SEQUENCE
                                    AND completeddate IS NULL)
                ORDER BY   name;
        END IF;
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_AW_AWNEW` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_AW_AWNEW`(
 P_FUNDINGBODYID       INTEGER,
   P_USERID              INTEGER
)
BEGIN
   DECLARE V_NULLCOUNT    INTEGER;
   DECLARE V_AWARDID      INTEGER;
   DECLARE V_WORKFLOWID   INTEGER;
   DECLARE V_TEMPLATEID   INTEGER;
   DECLARE x_WORKFLOWID 	INTEGER;
   
   SELECT   COUNT( * )
     INTO   V_NULLCOUNT
     FROM   AWARD_MASTER OM, SCI_WORKFLOW SW
    WHERE       FUNDINGBODYID = P_FUNDINGBODYID
            AND OM.AWARDID = SW.ID
            AND AWARDNAME IS NULL
            AND SW.TASKID = 1
            AND STATUSID IS NULL;

   IF V_NULLCOUNT > 0
   THEN
      SELECT   AWARDID, WORKFLOWID
        INTO   V_AWARDID, x_WORKFLOWID
        FROM   AWARD_MASTER OM, SCI_WORKFLOW SW
       WHERE       FUNDINGBODYID = P_FUNDINGBODYID
               AND OM.AWARDID = SW.ID
               AND AWARDNAME IS NULL
               AND STATUSID IS NULL
               AND SW.TASKID = 1
      LIMIT 1;

      UPDATE   SCI_WORKFLOW
         SET   STARTDATE = SYSDATE(), STARTBY = P_USERID, STATUSID = 7
       WHERE   WORKFLOWID = x_WORKFLOWID AND STATUSID IS NULL;
   ELSEIF V_NULLCOUNT = 0
   THEN

      SELECT   Awardid_SEQ.NEXTVAL INTO V_AWARDID FROM DUAL;
   
      SELECT   TEMPLATEID
        INTO   V_TEMPLATEID
        FROM   SCI_DEFAULTTEMPLATE
       WHERE   ACTIVE = 1 AND MODULEID = 4;

      INSERT INTO award_MASTER (AWARDID,
                                FUNDINGBODYID,
                                CREATEDBY,
                                CYCLE,
                                STATUSCODE)
        VALUES   (V_AWARDID,
                  P_FUNDINGBODYID,
                  P_USERID,
                  0,
                  1);
/*
      DECLARE I CURSOR FOR SELECT TASKID FROM   SCI_WORKFLOWTEMPLATE WHERE  TEMPLATEID IN (SELECT  TEMPLATEID FROM SCI_DEFAULTTEMPLATE WHERE   ACTIVE = 1 AND MODULEID = 4);
      OPEN I;
      FETCH I INTO TempVar;
      WHILE NOT_FOUND=0
      DO
         SELECT   WORKFLOW_SEQ.NEXTVAL INTO V_WORKFLOWID FROM DUAL;

         IF TempVar = 1
         THEN
            SET x_WORKFLOWID = V_WORKFLOWID;

            INSERT INTO SCI_WORKFLOW (WORKFLOWID,
                                      MODULEID,
                                      ID,
                                      CYCLE,
                                      TEMPLATEID,
                                      TASKID,
                                      SEQUENCE,
                                      STARTDATE,
                                      STARTBY,
                                      STATUSID)
              VALUES   (V_WORKFLOWID,
                        4,
                        V_AWARDID,
                        0,
                        V_TEMPLATEID,
                        I.TASKID,
                        I.SEQUENCE,
                        SYSDATE(),
                        P_USERID,
                        7);
         ELSE
            INSERT INTO SCI_WORKFLOW (WORKFLOWID,
                                      MODULEID,
                                      ID,
                                      CYCLE,
                                      TEMPLATEID,
                                      TASKID,
                                      SEQUENCE
                                      )
              VALUES   (V_WORKFLOWID,
                        4,
                        V_AWARDID,
                        0,
                        V_TEMPLATEID,
                        I.TASKID,
                        I.SEQUENCE);
         END IF;
      FETCH I INTO A;
      END WHILE;
      CLOSE I;
      */
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_aw_awradins50` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_aw_awradins50`(
   p_workflowid               INTEGER,
   p_FUNDINGBODYAWARDID       VARCHAR(4000),
   p_TYPE                     VARCHAR(4000),
   p_TRUSTING                 VARCHAR(4000),
   p_COLLECTIONCODE           VARCHAR(4000),
   p_HIDDEN                   VARCHAR(4000),
   p_NAME                     VARCHAR(4000) ,
   p_STARTDATE                DATETIME,
   p_LASTAMENDEDDATE          DATETIME,
   p_ENDDATE                  DATETIME,
   p_ABSTRACT                 VARCHAR(4000) ,
   p_url                      VARCHAR(4000),
   p_mode                     INTEGER, 
   p_recordsource VARCHAR(4000) ,
   p_AwardNoticeDate           datetime,
   p_PublishedDate           datetime 
   )
BEGIN
   DECLARE V_MODULEID             INTEGER;
   DECLARE V_ID                   INTEGER;
   DECLARE V_FUNDINGBODYID        INTEGER;
   DECLARE v_REVISIONHISTORYID    INTEGER;
   --  DECLARE E_ERROR exception;
   DECLARE V_TRUSTING             VARCHAR (200);
   DECLARE v_preferedorgname      LONGTEXT;
   DECLARE v_type                 VARCHAR (2000);
   DECLARE v_RELATEDORGS_ID       INTEGER;
   DECLARE v_cnt                  INTEGER;
   DECLARE l_fundingbodyawardid   INTEGER;
   DECLARE l_awardid              INTEGER;
   DECLARE l_tran_id              decimal;
   -- DECLARE l_col_mast_ot          sci_language_common_ot  DEFAULT  sci_language_common_ot ();
   -- DECLARE l_col_mast_ntt         sci_language_common_ntt DEFAULT  sci_language_common_ntt () ;

    SELECT   * FROM   award WHERE   AWARD_ID = V_ID;
   INSERT INTO FROG VALUES(CONCAT(IFNULL(P_WORKFLOWID, '') , ' - ' , IFNULL(P_TYPE, '') , ' - ' , IFNULL(P_HIDDEN, '') , ' - ' , IFNULL(P_STARTDATE, '')), SYSDATE());

   SELECT   MODULEID, ID INTO   V_MODULEID, V_ID FROM   SCI_WORKFLOW WHERE   WORKFLOWID = P_WORKFLOWID;

   IF V_MODULEID = 4
   THEN
      SELECT   FUNDINGBODYID  INTO   V_FUNDINGBODYID FROM   award_MASTER WHERE   AWARDID = V_ID;
      SELECT   TRUSTING INTO   V_TRUSTING FROM   FUNDINGBODY WHERE   FUNDINGBODY_ID = V_FUNDINGBODYID;
   END IF;
   /*SET l_col_mast_ot.column_id = 6;
   SET l_col_mast_ot.column_desc = p_abstract;
   l_col_mast_ntt.EXTEND;
   l_col_mast_ntt (1) := l_col_mast_ot;
   SET l_col_mast_ot.column_id = 5;
   SET l_col_mast_ot.column_desc = p_name;
   l_col_mast_ntt.EXTEND;
   l_col_mast_ntt (2) := l_col_mast_ot; */
   IF p_mode = 0
   THEN
   SELECT   COUNT(*) INTO   l_fundingbodyawardid FROM   award a, award_master am WHERE       a.FUNDINGBODY_ID = AM.FUNDINGBODYID AND A.AWARD_ID = AM.AWARDID AND a.fundingbody_id = V_FUNDINGBODYID AND Upper(FUNDINGBODYAWARDID) = Upper(p_FUNDINGBODYAWARDID) 
            and not exists(select 1 from SCI_XMLDELIVERYDETAIL  where id=am.awardid and  am.statuscode=3 ) AND Upper(FUNDINGBODYAWARDID) <> Upper('Not Available');
      IF l_fundingbodyawardid < 0  
      THEN
         INSERT INTO award (FUNDINGBODY_ID, FUNDINGBODYAWARDID, TYPE, TRUSTING, COLLECTIONCODE, HIDDEN, NAME, STARTDATE, LASTAMENDEDDATE, ENDDATE, ABSTRACT, AWARD_ID, ID, RECORDSOURCE, AwardNoticeDate, PUBLISHEDDATE) VALUES   (v_FUNDINGBODYID, p_FUNDINGBODYAWARDID, p_TYPE, V_TRUSTING, p_COLLECTIONCODE, p_HIDDEN, p_NAME, p_STARTDATE,
                     p_LASTAMENDEDDATE, p_ENDDATE, p_ABSTRACT, v_id, v_id, P_RECORDSOURCE, p_AwardNoticeDate, p_PublishedDate);
         IF v_TYPE = 'gov'
         THEN
            SELECT   RELATEDORGS_SEQ.NEXTVAL INTO v_RELATEDORGS_ID FROM DUAL;

            INSERT INTO relatedorgs (HIERARCHY, RELATEDORGS_ID, award_ID)
              VALUES   ('lead', v_RELATEDORGS_ID, V_ID);

            INSERT INTO org (ORGDBID,  RELTYPE, ORG_TEXT, RELATEDORGS_ID)
              VALUES   (V_FUNDINGBODYID,  'fundedBy',  v_preferedorgname, v_RELATEDORGS_ID);

            SELECT   COUNT(1) INTO   v_cnt  FROM   org WHERE   RELATEDORGS_ID IN (SELECT   RELATEDORGS_ID FROM   relatedorgs WHERE   HIERARCHY = 'component' AND award_ID = V_ID);

            IF v_cnt > 0
            THEN
               SELECT   RELATEDORGS_SEQ.NEXTVAL INTO v_RELATEDORGS_ID FROM DUAL;

               INSERT INTO relatedorgs (  HIERARCHY, RELATEDORGS_ID, OPPORTUNITY_ID )
                 VALUES   ('component', v_RELATEDORGS_ID, V_ID);

               INSERT INTO org (ORGDBID, RELTYPE, ORG_TEXT, RELATEDORGS_ID)
                  SELECT   ORGDBID, RELTYPE,  ORG_TEXT, v_RELATEDORGS_ID FROM   org WHERE   RELATEDORGS_ID IN
                                 (SELECT   RELATEDORGS_ID FROM   relatedorgs WHERE   HIERARCHY = 'component' AND award_ID = V_ID);
            END IF;
         END IF;
     UPDATE   award_master SET   AWARDNAME = P_NAME, URL = p_url WHERE   AWARDID = V_ID;
     SELECT   REVISIONHISTORYID_SEQ.NEXTVAL INTO   v_REVISIONHISTORYID FROM   DUAL;

     INSERT INTO REVISIONHISTORY (STATUS, REVISIONHISTORY_ID, AWARD_ID) VALUES   ('new', v_REVISIONHISTORYID, V_ID);
     INSERT INTO CREATEDDATE ( VERSION, CREATEDDATE_TEXT,  REVISIONHISTORY_ID ) VALUES   (0, SYSDATE(), v_REVISIONHISTORYID);
   END IF;
   ELSEIF p_mode = 1
   THEN
      SELECT   COUNT(*)  INTO   l_awardid FROM   award WHERE fundingbody_id = V_FUNDINGBODYID
               AND AWARD_ID <> v_id AND FUNDINGBODYAWARDID = p_FUNDINGBODYAWARDID AND Upper(FUNDINGBODYAWARDID) <> Upper('Not Available');
      IF l_awardid = 0
      THEN
         UPDATE award SET   FUNDINGBODY_ID = v_FUNDINGBODYID, FUNDINGBODYAWARDID = p_FUNDINGBODYAWARDID, TYPE = p_TYPE, COLLECTIONCODE = p_COLLECTIONCODE,
                  HIDDEN = p_HIDDEN, NAME = p_NAME,  STARTDATE = p_STARTDATE, LASTAMENDEDDATE = p_LASTAMENDEDDATE, ENDDATE = p_ENDDATE,RECORDSOURCE = P_RECORDSOURCE,
                  AwardNoticeDate=p_AwardNoticeDate, PUBLISHEDDATE=p_PublishedDate WHERE   AWARD_ID = v_id;
		UPDATE   award_master  SET   AWARDNAME = P_NAME, URL = p_url WHERE   AWARDID = V_ID;
	END IF;
END IF;

      SELECT  * FROM   award WHERE   AWARD_ID = V_ID;
   END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_AW_FAXINSDEL` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_AW_FAXINSDEL`(
   P_AFFILIATIONID       INTEGER,
   P_INSDEL              INTEGER,  
   P_FAX                 VARCHAR(4000),
   X_FAX                 VARCHAR(4000)
)
BEGIN
   IF P_INSDEL = 0
   THEN
      INSERT INTO FAX (FAX_COLUMN, AFFILIATION_ID)
        VALUES   (P_FAX, P_AFFILIATIONID);
   ELSEIF P_INSDEL = 1
   THEN
      DELETE FROM   FAX
            WHERE   AFFILIATION_ID = P_AFFILIATIONID
                    AND IFNULL (FAX_COLUMN, '1xzsed6d5fe8g45bhj') =
                          IFNULL (P_FAX, '1xzsed6d5fe8g45bhj');
     ELSEIF P_INSDEL = 2
   THEN
      UPDATE   FAX
         SET   FAX_COLUMN = P_FAX
       WHERE   AFFILIATION_ID = P_AFFILIATIONID
               AND IFNULL (FAX_COLUMN, '1xzsed6d5fe8g45bhj') =
                     IFNULL (X_FAX, '1xzsed6d5fe8g45bhj');
   END IF;
      SELECT   *
        FROM   FAX
       WHERE   AFFILIATION_ID = P_AFFILIATIONID;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_AW_faxlist` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_AW_faxlist`(
   P_AFFILIATIONID       INTEGER
)
BEGIN
      SELECT   *
        FROM   fax
       WHERE   AFFILIATION_ID = P_AFFILIATIONID;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_AW_INSTITUTIONINSDEL41` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_AW_INSTITUTIONINSDEL41`(
   P_AWARDEEID                 INTEGER,
   P_INSDEL                    INTEGER, 
   P_SCOPUSINSTITUTIONID       INTEGER,
   P_ORG                       VARCHAR(4000),
   P_DEPT                      VARCHAR(4000),
   P_STARTDATE                 DATETIME,
   P_ENDDATE                   DATETIME,
   P_EMAIL                     VARCHAR(4000),
   P_WEBPAGE                   VARCHAR(4000),
   P_EXTAFFI_Id                VARCHAR(4000),
   P_AFFILIATION_ID            INTEGER  
)
BEGIN
   DECLARE V_INSCOUNT               INTEGER;
   DECLARE V_AWARDEEINSTITUTIONID   INTEGER;
   DECLARE DELCOUNT                 INTEGER;
   DECLARE v_count1                 INTEGER;
   DECLARE v_cnt                    INTEGER;
   DECLARE l_affiliationid_seq      INTEGER;
   DECLARE l_type                   varchar(50);
   IF P_INSDEL = 0
   THEN
      SELECT   COUNT(*)
        INTO   V_INSCOUNT
        FROM   AWARDEEINSTITUTION
       WHERE   AWARDEE_ID = P_AWARDEEID;

      -- ---------------------------------------
      IF v_inscount > 0
      THEN
         SELECT   AWARDEEINSTITUTION_ID
           INTO   V_AWARDEEINSTITUTIONID
           FROM   AWARDEEINSTITUTION
          WHERE   AWARDEE_ID = P_AWARDEEID;


         SELECT   COUNT(*)
           INTO   v_count1
           FROM   AFFILIATION
          WHERE       AWARDEEINSTITUTION_ID = V_AWARDEEINSTITUTIONID
                  AND ORG = 'Not Available'
                  AND SCOPUSINSTITUTIONID IS NULL
                  AND DEPT IS NULL
                  AND STARTDATE IS NULL
                  AND ENDDATE IS NULL
                  AND EMAIL IS NULL
                  AND WEBPAGE IS NULL
                  AND EXTERNALAFFILIATIONIDENTIFIER IS NULL;


         IF v_count1 > 0
         THEN
            UPDATE   AFFILIATION
               SET   SCOPUSINSTITUTIONID = P_SCOPUSINSTITUTIONID,
                     ORG = P_ORG,
                     DEPT = P_DEPT,
                     STARTDATE = P_STARTDATE,
                     ENDDATE = P_ENDDATE,
                     EMAIL = P_EMAIL,
                     WEBPAGE = P_WEBPAGE,
                     EXTERNALAFFILIATIONIDENTIFIER = P_EXTAFFI_Id
             WHERE       AWARDEEINSTITUTION_ID = V_AWARDEEINSTITUTIONID
                     AND ORG = 'Not Available'
                     AND SCOPUSINSTITUTIONID IS NULL
                     AND DEPT IS NULL
                     AND STARTDATE IS NULL
                     AND ENDDATE IS NULL
                     AND EMAIL IS NULL
                     AND WEBPAGE IS NULL
                     AND EXTERNALAFFILIATIONIDENTIFIER IS NULL;

                 SELECT   AWARDEE_ID,
                          AWARDEEINSTITUTION_ID,
                          AFFILIATION_ID,
                          SCOPUSINSTITUTIONID,
                          ORG,
                          DEPT,
                          STARTDATE,
                          ENDDATE,
                          EMAIL,
                          WEBPAGE,
                          EXTERNALAFFILIATIONIDENTIFIER,
                          (CASE WHEN FLAGPOHE > 0 THEN 1 ELSE 0 END) FLAGPOHE,
                          (CASE WHEN FLAGFAX > 0 THEN 1 ELSE 0 END) FLAGFAX,
                          (CASE WHEN FLAGADDRESS > 0 THEN 1 ELSE 0 END)
                             FLAGADDRESS
                   FROM   (SELECT   A.AWARDEE_ID,
                                    A.AWARDEEINSTITUTION_ID,
                                    B.AFFILIATION_ID,
                                    B.SCOPUSINSTITUTIONID,
                                    B.ORG,
                                    B.DEPT,
                                    B.STARTDATE,
                                    B.ENDDATE,
                                    B.EMAIL,
                                    B.WEBPAGE,
                                    B.EXTERNALAFFILIATIONIDENTIFIER,
                                    (SELECT   COUNT(*)
                                       FROM   TELEPHONE
                                      WHERE   AFFILIATION_ID = B.AFFILIATION_ID)
                                       FLAGPOHE,
                                    (SELECT   COUNT(*)
                                       FROM   FAX
                                      WHERE   AFFILIATION_ID = B.AFFILIATION_ID)
                                       FLAGFAX,
                                    (SELECT   COUNT(*)
                                       FROM   AWARDADDRESS
                                      WHERE   AFFILIATION_ID = B.AFFILIATION_ID)
                                       FLAGADDRESS
                             FROM   AWARDEEINSTITUTION A, AFFILIATION B
                            WHERE   A.AWARDEEINSTITUTION_ID =
                                       B.AWARDEEINSTITUTION_ID
                                    AND AWARDEE_ID = P_AWARDEEID) T
               ORDER BY   AFFILIATION_ID DESC;
         END IF;
      END IF;

      -- -----------------------------------------------

      IF V_INSCOUNT = 0
      THEN
         SELECT   AWARDEEINSTITUTIONID_SEQ.NEXTVAL
           INTO   V_AWARDEEINSTITUTIONID
           FROM   DUAL;

         INSERT INTO AWARDEEINSTITUTION (AWARDEE_ID, AWARDEEINSTITUTION_ID)
           VALUES   (P_AWARDEEID, V_AWARDEEINSTITUTIONID);
      ELSE
         SELECT   AWARDEEINSTITUTION_ID
           INTO   V_AWARDEEINSTITUTIONID
           FROM   AWARDEEINSTITUTION
          WHERE   AWARDEE_ID = P_AWARDEEID;
      END IF;


      SELECT   COUNT(1)
        INTO   v_cnt
        FROM   AFFILIATION
       WHERE   IFNULL (SCOPUSINSTITUTIONID, 0) = IFNULL (P_SCOPUSINSTITUTIONID, 0)
               AND TRIM(IFNULL (ORG, '0')) = TRIM(IFNULL (p_ORG, '0'))
               AND AWARDEEINSTITUTION_ID = V_AWARDEEINSTITUTIONID;

      IF v_cnt = 0
      THEN
         SELECT   AWARDEEINSTITUTIONID_SEQ.NEXTVAL
           INTO   V_AWARDEEINSTITUTIONID
           FROM   DUAL;

         SELECT   AFFILIATIONID_SEQ.NEXTVAL INTO l_affiliationid_seq FROM DUAL;

         INSERT INTO AFFILIATION (SCOPUSINSTITUTIONID,
                                  ORG,
                                  DEPT,
                                  STARTDATE,
                                  ENDDATE,
                                  EMAIL,
                                  WEBPAGE,
                                 EXTERNALAFFILIATIONIDENTIFIER,
                                  AFFILIATION_ID,
                                  AWARDEEINSTITUTION_ID)
           VALUES   (P_SCOPUSINSTITUTIONID,
                     P_ORG,
                     P_DEPT,
                     P_STARTDATE,
                     P_ENDDATE,
                     P_EMAIL,
                     P_WEBPAGE,
                     P_EXTAFFI_Id,
                     l_affiliationid_seq,
                     V_AWARDEEINSTITUTIONID);
         SELECT   TYPE
           INTO   l_type
           FROM   awardee
          WHERE   awardee_id = P_AWARDEEID;

         INSERT INTO org (RELTYPE,
                          ORG_TEXT,
                          LANG,
                          AFFLIATION_ID)
           VALUES   (l_type,
                     P_ORG,
                     'en',
                     l_affiliationid_seq);
      ELSE
         UPDATE   AFFILIATION
            SET   SCOPUSINSTITUTIONID = P_SCOPUSINSTITUTIONID,
                  ORG = P_ORG,
                  DEPT = P_DEPT,
                  STARTDATE = P_STARTDATE,
                  ENDDATE = P_ENDDATE,
                  EMAIL = P_EMAIL,
                  WEBPAGE = P_WEBPAGE,
                  EXTERNALAFFILIATIONIDENTIFIER=P_EXTAFFI_Id
          WHERE   IFNULL (SCOPUSINSTITUTIONID, 0) =
                     IFNULL (P_SCOPUSINSTITUTIONID, 0)
                  AND TRIM (IFNULL (ORG, '0')) = TRIM (IFNULL (p_ORG, '0'))
                  AND AWARDEEINSTITUTION_ID = V_AWARDEEINSTITUTIONID;
      END IF;
   ELSEIF P_INSDEL = 1
   THEN
      SELECT   AWARDEEINSTITUTION_ID
        INTO   V_AWARDEEINSTITUTIONID
        FROM   AFFILIATION
       WHERE   AFFILIATION_ID = P_AFFILIATION_ID;

      DELETE FROM   TELEPHONE
            WHERE   AFFILIATION_ID = p_AFFILIATION_ID;

      DELETE FROM   FAX
            WHERE   AFFILIATION_ID = p_AFFILIATION_ID;

      DELETE FROM   AWARDADDRESS
            WHERE   AFFILIATION_ID = p_AFFILIATION_ID;

      DELETE FROM   AFFILIATION
            WHERE   AFFILIATION_ID = p_AFFILIATION_ID;


      SELECT   COUNT(*)
        INTO   DELCOUNT
        FROM   AFFILIATION
       WHERE   AWARDEEINSTITUTION_ID = V_AWARDEEINSTITUTIONID;

      IF DELCOUNT = 0
      THEN
         DELETE FROM   AWARDEEINSTITUTION
               WHERE   AWARDEEINSTITUTION_ID = V_AWARDEEINSTITUTIONID;
      END IF;

   ELSEIF P_INSDEL = 2
   THEN
   
    
         SELECT   TYPE
           INTO   l_type
           FROM   awardee
          WHERE   awardee_id = P_AWARDEEID;

      UPDATE   AFFILIATION
         SET   SCOPUSINSTITUTIONID = P_SCOPUSINSTITUTIONID,
               ORG = P_ORG,
               DEPT = P_DEPT,
               STARTDATE = P_STARTDATE,
               ENDDATE = P_ENDDATE,
               EMAIL = P_EMAIL,
               WEBPAGE = P_WEBPAGE,
               EXTERNALAFFILIATIONIDENTIFIER=P_EXTAFFI_Id
       WHERE   AFFILIATION_ID = P_AFFILIATION_ID;
       
       update org set ORG_TEXT=P_ORG, RELTYPE=l_type
       where AFFLIATION_ID= P_AFFILIATION_ID;
   END IF;

    SELECT   AWARDEE_ID,
                 AWARDEEINSTITUTION_ID,
                 AFFILIATION_ID,
                 SCOPUSINSTITUTIONID,
                 ORG,
                 DEPT,
                 STARTDATE,
                 ENDDATE,
                 EMAIL,
                 WEBPAGE,
                 EXTERNALAFFILIATIONIDENTIFIER,
                 (CASE WHEN FLAGPOHE > 0 THEN 1 ELSE 0 END) FLAGPOHE,
                 (CASE WHEN FLAGFAX > 0 THEN 1 ELSE 0 END) FLAGFAX,
                 (CASE WHEN FLAGADDRESS > 0 THEN 1 ELSE 0 END) FLAGADDRESS
          FROM   (SELECT   A.AWARDEE_ID,
                           A.AWARDEEINSTITUTION_ID,
                           B.AFFILIATION_ID,
                           B.SCOPUSINSTITUTIONID,
                           B.ORG,
                           B.DEPT,
                           B.STARTDATE,
                           B.ENDDATE,
                           B.EMAIL,
                           B.WEBPAGE,
                           B.EXTERNALAFFILIATIONIDENTIFIER,
                           (SELECT   COUNT(*)
                              FROM   TELEPHONE
                             WHERE   AFFILIATION_ID = B.AFFILIATION_ID)
                              FLAGPOHE,
                           (SELECT   COUNT(*)
                              FROM   FAX
                             WHERE   AFFILIATION_ID = B.AFFILIATION_ID)
                              FLAGFAX,
                           (SELECT   COUNT(*)
                              FROM   AWARDADDRESS
                             WHERE   AFFILIATION_ID = B.AFFILIATION_ID)
                              FLAGADDRESS
                    FROM   AWARDEEINSTITUTION A, AFFILIATION B
                   WHERE   A.AWARDEEINSTITUTION_ID = B.AWARDEEINSTITUTION_ID
                           AND AWARDEE_ID = P_AWARDEEID) T
      ORDER BY   AFFILIATION_ID DESC;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_AW_INSTITUTIONINSDEL50` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_AW_INSTITUTIONINSDEL50`(
   P_AWARDEEID                 INTEGER,
   P_INSDEL                    INTEGER,
   P_SCOPUSINSTITUTIONID       INTEGER,
   P_ORG                       VARCHAR(4000),
   P_DEPT                      VARCHAR(4000),
   P_STARTDATE                 DATETIME,
   P_ENDDATE                   DATETIME,
   P_EMAIL                     VARCHAR(4000),
   P_WEBPAGE                   VARCHAR(4000),
   P_EXTAFFI_Id                VARCHAR(4000),   
   P_awardeePersonId                VARCHAR(4000),
   P_familyName                 VARCHAR(4000),
   P_fundingBodyPersonId                VARCHAR(4000),
   P_givenName                VARCHAR(4000),
   P_ORCID                VARCHAR(4000),
   P_initials                VARCHAR(4000),
   P_role                VARCHAR(4000),
   P_name                VARCHAR(4000),
   P_AFFILIATION_ID            INTEGER 
   )
BEGIN
   DECLARE V_INSCOUNT               INTEGER;
   DECLARE V_AWARDEEINSTITUTIONID   INTEGER;
   DECLARE DELCOUNT                 INTEGER;
   DECLARE v_count1                 INTEGER;
   DECLARE v_cnt                    INTEGER;
   DECLARE l_affiliationid_seq      INTEGER;
   DECLARE l_type                   varchar(50);
   
   IF P_INSDEL = 0
   THEN
      SELECT   COUNT(*)
        INTO   V_INSCOUNT
        FROM   AWARDEEINSTITUTION
       WHERE   AWARDEE_ID = P_AWARDEEID;

      IF v_inscount > 0
      THEN
         SELECT   AWARDEEINSTITUTION_ID
           INTO   V_AWARDEEINSTITUTIONID
           FROM   AWARDEEINSTITUTION
          WHERE   AWARDEE_ID = P_AWARDEEID;

         SELECT   COUNT(*)
           INTO   v_count1
           FROM   AFFILIATION
          WHERE       AWARDEEINSTITUTION_ID = V_AWARDEEINSTITUTIONID
                  AND ORG = 'Not Available'
                  AND SCOPUSINSTITUTIONID IS NULL
                  AND DEPT IS NULL
                  AND STARTDATE IS NULL
                  AND ENDDATE IS NULL
                  AND EMAIL IS NULL
                  AND WEBPAGE IS NULL
                  AND EXTERNALAFFILIATIONIDENTIFIER IS NULL;

         IF v_count1 > 0 
         THEN
            UPDATE   AFFILIATION
               SET   SCOPUSINSTITUTIONID = P_SCOPUSINSTITUTIONID,
                     ORG = P_ORG,
                     DEPT = P_DEPT,
                     STARTDATE = P_STARTDATE,
                     ENDDATE = P_ENDDATE,
                     EMAIL = P_EMAIL,
                     WEBPAGE = P_WEBPAGE,
                     EXTERNALAFFILIATIONIDENTIFIER = P_EXTAFFI_Id,
                      AWARDEEPERSONID=P_awardeePersonId,
    FAMILYNAME=P_familyName,
    FUNDINGBODYPERSONID=P_fundingBodyPersonId,
    GIVENNAME=P_givenName,
    ORCID=P_ORCID,
    INITIALS=P_initials,
    ROLE=P_role,
    NAME=P_name
             WHERE AWARDEEINSTITUTION_ID = V_AWARDEEINSTITUTIONID;
                SELECT   AWARDEE_ID,
                 AWARDEEINSTITUTION_ID,
                 AFFILIATION_ID,
                 SCOPUSINSTITUTIONID,
                 ORG,
                 DEPT,
                 STARTDATE,
                 ENDDATE,
                 EMAIL,
                 WEBPAGE,
                 EXTERNALAFFILIATIONIDENTIFIER,
                   FAMILYNAME,
    FUNDINGBODYPERSONID,
    GIVENNAME,
    ORCID,
    INITIALS,
    ROLE,
    NAME,
    (CASE WHEN FLAGPOHE > 0 THEN 1 ELSE 0 END) FLAGPOHE,
    (CASE WHEN FLAGFAX > 0 THEN 1 ELSE 0 END) FLAGFAX,
    (CASE WHEN FLAGADDRESS > 0 THEN 1 ELSE 0 END) FLAGADDRESS
          FROM   (SELECT   A.AWARDEE_ID,
                           A.AWARDEEINSTITUTION_ID,
                           B.AFFILIATION_ID,
                           B.SCOPUSINSTITUTIONID,
                           B.ORG,
                           B.DEPT,
                           B.STARTDATE,
                           B.ENDDATE,
                           B.EMAIL,
                           B.WEBPAGE,
                           B.EXTERNALAFFILIATIONIDENTIFIER,
                           B.AWARDEEPERSONID,
    B.FAMILYNAME,
    B.FUNDINGBODYPERSONID,
    B.GIVENNAME,
    B.ORCID,
    B.INITIALS,
    B.ROLE,
    B.NAME,
                           (SELECT   COUNT(*)
                              FROM   TELEPHONE
                             WHERE   AFFILIATION_ID = B.AFFILIATION_ID)
                              FLAGPOHE,
                           (SELECT   COUNT(*)
                              FROM   FAX
                             WHERE   AFFILIATION_ID = B.AFFILIATION_ID)
                              FLAGFAX,
                           (SELECT   COUNT(*)
                              FROM   AWARDADDRESS
                             WHERE   AFFILIATION_ID = B.AFFILIATION_ID)
                              FLAGADDRESS
                    FROM   AWARDEEINSTITUTION A, AFFILIATION B
                   WHERE   A.AWARDEEINSTITUTION_ID = B.AWARDEEINSTITUTION_ID
                           AND AWARDEE_ID = P_AWARDEEID) T
      ORDER BY   AFFILIATION_ID DESC;
         END IF;
      END IF;

      IF V_INSCOUNT = 0
      THEN
         SELECT   AWARDEEINSTITUTIONID_SEQ.NEXTVAL
           INTO   V_AWARDEEINSTITUTIONID
           FROM   DUAL;

         INSERT INTO AWARDEEINSTITUTION (AWARDEE_ID, AWARDEEINSTITUTION_ID)
           VALUES   (P_AWARDEEID, V_AWARDEEINSTITUTIONID);
      ELSE
         SELECT   AWARDEEINSTITUTION_ID
           INTO   V_AWARDEEINSTITUTIONID
           FROM   AWARDEEINSTITUTION
          WHERE   AWARDEE_ID = P_AWARDEEID;
      END IF;


      SELECT   COUNT(1)
        INTO   v_cnt
        FROM   AFFILIATION
       WHERE   IFNULL (SCOPUSINSTITUTIONID, 0) = IFNULL (P_SCOPUSINSTITUTIONID, 0)
               AND TRIM(IFNULL (ORG, '0')) = TRIM(IFNULL (p_ORG, '0'))
               AND AWARDEEINSTITUTION_ID = V_AWARDEEINSTITUTIONID;

      IF v_cnt = 0
      THEN
      IF v_inscount > 0
      THEN
         SELECT   AWARDEEINSTITUTION_ID
           INTO   V_AWARDEEINSTITUTIONID
           FROM   AWARDEEINSTITUTION
          WHERE   AWARDEE_ID = P_AWARDEEID;
          
          ELSE
          SELECT   AWARDEEINSTITUTIONID_SEQ.NEXTVAL
           INTO   V_AWARDEEINSTITUTIONID
           FROM   DUAL;
          END IF;
      
         

         SELECT   AFFILIATIONID_SEQ.NEXTVAL INTO l_affiliationid_seq FROM DUAL;

         INSERT INTO AFFILIATION (SCOPUSINSTITUTIONID,
                                  ORG,
                                  DEPT,
                                  STARTDATE,
                                  ENDDATE,
                                  EMAIL,
                                  WEBPAGE,
                                  EXTERNALAFFILIATIONIDENTIFIER,
                                  AFFILIATION_ID,
                                  AWARDEEINSTITUTION_ID,
                                  
                                  
    AWARDEEPERSONID,
    FAMILYNAME,
    FUNDINGBODYPERSONID,
    GIVENNAME,
    ORCID,
    INITIALS,
    ROLE,
    NAME,lang)
           VALUES   (P_SCOPUSINSTITUTIONID,
                     P_ORG,
                     P_DEPT,
                     P_STARTDATE,
                     P_ENDDATE,
                     P_EMAIL,
                     P_WEBPAGE,
                     P_EXTAFFI_Id,
                     l_affiliationid_seq,
                     V_AWARDEEINSTITUTIONID,
                     P_awardeePersonId,
                     P_familyName,
                     P_fundingBodyPersonId,
                     P_givenName,
                     P_ORCID,
                     P_initials,
                     P_role,
                     P_name,
                     'en');
         SELECT   TYPE
           INTO   l_type
           FROM   awardee
          WHERE   awardee_id = P_AWARDEEID;
      ELSE
         UPDATE   AFFILIATION
            SET   SCOPUSINSTITUTIONID = P_SCOPUSINSTITUTIONID,
                  ORG = P_ORG,
                  DEPT = P_DEPT,
                  STARTDATE = P_STARTDATE,
                  ENDDATE = P_ENDDATE,
                  EMAIL = P_EMAIL,
                  WEBPAGE = P_WEBPAGE,
                  EXTERNALAFFILIATIONIDENTIFIER=P_EXTAFFI_Id
          WHERE   IFNULL (SCOPUSINSTITUTIONID, 0) =
                     IFNULL (P_SCOPUSINSTITUTIONID, 0)
                  AND TRIM(IFNULL (ORG, '0')) = TRIM(IFNULL (p_ORG, '0'))
                  AND AWARDEEINSTITUTION_ID = V_AWARDEEINSTITUTIONID;
      END IF;
   ELSEIF P_INSDEL = 1
   THEN
      SELECT   AWARDEEINSTITUTION_ID
        INTO   V_AWARDEEINSTITUTIONID
        FROM   AFFILIATION
       WHERE   AFFILIATION_ID = P_AFFILIATION_ID;

      DELETE FROM   TELEPHONE
            WHERE   AFFILIATION_ID = p_AFFILIATION_ID;


      DELETE FROM   FAX
            WHERE   AFFILIATION_ID = p_AFFILIATION_ID;

      DELETE FROM   AWARDADDRESS
            WHERE   AFFILIATION_ID = p_AFFILIATION_ID;


      DELETE FROM   AFFILIATION
            WHERE   AFFILIATION_ID = p_AFFILIATION_ID;


      SELECT   COUNT(*)
        INTO   DELCOUNT
        FROM   AFFILIATION
       WHERE   AWARDEEINSTITUTION_ID = V_AWARDEEINSTITUTIONID;

      IF DELCOUNT = 0
      THEN
         DELETE FROM   AWARDEEINSTITUTION
               WHERE   AWARDEEINSTITUTION_ID = V_AWARDEEINSTITUTIONID;
      END IF;
   ELSEIF P_INSDEL = 2
   THEN
   
    
         SELECT   TYPE
           INTO   l_type
           FROM   awardee
          WHERE   awardee_id = P_AWARDEEID;


      UPDATE   AFFILIATION
         SET   SCOPUSINSTITUTIONID = P_SCOPUSINSTITUTIONID,
               ORG = P_ORG,
               DEPT = P_DEPT,
               STARTDATE = P_STARTDATE,
               ENDDATE = P_ENDDATE,
               EMAIL = P_EMAIL,
               WEBPAGE = P_WEBPAGE,
               EXTERNALAFFILIATIONIDENTIFIER=P_EXTAFFI_Id
               
       WHERE   AFFILIATION_ID = P_AFFILIATION_ID;
       
       update org set ORG_TEXT=P_ORG, RELTYPE=l_type
       where AFFLIATION_ID= P_AFFILIATION_ID;
   END IF;

        SELECT   AWARDEE_ID,
                 AWARDEEINSTITUTION_ID,
                 AFFILIATION_ID,
                 SCOPUSINSTITUTIONID,
                 ORG,
                 DEPT,
                 STARTDATE,
                 ENDDATE,
                 EMAIL,
                 WEBPAGE,
                 EXTERNALAFFILIATIONIDENTIFIER,
                   FAMILYNAME,
    FUNDINGBODYPERSONID,
    GIVENNAME,
    ORCID,
    INITIALS,
    ROLE,
    NAME,
                
                 (CASE WHEN FLAGPOHE > 0 THEN 1 ELSE 0 END) FLAGPOHE,
                 (CASE WHEN FLAGFAX > 0 THEN 1 ELSE 0 END) FLAGFAX,
                 (CASE WHEN FLAGADDRESS > 0 THEN 1 ELSE 0 END) FLAGADDRESS
          FROM   (SELECT   A.AWARDEE_ID,
                           A.AWARDEEINSTITUTION_ID,
                           B.AFFILIATION_ID,
                           B.SCOPUSINSTITUTIONID,
                           B.ORG,
                           B.DEPT,
                           B.STARTDATE,
                           B.ENDDATE,
                           B.EMAIL,
                           B.WEBPAGE,
                           B.EXTERNALAFFILIATIONIDENTIFIER,
                           B.AWARDEEPERSONID,
    B.FAMILYNAME,
    B.FUNDINGBODYPERSONID,
    B.GIVENNAME,
    B.ORCID,
    B.INITIALS,
    B.ROLE,
    B.NAME,
                           (SELECT   COUNT(*)
                              FROM   TELEPHONE
                             WHERE   AFFILIATION_ID = B.AFFILIATION_ID)
                              FLAGPOHE,
                           (SELECT   COUNT(*)
                              FROM   FAX
                             WHERE   AFFILIATION_ID = B.AFFILIATION_ID)
                              FLAGFAX,
                           (SELECT   COUNT(*)
                              FROM   AWARDADDRESS
                             WHERE   AFFILIATION_ID = B.AFFILIATION_ID)
                              FLAGADDRESS
                    FROM   AWARDEEINSTITUTION A, AFFILIATION B
                   WHERE   A.AWARDEEINSTITUTION_ID = B.AWARDEEINSTITUTION_ID
                           AND AWARDEE_ID = P_AWARDEEID) T
      ORDER BY   AFFILIATION_ID DESC;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_AW_INSTITUTIONLIST` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_AW_INSTITUTIONLIST`(
   P_AWARDEEID       INTEGER
)
BEGIN
     SELECT   AWARDEE_ID,
               AWARDEEINSTITUTION_ID,
               AFFILIATION_ID,
               SCOPUSINSTITUTIONID,
               ORG,
               DEPT,
               STARTDATE,
               ENDDATE,
               EMAIL,
               WEBPAGE,
               EXTERNALAFFILIATIONIDENTIFIER,
               (CASE WHEN FLAGPOHE > 0 THEN 1 ELSE 0 END) FLAGPOHE,
               (CASE WHEN FLAGFAX > 0 THEN 1 ELSE 0 END) FLAGFAX,
               (CASE WHEN FLAGADDRESS > 0 THEN 1 ELSE 0 END) FLAGADDRESS
        FROM   (SELECT   A.AWARDEE_ID,
                         A.AWARDEEINSTITUTION_ID,
                         B.AFFILIATION_ID,
                         B.SCOPUSINSTITUTIONID,
                         B.ORG,
                         B.DEPT,
                         B.STARTDATE,
                         B.ENDDATE,
                         B.EMAIL,
                         B.WEBPAGE,
                         B.EXTERNALAFFILIATIONIDENTIFIER,
                         (SELECT   COUNT(*)
                            FROM   TELEPHONE
                           WHERE   AFFILIATION_ID = B.AFFILIATION_ID)
                            FLAGPOHE,
                         (SELECT   COUNT(*)
                            FROM   FAX
                           WHERE   AFFILIATION_ID = B.AFFILIATION_ID)
                            FLAGFAX,
                         (SELECT   COUNT(*)
                            FROM   AWARDADDRESS
                           WHERE   AFFILIATION_ID = B.AFFILIATION_ID)
                            FLAGADDRESS
                  FROM   AWARDEEINSTITUTION A, AFFILIATION B
                 WHERE   A.AWARDEEINSTITUTION_ID = B.AWARDEEINSTITUTION_ID
                         AND AWARDEE_ID = P_AWARDEEID) T;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_aw_managerlist` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_aw_managerlist`(
p_workflowid       integer
)
BEGIN
   DECLARE v_id         integer;
   DECLARE v_moduleid   integer;

   SELECT   ID, moduleid
     INTO   v_id, v_moduleid
     FROM   sci_workflow
    WHERE   WORKFLOWID = p_workflowid;

   IF v_moduleid = 4
   THEN

      SELECT   b.TYPE,
               b.TITLE,
               b.TELEPHONE,
               b.FAX,
               b.EMAIL,
               b.AWARDMANAGER_ID contact_id,
               c.country countrycode,
                     cc.name  countryname,
               c.ROOM,
               c.STREET,
               c.CITY,
                ifnull(c.state,c.state) statecode,
                     ifnull(sc.name,c.state) statename,
               c.POSTALCODE,
               d.PREFIX,
               d.GIVENNAME,
               d.MIDDLENAME,
               d.SURNAME,
               d.SUFFIX,
               e.URL,
               e.WEBSITE_TEXT
        FROM   Awardmanagers a,
               Awardmanager b,
               address c,
               AWARDCONTACTNAME d,
               AWARDWEBSITE e,
               SCI_COUNTRYCODES cc,
                  SCI_STATECODES sc
       WHERE       a.AWARDMANAGERS_ID = b.AWARDMANAGERS_ID
        and sc.code=c.STATE
          and cc.LCODE=c.COUNTRY
               AND b.AWARDMANAGER_ID = c.AWARDMANAGER_ID
               AND b.AWARDMANAGER_ID = d.AWARDMANAGER_ID
               AND b.AWARDMANAGER_ID = e.AWARDMANAGER_ID
               AND AWARD_ID = v_id;
   END IF;

      
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_aw_QCcheckxml50_4` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_aw_QCcheckxml50_4`(
   p_tran_type_id              INTEGER, 
   p_workflowid                INTEGER
)
BEGIN
   DECLARE v_id      INTEGER;
   DECLARE l_count   INTEGER;
 
   SELECT   ID
     INTO   v_id
     FROM   sci_workflow
    WHERE   WORKFLOWID = p_workflowid;

      SELECT   fundingbodyawardid,
               TYPE grantType,
               sci_get_funderSchemeType(TYPE) funderSchemeType, 
               trusting,
               collectioncode,
               hidden,
               'false' defunct,
               recordsource,
               startdate,
               lastamendeddate modifiedDate,
               enddate,
               publishedDate,
               award_id grantAwardId,
               
               ID,
               case when awardNoticeDate is not null then
               concat(ifnull(truncate(awardNoticeDate, 0), '')
                , 'T'
               , IFNULL(DATE_FORMAT (awardNoticeDate, '%H:%i:%s'), ''))
               else 
               null
               End
               noticeDate
        FROM   award
       WHERE   award_id = v_id;

      SELECT   sl_mast.language_code lang,
               sl_dtl.column_desc name_text,
               sl_dtl.scival_id award_id
        FROM   sci_language_detail sl_dtl, sci_language_master sl_mast
       WHERE       sl_dtl.language_id = sl_mast.language_id
               AND sl_dtl.moduleid = 4
               AND sl_dtl.column_id = 5
               AND sl_dtl.scival_id = v_id
               AND sl_dtl.tran_type_id = p_tran_type_id; -- v.0.3 modification (expression added)

      SELECT   sl_mast.language_code lang,
               sl_dtl.column_desc abstract_text,
               sl_dtl.scival_id award_id
        FROM   sci_language_detail sl_dtl, sci_language_master sl_mast
       WHERE       sl_dtl.language_id = sl_mast.language_id
               AND sl_dtl.moduleid = 4
               AND sl_dtl.column_id = 6
               AND sl_dtl.scival_id = v_id
               AND sl_dtl.tran_type_id = p_tran_type_id;
      SELECT   *
        FROM   revisionhistory
       WHERE   award_id = v_id;


   
      SELECT   CURRENCY, AMOUNT_TEXT, AWARDEE_ID
        FROM   amount
       WHERE   award_id = v_id
       AND  AWARDEE_ID IS NOT NULL;


   
      SELECT   *
        FROM   classificationgroup
       WHERE   award_id = v_id;


   
     SELECT  k.keyword_column value,  k.LANG, AWARD_ID
        FROM   keywords ks, keyword k
       WHERE   ks.award_id = v_id
       and K.KEYWORDS_ID=KS.KEYWORDS_ID;


   
      SELECT   *
        FROM   awardees
       WHERE   award_id = v_id;


   
      SELECT   *
        FROM   awardmanagers
       WHERE   award_id = v_id;


   
      SELECT   *
        FROM   relatedprograms
       WHERE   award_id = v_id;

   
   SELECT   COUNT(*)
     INTO   l_count
     FROM   relatedorgs
    WHERE   award_id = v_id AND HIERARCHY = 'lead';

   IF l_count > 0
   THEN
     SELECT  ro.hierarchy, o.ORGDBID fundingBodyId,o.RELTYPE,o.ORG_TEXT,ro.award_id
        FROM   org o,relatedorgs ro
       WHERE   o.RELATEDORGS_ID =ro.RELATEDORGS_ID and ro.award_id=v_id;

   END IF;
   SELECT   RELATEDITEMS_ID,AWARD_ID
        FROM   relateditems
       WHERE   award_id = v_id;

      SELECT   VERSION,
                  CONCAT(IFNULL(DATE_FORMAT (reviseddate_text, '%Y-%m-%d'), '')
               , 'T'
               , IFNULL(DATE_FORMAT (reviseddate_text, '%H:%i:%s'), ''))
                  reviseddate_text,
               revisionhistory_id
        FROM   reviseddate
       WHERE   revisionhistory_id IN (SELECT   revisionhistory_id
                                        FROM   revisionhistory
                                       WHERE   award_id = v_id);


      SELECT   VERSION,
                  CONCAT(IFNULL(DATE_FORMAT (createddate_text, '%Y-%m-%d'), '')
               , 'T'
               , IFNULL(DATE_FORMAT (createddate_text, '%H:%i:%s'), ''))
                  createddate_text,
               revisionhistory_id
        FROM   createddate
       WHERE   revisionhistory_id IN (SELECT   revisionhistory_id
                                        FROM   revisionhistory
                                       WHERE   award_id = v_id);


      SELECT   *
        FROM   classifications
       WHERE   classificationgroup_id IN (SELECT   classificationgroup_id
                                            FROM   classificationgroup
                                           WHERE   award_id = v_id);


         SELECT  clss.type, code value,sci_getpreferredLabel(code) preferredLabel,'Classification' cls_Type, clsG.award_id,cls.orgSpecificClassification
        FROM   classification cls,classifications clss ,classificationgroup clsG
       WHERE   cls.classifications_id=clss.classifications_id
       and clss.classificationgroup_id= clsG.classificationgroup_id
       and clsG.award_id=v_id;

     SELECT  'en' LANG,
               ORG orgtest_text,
               AFFILIATION_ID AFFILIATION_ID 
                        FROM   affiliation
                       WHERE   AWARDEEINSTITUTION_ID IN
                                     (SELECT   AWARDEEINSTITUTION_ID
                                        FROM   AWARDEEINSTITUTION
                                       WHERE   AWARDEE_ID IN
                                                     (SELECT   AWARDEE_ID
                                                        FROM   awardee
                                                       WHERE   AWARDEES_ID IN
                                                                     (SELECT   AWARDEES_ID
                                                                        FROM   awardees
                                                                       WHERE   award_id =
                                                                                  v_id)));
                                                                               
     SELECT  'en' LANG,
               dept dept_text,
               AFFILIATION_ID AFFILIATION_ID 
                        FROM   affiliation
                       WHERE   AWARDEEINSTITUTION_ID IN
                                     (SELECT   AWARDEEINSTITUTION_ID
                                        FROM   AWARDEEINSTITUTION
                                       WHERE   AWARDEE_ID IN
                                                     (SELECT   AWARDEE_ID
                                                        FROM   awardee
                                                       WHERE   AWARDEES_ID IN
                                                                     (SELECT   AWARDEES_ID
                                                                        FROM   awardees
                                                                       WHERE   award_id =
                                                                                  v_id)));
      SELECT   AWADEENAME_ID AWARDEENAME_ID, AWARDEE_ID
        FROM   awardeename
       WHERE    
       awardee_id IN
                     (SELECT   awardee_id
                        FROM   awardee
                       WHERE   awardees_id IN (SELECT   awardees_id
                                                 FROM   awardees
                                                WHERE   award_id = v_id));

      SELECT   LANG,
               INDEXEDNAME INDEXEDNAME_text,
               AWADEENAME_ID AWARDEENAME_ID
        FROM   awardeename
       WHERE   awardee_id IN
                     (SELECT   awardee_id
                        FROM   awardee
                       WHERE   awardees_id IN (SELECT   awardees_id
                                                 FROM   awardees
                                                WHERE   award_id = v_id));


      SELECT   LANG, GIVENNAME GIVENNAME_text, AWADEENAME_ID AWARDEENAME_ID
        FROM   awardeename
       WHERE  GIVENNAME is not null and awardee_id IN
                     (SELECT   awardee_id
                        FROM   awardee
                       WHERE   awardees_id IN (SELECT   awardees_id
                                                 FROM   awardees
                                                WHERE   award_id = v_id));


      SELECT   LANG, INITIALS INITIALS_text, AWADEENAME_ID AWARDEENAME_ID
        FROM   awardeename
       WHERE   INITIALS is not null and awardee_id IN
                     (SELECT   awardee_id
                        FROM   awardee
                       WHERE   awardees_id IN (SELECT   awardees_id
                                                 FROM   awardees
                                                WHERE   award_id = v_id));


      SELECT   LANG, SURNAME SURNAME_text, AWADEENAME_ID AWARDEENAME_ID
        FROM   awardeename
       WHERE   SURNAME is not null and awardee_id IN
                     (SELECT   awardee_id
                        FROM   awardee
                       WHERE   awardees_id IN (SELECT   awardees_id
                                                 FROM   awardees
                                                WHERE   award_id = v_id));




      SELECT   *
        FROM   awardeeinstitution
       WHERE   awardee_id IN
                     (SELECT   awardee_id
                        FROM   awardee
                       WHERE   awardees_id IN (SELECT   awardees_id
                                                 FROM   awardees
                                                WHERE   award_id = v_id));



      SELECT   *
        FROM   awardwebsite
       WHERE   awardmanager_id IN
                     (SELECT   awardmanager_id
                        FROM   awardmanager
                       WHERE   awardmanagers_id IN (SELECT   awardmanagers_id
                                                      FROM   awardmanagers
                                                     WHERE   award_id = v_id));



      SELECT   *
        FROM   awardcontactname
       WHERE   awardmanager_id IN
                     (SELECT   awardmanager_id
                        FROM   awardmanager
                       WHERE   awardmanagers_id IN (SELECT   awardmanagers_id
                                                      FROM   awardmanagers
                                                     WHERE   award_id = v_id));


      SELECT  
               COUNTRYTEST as COUNTRYTEST,
               ROOM,
               STREET,
               CITY,
               STATE,
               POSTALCODE,
               get_country_name(COUNTRYTEST) country,
               AWARDMANAGER_ID
        FROM   address
       WHERE   awardmanager_id IN
                     (SELECT   awardmanager_id
                        FROM   awardmanager
                       WHERE   awardmanagers_id IN (SELECT   awardmanagers_id
                                                      FROM   awardmanagers
                                                     WHERE   award_id = v_id));


      SELECT   RELTYPE,DESCRIPTION,ITEM_ID,RELATEDITEMS_ID,LANG
        FROM   item l
       WHERE   EXISTS
                  (SELECT   *
                     FROM   relateditems
                    WHERE   award_id = v_id
                            AND l.RELATEDITEMS_ID = RELATEDITEMS_ID);


      SELECT   url, link_text, item_id
        FROM   LINK
       WHERE   item_id IN
                     (SELECT   item_id
                        FROM   item l
                       WHERE   EXISTS
                                  (SELECT   *
                                     FROM   relateditems
                                    WHERE   award_id = v_id
                                            AND l.RELATEDITEMS_ID =
                                                  RELATEDITEMS_ID));


      SELECT   SCOPUSINSTITUTIONID,
              externalaffiliationidentifier,
               STARTDATE,
               ENDDATE,
               EMAIL,
               WEBPAGE,
               AFFILIATION_ID,
               AWARDEEINSTITUTION_ID
        FROM   affiliation
       WHERE   awardeeinstitution_id IN
                     (SELECT   awardeeinstitution_id
                        FROM   awardeeinstitution
                       WHERE   awardee_id IN
                                     (SELECT   awardee_id
                                        FROM   awardee
                                       WHERE   awardees_id IN
                                                     (SELECT   awardees_id
                                                        FROM   awardees
                                                       WHERE   award_id =
                                                                  v_id)));


      SELECT   *
        FROM   telephone
       WHERE   affiliation_id IN
                     (SELECT   affiliation_id
                        FROM   affiliation
                       WHERE   awardeeinstitution_id IN
                                     (SELECT   awardeeinstitution_id
                                        FROM   awardeeinstitution
                                       WHERE   awardee_id IN
                                                     (SELECT   awardee_id
                                                        FROM   awardee
                                                       WHERE   awardees_id IN
                                                                     (SELECT   awardees_id
                                                                        FROM   awardees
                                                                       WHERE   award_id =
                                                                                  v_id))));

      SELECT   *
        FROM   fax
       WHERE   affiliation_id IN
                     (SELECT   affiliation_id
                        FROM   affiliation
                       WHERE   awardeeinstitution_id IN
                                     (SELECT   awardeeinstitution_id
                                        FROM   awardeeinstitution
                                       WHERE   awardee_id IN
                                                     (SELECT   awardee_id
                                                        FROM   awardee
                                                       WHERE   awardees_id IN
                                                                     (SELECT   awardees_id
                                                                        FROM   awardees
                                                                       WHERE   award_id =
                                                                                  v_id))));

      SELECT   a.COUNTRYTEST,a.ROOM,a.STREET,a.CITY,a.STATE, a.POSTALCODE, get_country_name(a.COUNTRYTEST) country, a.AFFILIATION_ID
        FROM   address a, SCI_COUNTRYCODES
       WHERE   LCODE = a.COUNTRYTEST
               AND affiliation_id IN
                        (SELECT   affiliation_id
                           FROM   affiliation
                          WHERE   awardeeinstitution_id IN
                                        (SELECT   awardeeinstitution_id
                                           FROM   awardeeinstitution
                                          WHERE   awardee_id IN
                                                        (SELECT   awardee_id
                                                           FROM   awardee
                                                          WHERE   awardees_id IN
                                                                        (SELECT   awardees_id
                                                                           FROM   awardees
                                                                          WHERE   award_id =
                                                                                     v_id))));

      SELECT        RELTYPE,
                    TYPE,
                    DOI,
                    PUBMEDID,
                    PMCID,
                    MEDLINEID,
                    SCOPUSID,
                    ITEMTEST_ID,
                    IT.RESEARCHOUTCOME_ID
                    FROM   researchoutcome ro, itemtest it
            WHERE       RO.AWARD_ID = v_id
                    AND RO.RESEARCHOUTCOME_ID = it.RESEARCHOUTCOME_ID;
                   



   SELECT          ITD.ITEMTEST_ID,
                    ITEMID_COLUMN
             FROM   researchoutcome ro, itemtest it, itemid itd
            WHERE       RO.AWARD_ID = v_id
                    AND RO.RESEARCHOUTCOME_ID = it.RESEARCHOUTCOME_ID
                    AND it.ITEMTEST_ID = itd.ITEMTEST_ID;
      SELECT   COUNTRYTEST,
               ROOM,
               STREET,
               CITY,
               STATE,
               POSTALCODE,
               get_country_name(COUNTRY) country,
               AWARD_ID
        FROM   award_location
       WHERE   award_id = v_id;

      SELECT   INSTALLMENTANDAMOUNT_ID, AWARD_ID
        FROM   instalmentAndAmount
       WHERE   award_id = v_id;

              SELECT  ia.award_id,
              case when inst.AMOUNT >0 Then
               DATE_FORMAT (INSTALLMENTSTART_DATE, '%Y')
               else
               '-100'
               End
                   financialYear ,
               case when inst.AMOUNT >0 Then
               inst.AMOUNT
               else
               -100
               End
               AMOUNT,
              case when inst.AMOUNT >0 Then
               inst.CURRENCY
               else
               ''
               End
               inst_CURRENCY,
               case when ta.AMOUNT >0 Then
               ta.CURRENCY
               else
               ''
               End
               CURRENCY,
                case when ta.AMOUNT >0 Then
               ta.AMOUNT
               else
               -100
               End
                totalAmount,
                 case when inst.AMOUNT >0 Then
               1
               else
               -100
               End
                index_txt
               
        FROM   instalmentAndAmount ia, installment inst,totalAmount ta
       WHERE   IA.INSTALLMENTANDAMOUNT_ID = INST.INSTALLMENTANDAMOUNT_ID
       and ia.INSTALLMENTANDAMOUNT_ID = ta.INSTALLMENTANDAMOUNT_ID
       and  INST.INSTALLMENTANDAMOUNT_ID = ta.INSTALLMENTANDAMOUNT_ID
        AND award_id = v_id;

      SELECT   ta.AMOUNT, ta.CURRENCY, ta.INSTALLMENTANDAMOUNT_ID
        FROM   totalAmount ta, instalmentAndAmount ia
       WHERE   award_id = v_id
               AND ia.INSTALLMENTANDAMOUNT_ID = ta.INSTALLMENTANDAMOUNT_ID;

      SELECT   fba.AMOUNT, fba.CURRENCY , fba.RELEATEDFUNDINGBODIES_ID RELATEDFUNDINGBODIES_ID
        FROM   fundingBodyAmount fba, RELATEDFUNDINGBODIES rfb
       WHERE   fba.RELEATEDFUNDINGBODIES_ID = rfb.RELEATEDFUNDINGBODIES_ID
               AND AWARD_ID = V_ID;
               
           SELECT   r.Related_OPP_ID AS grantOpportunityId,o.fundingBodyOpportunityId,o.recordSource,om.opportunityname,'en' lang 
              
        FROM   sci_related_opportunity r,opportunity  o,opportunity_master om where 
        r.Related_OPP_ID=o.opportunity_id
        and o.opportunity_id=om.opportunityid
         and r.award_ID = v_id;
         
               SELECT PUBLICATION_ID,
  AWARD_ID,
  INGESTIONID,
  PUBLICATIONOUTPUTID,
  case when PUBLISHEDDATE is not null then
               CONCAT(IFNULL(DATE_FORMAT(PUBLISHEDDATE,'%Y-%m-%d'), '')
                , 'T'
               , IFNULL(DATE_FORMAT(PUBLISHEDDATE, '%H:%i:%s'), ''))
               else 
               null
               End
  PUBLISHEDDATE,
  CREATEDON,
  LASTUPDATEON,
  PUBLICATION_AUTHOR,
  JOURNAL_IDENTIFIER,
  PUBLICATION_URL,
  FUNDINGBODYPROJECTID,
  PUB_DESCRIPTION
FROM PUBLICATIONDATA where award_id=v_id;
          
           Select pt.publication_id,pd.award_id,pt.title,pt.lang from   
           Publication_Title Pt,Publicationdata Pd Where Pd.Publication_Id=Pt.Publication_Id And Pd.Award_Id=V_Id; 
           
           
           Select pd.publication_id,pd.award_id,it.title IDENTIFIER_TITLE,it.lang,pd.journal_identifier,'ISSN' type 
           from   IDENTIFIERTITLE IT,PublicationData PD where it.publication_id=pd.publication_id and PD.award_id=v_id; 
           
            -- SELECT list FROM table ((Select sci_getcsvtoLIST(publication_author) from PublicationData where award_id=v_id and 1=2 ));
            
                Select Doi,Medlineid Medline,Pubmedid Pubmed,Pmcid Pmc,Scopusid Scopuseid,Pd.Publication_Id ,ro.Award_Id 
                       From Researchoutcome Ro, Itemtest It,Publicationdata Pd
            Where       Ro.Award_Id = v_id And
                     Ro.Researchoutcome_Id = It.Researchoutcome_Id And Pd.Publication_Id = Ro.Publication_Id; 
            
            Select pd.pub_description description,a.fundingBodyAwardId,pd.fundingBodyProjectId,a.award_id grantAwardId 
           from PublicationData PD, award a where pd.award_id=a.award_id and pd.award_id = v_id;
           
                              SELECT   A.AWARD_ID,
                              'COORDINATOR' TYPE,
                             'Research organization' activityType,
                              awardeeAffiliationId,
                              departmentName,
                              B.FBORGANIZATIONID,
                              B.link,
                             awd.org,
                              'en' Language,
                              B.ROR,
                              B.DUNS,
                              B.Vatnumber,
                              B.Wikidata,
                              Currency,
                              Amount_Text,
                              B.Awardee_Id,
                              B.Awardees_Id
                   
                       FROM   AWARDEES A,
                              AWARDEE B,
                              SCI_AWARDEETYPETYPE d,  amount am,
                             ( Select aff.org,adwinst.Awardee_ID from awardeeinstitution adwinst,affiliation aff 
                             where  adwinst.awardeeinstitution_id=aff.awardeeinstitution_id) awd
                      WHERE       A.AWARDEES_ID = B.AWARDEES_ID
                              AND d.CODE = B.TYPE
                              and AM.AWARDEE_ID= B.AWARDEE_ID
                              and B.TYPE not in ('coPI')
                              and B.AWARDEE_ID =awd.AWARDEE_ID
                              AND a.AWARD_ID = v_id;
                              
                               SELECT   
                           B.EMAIL,
                           B.AWARDEEPERSONID,
                           B.FAMILYNAME,
                           B.FUNDINGBODYPERSONID,
                           B.GIVENNAME,
                           B.ORCID,
                          B.Initials,
                          B.Role,
                         B.Name,
                         A.Awardeeinstitution_Id,
                         A.Awardee_Id,
                         B.Affiliation_Id
                           
                    FROM   AWARDEEINSTITUTION A, AFFILIATION B
                   WHERE   A.AWARDEEINSTITUTION_ID = B.AWARDEEINSTITUTION_ID
                           AND AWARDEE_ID in (Select awardee_id from awardee where awardees_id in 
                           (Select awardees_id from awardees where award_id =v_id));
                           
                                         SELECT   A.COUNTRYTEST,
               C.NAME COUNTRYNAME,
               A.ROOM,
               A.STREET,
               A.CITY,
               A.STATE,
               A.POSTALCODE,
               A.AFFILIATION_ID
        FROM   ADDRESS A, SCI_COUNTRYCODES C
       WHERE   C.LCODE = A.COUNTRYTEST AND AFFILIATION_ID in (Select AFFILIATION_ID from affiliation where  AWARDEEINSTITUTION_ID in 
       (Select AWARDEEINSTITUTION_ID from  AWARDEEINSTITUTION where AWARDEE_ID in (Select awardee_id from awardee where awardees_id in 
                           (Select awardees_id from awardees where award_id =v_id)) ) );
                           
                            SELECT 'ROR' Identifier_text, B.ROR value_text FROM   AWARDEES A,AWARDEE B  
                             WHERE A.AWARDEES_ID = B.AWARDEES_ID AND a.AWARD_ID = v_id
                              
                              Union
                              SELECT 'DUNS' Identifier_text,  B.DUNS value_text FROM   AWARDEES A,AWARDEE B  
                             WHERE A.AWARDEES_ID = B.AWARDEES_ID AND a.AWARD_ID = v_id
                               
                              Union
                              
                              SELECT 'WIKIDATA' Identifier_text, B.WIKIDATA value_text FROM   AWARDEES A,AWARDEE B  
                             WHERE A.AWARDEES_ID = B.AWARDEES_ID AND a.AWARD_ID = v_id;
                             
                             
                             
                             SELECT FUND_ID,
                          AWARD_ID,
                         ACRONYM,
                        BUDGET_AMOUNT AMOUNT,
                        BUDGET_CURRENCY  CURRENCY,
                        ENDDATE,
                        FUNDINGBODYPROJECTID,
                        STARTDATE,
                        STATUS,
                        LINK,
                        COUNTRY,
                        LOCALITY,
                        POSTALCODE,
                        REGION,
                        STREET
                        
                        FROM FUNDEDPROJECTDETAIL where AWARD_ID =v_id ;
                        
                             
                            SELECT SUBFUND_ID,
                           FUND_ID,
                           AWARD_ID,
                           FUNDINGBODYPROJECTID,
                           AMOUNT,
                           CURRENCY
                           FROM FUNDEDSUBPROJECT  where AWARD_ID =v_id ;
                           
                         Select column_desc value_text,get_language_code_byid(language_id)  language  
                         from sci_language_detail where scival_id= v_id and moduleid=4 and column_id=8;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_aw_research_output` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_aw_research_output`(
   p_workflowid       INTEGER
)
BEGIN
   DECLARE v_id         INTEGER;
   DECLARE v_moduleid   INTEGER;
    
   SELECT   ID, moduleid
     INTO   v_id, v_moduleid
     FROM   sci_workflow
    WHERE   WORKFLOWID = p_workflowid;

 --  OPEN p_soit FOR
        SELECT   ID, NAME
          FROM   SCI_SCHOLAR_OUTPUT_ITEM_TYPE
      ORDER BY   ID;

   -- OPEN p_soitt FOR
        SELECT   ID, NAME
          FROM   SCI_SCHOLAR_ITEM_TYPE_type
      ORDER BY   ID;

   -- OPEN p_sort FOR
        SELECT   ID, NAME
          FROM   SCI_output_relation_type
      ORDER BY   ID;

   IF v_moduleid = 4
   THEN
      -- OPEN mdata FOR
            SELECT   ID,
                    RELTYPE,
                    TYPE,
                    DOI,
                    PUBMEDID,
                    PMCID,
                    MEDLINEID,
                    SCOPUSID,
                    listagg (itd.ITEMID_COLUMN, ',')
                       -- WITHIN GROUP (ORDER BY itd.ITEMTEST_ID)
                       -- ITEMID_COLUMN
             FROM   researchoutcome ro, itemtest it, itemid itd
            WHERE       RO.AWARD_ID = v_id
                    AND RO.RESEARCHOUTCOME_ID = it.RESEARCHOUTCOME_ID
                    AND it.ITEMTEST_ID = itd.ITEMTEST_ID
         GROUP BY   ID,
                    RELTYPE,
                    TYPE,
                    DOI,
                    PUBMEDID,
                    PMCID,
                    MEDLINEID,
                    SCOPUSID;
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_AW_TELINSDEL` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_AW_TELINSDEL`(
   P_AFFILIATIONID       INTEGER,
   P_INSDEL              INTEGER, 
   P_TELEPHONE           VARCHAR(4000),
   X_TELEPHONE           VARCHAR(4000)    
)
BEGIN
   IF P_INSDEL = 0
   THEN
      INSERT INTO TELEPHONE (TELEPHONE_COLUMN, AFFILIATION_ID)
        VALUES   (P_TELEPHONE, P_AFFILIATIONID);
   ELSEIF P_INSDEL = 1
   THEN
      DELETE FROM   TELEPHONE
            WHERE   AFFILIATION_ID = P_AFFILIATIONID
                    AND IFNULL (TELEPHONE_COLUMN, '1xzsed6d5fe8g45bhj') =
                          IFNULL (P_TELEPHONE, '1xzsed6d5fe8g45bhj');
   ELSEIF P_INSDEL = 2
   THEN
      UPDATE   TELEPHONE
         SET   TELEPHONE_COLUMN = P_TELEPHONE
       WHERE   AFFILIATION_ID = P_AFFILIATIONID
               AND IFNULL (TELEPHONE_COLUMN, '1xzsed6d5fe8g45bhj') =
                     IFNULL (X_TELEPHONE, '1xzsed6d5fe8g45bhj');
   END IF;
      SELECT   *
        FROM   TELEPHONE
       WHERE   AFFILIATION_ID = P_AFFILIATIONID;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_AW_TELlist` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_AW_TELlist`(
   P_AFFILIATIONID       INTEGER
)
BEGIN
      SELECT   *
        FROM   TELEPHONE
       WHERE   AFFILIATION_ID = P_AFFILIATIONID;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_CheckOppStatus` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_CheckOppStatus`(
	p_WorkflowID INTEGER
)
BEGIN
	SELECT opportunitystatus FROM opportunity WHERE Opportunity_id IN 
    (SELECT id FROM sci_workflow WHERE WORKFLOWID = p_WorkflowID);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_check_award_duplicate` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_check_award_duplicate`(
   p_workflowid           INTEGER,
   p_userid               INTEGER,
   p_transitionalid       INTEGER,
   p_mode                 INTEGER,
   p_QueryMode            INTEGER,
   p_TaskName             VARCHAR(4000)
)
BEGIN
   DECLARE v_check               INTEGER;
   DECLARE v_moduleid            INTEGER;
   DECLARE v_id                  INTEGER;
   DECLARE v_cycle               INTEGER;
   DECLARE v_sequence            INTEGER;
   DECLARE vm_sequence           INTEGER;
   DECLARE v_taskid              INTEGER;
   DECLARE x_revisionhistoryid   INTEGER;
   DECLARE xx_count              INTEGER;
   DECLARE v_count               INTEGER;
   DECLARE v_count_name          INTEGER;
   DECLARE v_transitionalid      INTEGER  DEFAULT  0;
   DECLARE v_awardid             INTEGER;
   DECLARE v_opportunityid       INTEGER;
   DECLARE v_fundingbody_id      INTEGER;
   DECLARE V_NAME                LONGTEXT;
   DECLARE v_startdate           DATETIME;
   DECLARE v_amount              INTEGER;
   DECLARE v_amount_cnt          INTEGER;
   DECLARE v_fundingbody_cnt     INTEGER;
   DECLARE v_receipents          VARCHAR (500);
   DECLARE P_O_STATUS1           INTEGER;
   DECLARE P_O_ERROR1            VARCHAR (500);
   DECLARE V_indexedname         VARCHAR (1000);

   DECLARE x_WFLOWID             INTEGER;
 
   SELECT   moduleid,
            ID,
            CYCLE,
            SEQUENCE,
            taskid
     INTO   v_moduleid,
            v_id,
            v_cycle,
            v_sequence,
            v_taskid
     FROM   sci_workflow
    WHERE   workflowid = p_workflowid;

   SELECT   fundingbody_id, STARTDATE
     INTO   v_fundingbody_id, v_startdate
     FROM   award
    WHERE   AWARD_ID = v_id;
  SELECT   count(*)
     INTO   v_count_name
     FROM   SCI_LANGUAGE_DETAIL
    WHERE   SCIVAL_ID = v_id AND COLUMN_ID = 5
      AND language_id = 52;

    IF v_count_name < 1 THEN
       SELECT   COLUMN_DESC
         INTO   V_NAME
         FROM   SCI_LANGUAGE_DETAIL s
         join award_master am on S.SCIVAL_ID=AM.AWARDID and to_char(S.COLUMN_DESC)=AM.AWARDNAME
        WHERE   SCIVAL_ID = v_id AND COLUMN_ID = 5 AND  moduleid=4
       LIMIT 1  ;
           
    else
       SELECT   COLUMN_DESC
         INTO   V_NAME
         FROM   SCI_LANGUAGE_DETAIL
        WHERE   SCIVAL_ID = v_id AND COLUMN_ID = 5
         AND language_id = 52       
         And  moduleid=4 
         LIMIT 1;
           
            
    END IF;


   BEGIN
      DECLARE EXIT HANDLER FOR SQLEXCEPTION
      BEGIN
         SET v_amount=NULL;
      END;
      SELECT   AMOUNT_TEXT
        INTO   v_amount
        FROM   amount
       WHERE   AWARD_ID = v_id AND AWARDEE_ID IS NULL  
      LIMIT 1; 
     END;

   SELECT   awname.indexedname
     INTO   V_indexedname
     FROM   award a,
            awardees awes,
            awardee awe,
            AWARDEENAME awname
    WHERE       a.award_id = awes.award_id
            AND awe.awardees_id = awes.awardees_id
            AND awname.awardee_id = awe.awardee_id
            AND awe.TYPE IN ('PI', 'investigator', 'institution') 
            AND a.award_id = v_id
   LIMIT 1;
   IF p_QueryMode = 0
   THEN
      SELECT   COUNT(*)
        INTO   v_count
        FROM   award a,
               award_master am, 
               awardee awe,
               awardees awes,
               AWARDEEINSTITUTION awins,
               sci_language_detail ld,
               fundingbody_master fm,
               amount amt,
               AWARDEENAME awname
       WHERE       awname.awardee_id = awe.awardee_id
               AND awe.awardees_id = awes.awardees_id
               AND a.award_id = ld.scival_id
               AND ld.column_id = 5
               AND a.fundingbody_id = fm.fundingbody_id
               AND a.award_id = amt.award_id
               AND awe.awardee_id = awins.awardee_id
               AND a.award_id = awes.award_id
               AND A.FUNDINGBODY_ID = v_fundingbody_id
               AND a.award_id <> v_id
               AND AM.AWARDID = A.AWARD_ID
               AND NOT EXISTS(
                      SELECT    1
                         FROM   SCI_XMLDELIVERYDETAIL
                        WHERE   id = am.awardid AND am.statuscode = 3)
               AND awe.TYPE IN ('PI', 'investigator', 'institution')
               AND a.fUNDINGBODYAWARDID = 'Not Available'
               AND TRUNCATE (a.startdate, 0) = v_startdate
               AND TO_CHAR (ld.column_desc) = TO_CHAR (V_NAME)
               AND awname.indexedname = V_indexedname
               AND amt.amount_text = v_amount;
   ELSE
      UPDATE   sci_workflow
         SET   STATUSID = 11
       WHERE   workflowid = p_workflowid;
   END IF;

   IF p_mode = 10
   THEN
      IF p_TaskName = 'QA'
      THEN
            SELECT   workflowid,
                     award_id,
                     fundingbodyawardid,
                     NAME
              FROM   award op, sci_workflow sw
             WHERE       fundingbody_id = v_fundingbody_id
                     AND op.award_id = sw.ID
                     AND moduleid = 4
                     AND sw.CYCLE = 0
                     AND taskid = 2
                     AND IFNULL (statusid, 0) NOT IN (8, 7, 11)
                     AND COMPLETEDDATE IS NULL
                     AND NOT EXISTS
                           (SELECT   1
                              FROM   sci_workflow
                             WHERE       ID = sw.ID
                                     AND CYCLE = sw.CYCLE
                                     AND SEQUENCE < sw.SEQUENCE
                                     AND completeddate IS NULL)
            UNION ALL
            SELECT   WORKFLOWID,
                     AWARDID,
                     NULL FUNDINGBODYOPPORTUNITYID,
                     AWARDNAME name
              FROM   award_master om, sci_workflow sw
             WHERE       OM.awardID = sw.id
                     AND OM.CYCLE = sw.cycle
                     AND sw.taskid = 2
                     AND sw.MODULEID = 4
                     AND FUNDINGBODYID = v_FUNDINGBODY_ID
                     AND isautomated = 1
                     AND om.cycle = 0
                     AND statuscode = 1
                     AND IFNULL (STATUSID, 0) NOT IN (7, 8, 11)
                     AND COMPLETEDDATE IS NULL
                     AND NOT EXISTS (SELECT   1
                                       FROM   AWARD
                                      WHERE   AWARD_ID = om.AWARDID)
                     AND NOT EXISTS
                           (SELECT   1
                              FROM   sci_workflow
                             WHERE       ID = sw.ID
                                     AND CYCLE = sw.CYCLE
                                     AND SEQUENCE < sw.SEQUENCE
                                     AND completeddate IS NULL)
            ORDER BY   name
            LIMIT 1;
      ELSEIF p_TaskName = 'New'
      THEN
      -- Commented by Neha--To disscuss---
         /*SCI_AW_AWNEW (v_fundingbody_id,
                       p_userid,
                       x_WFLOWID,
                       P_O_STATUS1,
                       P_O_ERROR1); */

                  SELECT   x_WFLOWID workflowid,
                     NULL award_id,
                     NULL fundingbodyawardid,
                     NULL NAME
              FROM   DUAL;
      END IF;
   ELSE
               SELECT   NULL workflowid,
                  NULL award_id,
                  NULL fundingbodyawardid,
                  NULL NAME
           FROM   DUAL;
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_classificationinsert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_classificationinsert`(
   p_workflowid                integer,
   p_type                      varchar(4000),
   p_FREQUENCY                 integer,
   p_CODE                      varchar(4000),
   p_CLASSIFICATION_TEXT       varchar(4000)   
)
sp_lbl:

BEGIN
	DECLARE v_fundingbodyid    integer;
	DECLARE v_value            integer;
	DECLARE v_value1           integer;
	DECLARE v_contype          integer;
	DECLARE v_classification   integer;
	DECLARE v_moduleid         integer;
	DECLARE v_count            integer;
	DECLARE V_COUNT1           integer;
	DECLARE v_classcount       integer;
	DECLARE NOT_FOUND INT DEFAULT 0;

	DECLARE CONTINUE HANDLER FOR NOT FOUND SET NOT_FOUND = 1;
   
	SELECT   ID, moduleid
		INTO   v_fundingbodyid, v_moduleid
		FROM   sci_workflow
	WHERE   WORKFLOWID = p_workflowid;

	IF v_moduleid = 2
	THEN
		SELECT   COUNT(*)
        INTO   v_classification
        FROM   classificationgroup
		WHERE   FUNDINGBODY_ID = v_fundingbodyid;

		IF v_classification = 0
		THEN
			SELECT   CLASSIFICATIONGROUP_SEQ.NEXTVAL INTO v_value FROM DUAL;

			INSERT INTO classificationgroup (CLASSIFICATIONGROUP_ID, FUNDINGBODY_ID)
			VALUES   (v_value, v_fundingbodyid);
		ELSE
			SELECT   CLASSIFICATIONGROUP_ID
			INTO   v_value
			FROM   classificationgroup
			WHERE   FUNDINGBODY_ID = v_fundingbodyid;
		END IF;

		SELECT   COUNT(*) INTO   v_contype
        FROM   classifications WHERE TYPE = p_type
		AND CLASSIFICATIONGROUP_ID 
        IN (SELECT   CLASSIFICATIONGROUP_ID FROM classificationgroup WHERE FUNDINGBODY_ID = v_fundingbodyid);

		IF v_contype = 0
		THEN
			SELECT   CLASSIFICATIONS_SEQ.NEXTVAL INTO v_value1 FROM DUAL;

			INSERT INTO classifications (TYPE, CLASSIFICATIONS_ID, CLASSIFICATIONGROUP_ID)
			VALUES   (p_type, v_value1, v_value);
           
			/*declare i cursor for p_CODE.first.p_CODE loop

            INSERT INTO classification (FREQUENCY, CODE, CLASSIFICATION_TEXT, CLASSIFICATIONS_ID)
			VALUES   (p_FREQUENCY, p_CODE(i), p_CLASSIFICATION_TEXT(i), v_value1);
			 fetch  into;
			 end while;
			 close ;*/
             						
		ELSE
			SELECT   CLASSIFICATIONS_ID INTO v_value1
			FROM   classifications WHERE TYPE = p_type AND CLASSIFICATIONGROUP_ID 
            IN (SELECT CLASSIFICATIONGROUP_ID FROM   classificationgroup WHERE FUNDINGBODY_ID = v_fundingbodyid);
           
			/*declare i cursor for p_CODE.first.p_CODE loop   
			INSERT INTO classification (FREQUENCY,CODE,CLASSIFICATION_TEXT,CLASSIFICATIONS_ID)
			VALUES   (p_FREQUENCY,p_CODE(i),p_CLASSIFICATION_TEXT(i),v_value1);
                     fetch  into;
                     end while;
                     close ;*/
		END IF;
		
        SELECT   cgp.CLASSIFICATIONGROUP_ID,
                  cgp.FUNDINGBODY_ID,
                  cfs.TYPE,
                  cfs.CLASSIFICATIONS_ID,
                  cf.FREQUENCY,
                  cf.CODE,
                  cf.CLASSIFICATION_TEXT
        FROM   classificationgroup cgp,
                  classifications cfs,
                  classification cf
        WHERE   cgp.CLASSIFICATIONGROUP_ID = cfs.CLASSIFICATIONGROUP_ID
                  AND cfs.CLASSIFICATIONS_ID = cf.CLASSIFICATIONS_ID
                  AND cgp.FUNDINGBODY_ID = v_fundingbodyid;
   -- ------------------------------------------------------------
	ELSEIF v_moduleid = 3
	THEN
		SELECT   COUNT(*) INTO   v_classification
        FROM   classificationgroup
		WHERE   OPPORTUNITY_ID = v_fundingbodyid;

		IF v_classification = 0
		THEN
			SELECT   CLASSIFICATIONGROUP_SEQ.NEXTVAL INTO v_value FROM DUAL;

			INSERT INTO classificationgroup (CLASSIFICATIONGROUP_ID,OPPORTUNITY_ID)
			VALUES   (v_value, v_fundingbodyid);
		ELSE
			SELECT   CLASSIFICATIONGROUP_ID INTO   v_value
			FROM   classificationgroup
			WHERE   OPPORTUNITY_ID = v_fundingbodyid;
		END IF;
        
		SELECT   COUNT(*) INTO   v_contype
        FROM   classifications
		WHERE   TYPE = p_type AND CLASSIFICATIONGROUP_ID 
        IN (SELECT   CLASSIFICATIONGROUP_ID FROM   classificationgroup WHERE   OPPORTUNITY_ID = v_fundingbodyid);

		SELECT   COUNT(*) INTO v_count FROM classification where  classifications_id in
		(select classifications_id from classifications where  CLASSIFICATIONGROUP_ID IN
		(SELECT   CLASSIFICATIONGROUP_ID FROM   classificationgroup WHERE   OPPORTUNITY_ID = v_fundingbodyid));

		/*declare i cursor for p_CODE.first.p_CODE loop
		IF v_count > 0
        THEN
			SELECT   COUNT(*) INTO   v_count1 FROM   classification
			WHERE   code = 1000  and classifications_id in 
            (select classifications_id from classifications where  CLASSIFICATIONGROUP_ID IN
			(SELECT   CLASSIFICATIONGROUP_ID FROM   classificationgroup WHERE   OPPORTUNITY_ID = v_fundingbodyid));			
		END IF;
		fetch  into;
		end while;
		close ;*/

		IF v_contype = 0
		THEN
			SELECT   CLASSIFICATIONS_SEQ.NEXTVAL INTO v_value1 FROM DUAL;

			INSERT INTO classifications (TYPE,CLASSIFICATIONS_ID,CLASSIFICATIONGROUP_ID)
			VALUES   (p_type, v_value1, v_value);
           
			/*declare i cursor for p_CODE.first.p_CODE loop
			INSERT INTO classification (FREQUENCY,CODE,CLASSIFICATION_TEXT,CLASSIFICATIONS_ID)
			VALUES   (p_FREQUENCY,p_CODE(i) ,p_CLASSIFICATION_TEXT(i),v_value1);
			 fetch  into;
			 end while;
			 close ;                     */
		ELSE
			SELECT   CLASSIFICATIONS_ID INTO   v_value1
			FROM   classifications
			WHERE   TYPE = p_type AND CLASSIFICATIONGROUP_ID IN
		    (SELECT   CLASSIFICATIONGROUP_ID FROM   classificationgroup WHERE   OPPORTUNITY_ID = v_fundingbodyid);

			/*declare i cursor for p_CODE.first.p_CODE loop
            SELECT   COUNT(*) INTO   v_classcount
			FROM   classification WHERE   FREQUENCY=p_FREQUENCY AND CODE=p_CODE(i) and CLASSIFICATIONS_ID=v_value1;
			if v_classcount > 0
			then
				
			else 
				INSERT INTO classification (FREQUENCY,CODE,CLASSIFICATION_TEXT,CLASSIFICATIONS_ID)
				VALUES   (p_FREQUENCY,p_CODE(i),p_CLASSIFICATION_TEXT(i),v_value1);
			END IF;
			fetch  into;
			end while;
			close ;*/
      
		END IF;		

		SET NOT_FOUND = 0;
		
		SELECT   cgp.CLASSIFICATIONGROUP_ID,
                  cgp.FUNDINGBODY_ID,
                  cfs.TYPE,
                  cfs.CLASSIFICATIONS_ID,
                  cf.FREQUENCY,
                  cf.CODE,
                  cf.CLASSIFICATION_TEXT
        FROM   classificationgroup cgp,
                  classifications cfs,
                  classification cf
		WHERE   cgp.CLASSIFICATIONGROUP_ID = cfs.CLASSIFICATIONGROUP_ID
                  AND cfs.CLASSIFICATIONS_ID = cf.CLASSIFICATIONS_ID
                  AND cgp.OPPORTUNITY_ID = v_fundingbodyid;
   -- ----------------------------------------------------------------------------------
	ELSEIF v_moduleid = 4
	THEN
		SELECT   COUNT(*)
        INTO   v_classification
        FROM   classificationgroup
		WHERE   AWARD_ID = v_fundingbodyid;

		IF v_classification = 0
		THEN
			SELECT   CLASSIFICATIONGROUP_SEQ.NEXTVAL INTO v_value FROM DUAL;

			INSERT INTO classificationgroup (CLASSIFICATIONGROUP_ID, AWARD_ID)
			VALUES   (v_value, v_fundingbodyid);
		ELSE
			SELECT   CLASSIFICATIONGROUP_ID
			INTO   v_value
			FROM   classificationgroup
			WHERE   AWARD_ID = v_fundingbodyid;
		END IF;

		SELECT   COUNT(*) INTO   v_contype
        FROM   classifications
		WHERE   TYPE = p_type AND CLASSIFICATIONGROUP_ID IN
		(SELECT   CLASSIFICATIONGROUP_ID FROM   classificationgroup WHERE   AWARD_ID = v_fundingbodyid);

		SELECT   COUNT(*) INTO v_count FROM classification where  classifications_id in
        (select classifications_id from classifications where  CLASSIFICATIONGROUP_ID IN
		(SELECT   CLASSIFICATIONGROUP_ID FROM   classificationgroup WHERE   AWARD_ID = v_fundingbodyid));
       
		/*declare i cursor for p_CODE.first.p_CODE loop
     
		IF v_count > 0
		THEN
			SELECT   COUNT(*) INTO   v_count1 FROM   classification
			WHERE   code = '1000' and classifications_id in
            (select classifications_id from classifications where  CLASSIFICATIONGROUP_ID IN
			(SELECT   CLASSIFICATIONGROUP_ID FROM   classificationgroup WHERE   AWARD_ID = v_fundingbodyid));
					
		fetch  into;
		end while;
		close ;	*/

		IF v_contype = 0
		THEN
			SELECT   CLASSIFICATIONS_SEQ.NEXTVAL INTO v_value1 FROM DUAL;

			INSERT INTO classifications (TYPE,CLASSIFICATIONS_ID,CLASSIFICATIONGROUP_ID)
			VALUES   (p_type, v_value1, v_value);
           			
			/*declare i cursor for p_CODE.first.p_CODE loop
				INSERT INTO classification (FREQUENCY,CODE,CLASSIFICATION_TEXT,CLASSIFICATIONS_ID)
				VALUES   (p_FREQUENCY,p_CODE(i),p_CLASSIFICATION_TEXT(i),v_value1);
				fetch  into;
                end while;
                close ;*/
		ELSE
			SELECT   CLASSIFICATIONS_ID INTO   v_value1
            FROM   classifications
			WHERE   TYPE = p_type AND CLASSIFICATIONGROUP_ID IN
			(SELECT   CLASSIFICATIONGROUP_ID FROM   classificationgroup WHERE AWARD_ID = v_fundingbodyid);
           
			/*declare i cursor for p_CODE.first.p_CODE loop
				INSERT INTO classification (FREQUENCY,CODE,CLASSIFICATION_TEXT,CLASSIFICATIONS_ID)
				VALUES   (p_FREQUENCY,p_CODE(i),p_CLASSIFICATION_TEXT(i),v_value1);
				fetch  into;
				end while;
				close ;*/
		END IF;
     
			SET NOT_FOUND = 0;
		
			SELECT   cgp.CLASSIFICATIONGROUP_ID,
                  cgp.FUNDINGBODY_ID,
                  cfs.TYPE,
                  cfs.CLASSIFICATIONS_ID,
                  cf.FREQUENCY,
                  cf.CODE,
                  cf.CLASSIFICATION_TEXT
			FROM   classificationgroup cgp,
                  classifications cfs,
                  classification cf
			WHERE   cgp.CLASSIFICATIONGROUP_ID = cfs.CLASSIFICATIONGROUP_ID
                  AND cfs.CLASSIFICATIONS_ID = cf.CLASSIFICATIONS_ID
                  AND cgp.AWARD_ID = v_fundingbodyid;
		
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_classificationlist` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_classificationlist`(p_workflowid       integer)
BEGIN
   DECLARE v_fundingbodyid   integer;
   DECLARE v_moduleid integer;
 
   SELECT   ID, moduleid
     INTO   v_fundingbodyid,v_moduleid
     FROM   sci_workflow
    WHERE   WORKFLOWID = p_workflowid;

if v_moduleid=2
then
	SELECT   cgp.CLASSIFICATIONGROUP_ID,
               cgp.FUNDINGBODY_ID,
               cfs.TYPE,
               cfs.CLASSIFICATIONS_ID,
               cf.FREQUENCY,
               cf.CODE,
               cf.CLASSIFICATION_TEXT
        FROM   classificationgroup cgp
               right outer join classifications cfs on cgp.CLASSIFICATIONGROUP_ID = cfs.CLASSIFICATIONGROUP_ID
               right outer join classification cf on cfs.CLASSIFICATIONS_ID = cf.CLASSIFICATIONS_ID
       WHERE  cgp.FUNDINGBODY_ID = v_fundingbodyid;

elseif v_moduleid=3
then
      SELECT   cgp.CLASSIFICATIONGROUP_ID,
               cgp.FUNDINGBODY_ID,
               cfs.TYPE,
               cfs.CLASSIFICATIONS_ID,
               cf.FREQUENCY,
               cf.CODE,
               cf.CLASSIFICATION_TEXT
        FROM   classificationgroup cgp
               right outer join classifications cfs on cgp.CLASSIFICATIONGROUP_ID = cfs.CLASSIFICATIONGROUP_ID
               right outer join classification cf on cfs.CLASSIFICATIONS_ID = cf.CLASSIFICATIONS_ID
       WHERE  cgp.OPPORTUNITY_ID = v_fundingbodyid;
       
elseif v_moduleid=4
then
      SELECT   cgp.CLASSIFICATIONGROUP_ID,
               cgp.FUNDINGBODY_ID,
               cfs.TYPE,
               cfs.CLASSIFICATIONS_ID,
               cf.FREQUENCY,
               cf.CODE,
               cf.CLASSIFICATION_TEXT
        FROM   classificationgroup cgp
               right outer join classifications cfs on cgp.CLASSIFICATIONGROUP_ID = cfs.CLASSIFICATIONGROUP_ID
               right outer join classification cf on cfs.CLASSIFICATIONS_ID = cf.CLASSIFICATIONS_ID
       WHERE  cgp.AWARD_ID = v_fundingbodyid;
end if;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_CLASSIFICATIONUPDEL` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_CLASSIFICATIONUPDEL`(
	P_WORKFLOWID                INTEGER,
	P_INSDEL                    INTEGER,                
	P_TYPE                      VARCHAR(4000),
	P_FREQUENCY                 INTEGER,
	P_CODE                      VARCHAR(4000),
	P_CLASSIFICATION_TEXT       VARCHAR(4000),
	P_CLASSIFICATIONS_ID        VARCHAR(4000),
	O_FREQUENCY                 INTEGER,
	O_CODE                      VARCHAR(4000)
)
BEGIN
	DECLARE V_CLASSIFICATIONS       INTEGER;
	DECLARE V_CLASSIFICATIONGROUP   INTEGER;
	DECLARE V_FUNDINGBODYID         INTEGER;
	DECLARE V_MODULEID              INTEGER;

	BEGIN

		INSERT INTO frog
		VALUES   (
		CONCAT('0 FREQUENCY'
		, '*** '
		, IFNULL(O_FREQUENCY, '')
		, '---- '
		, 'CODE'
		, '*** '
		, IFNULL(O_CODE, '')
		, '---- '
		, 'CLASSIFICATIONS_ID'
		, '*** '
		, IFNULL(P_CLASSIFICATIONS_ID, '')
		, '*** '
		, 'FREQUENCY'
		, '---- '
		, IFNULL(P_FREQUENCY, '')
		, '*** '
		, 'code'
		, '---- '
		, IFNULL(P_CODE, '')
		, '---- '
		, IFNULL(P_CLASSIFICATION_TEXT, '')),
		SYSDATE()
		);

		SELECT   ID, MODULEID
		INTO   V_FUNDINGBODYID, V_MODULEID
		FROM   SCI_WORKFLOW
		WHERE   WORKFLOWID = P_WORKFLOWID;

		IF V_MODULEID = 2
		THEN

			IF P_INSDEL = 1
			THEN
				DELETE FROM   CLASSIFICATION WHERE   FREQUENCY = P_FREQUENCY
				AND IFNULL (CODE, '1x2jf432dsf') =
				 IFNULL (P_CODE, '1x2jf432dsf')
				AND IFNULL (CLASSIFICATION_TEXT, '1x2jf432dsf') =
				 IFNULL (P_CLASSIFICATION_TEXT, '1x2jf432dsf')
				AND CLASSIFICATIONS_ID = P_CLASSIFICATIONS_ID;

				SELECT   COUNT(*) INTO   V_CLASSIFICATIONS FROM   CLASSIFICATION WHERE   CLASSIFICATIONS_ID = P_CLASSIFICATIONS_ID;

				IF V_CLASSIFICATIONS = 0
				THEN
					DELETE FROM   CLASSIFICATIONS WHERE   CLASSIFICATIONS_ID = P_CLASSIFICATIONS_ID;
				END IF;

				SELECT   COUNT(*) INTO   V_CLASSIFICATIONGROUP FROM   CLASSIFICATIONS
				WHERE   CLASSIFICATIONGROUP_ID =
				(SELECT   CLASSIFICATIONGROUP_ID FROM   CLASSIFICATIONGROUP WHERE   FUNDINGBODY_ID = V_FUNDINGBODYID);

				IF V_CLASSIFICATIONGROUP = 0
				THEN
					DELETE FROM   CLASSIFICATIONGROUP WHERE   FUNDINGBODY_ID = V_FUNDINGBODYID;
				END IF;

			ELSEIF P_INSDEL = 2
			THEN
				UPDATE   CLASSIFICATION SET   FREQUENCY = P_FREQUENCY, CODE = P_CODE, CLASSIFICATION_TEXT = P_CLASSIFICATION_TEXT
				WHERE       CLASSIFICATIONS_ID = P_CLASSIFICATIONS_ID AND FREQUENCY = O_FREQUENCY AND CODE = O_CODE;

				UPDATE   CLASSIFICATIONS SET   TYPE = P_TYPE WHERE   CLASSIFICATIONS_ID = P_CLASSIFICATIONS_ID;

				INSERT INTO frog
				VALUES   (
				CONCAT('2 FREQUENCY'
				, '*** '
				, IFNULL(O_FREQUENCY, '')
				, '---- '
				, 'CODE'
				, '*** '
				, IFNULL(O_CODE, '')
				, '---- '
				, 'CLASSIFICATIONS_ID'
				, '*** '
				, IFNULL(P_CLASSIFICATIONS_ID, '')),
				SYSDATE()
				);				

				SELECT   CGP.CLASSIFICATIONGROUP_ID,
				CGP.FUNDINGBODY_ID,
				CFS.TYPE,
				CFS.CLASSIFICATIONS_ID,
				CF.FREQUENCY,
				CF.CODE,
				CF.CLASSIFICATION_TEXT
				FROM CLASSIFICATIONGROUP CGP
				LEFT JOIN CLASSIFICATIONS CFS
				ON CGP.CLASSIFICATIONGROUP_ID = CFS.CLASSIFICATIONGROUP_ID
				LEFT JOIN CLASSIFICATION CF
				ON CFS.CLASSIFICATIONS_ID = CF.CLASSIFICATIONS_ID
				WHERE CGP.FUNDINGBODY_ID = V_FUNDINGBODYID;
				
			END IF;

		ELSEIF V_MODULEID = 3
		THEN

			IF P_INSDEL = 1
			THEN
				DELETE FROM   CLASSIFICATION WHERE   FREQUENCY = P_FREQUENCY
					AND IFNULL (CODE, '1X2VRE98JHNDGC') =
					 IFNULL (P_CODE, '1X2VRE98JHNDGC')
					AND IFNULL (CLASSIFICATION_TEXT, '1X2VRE98JHNDGC') =
					 IFNULL (P_CLASSIFICATION_TEXT, '1X2VRE98JHNDGC')
					AND CLASSIFICATIONS_ID = P_CLASSIFICATIONS_ID;

				SELECT   COUNT(*) INTO   V_CLASSIFICATIONS FROM   CLASSIFICATION WHERE   CLASSIFICATIONS_ID = P_CLASSIFICATIONS_ID;

				IF V_CLASSIFICATIONS = 0
				THEN
					DELETE FROM   CLASSIFICATIONS WHERE   CLASSIFICATIONS_ID = P_CLASSIFICATIONS_ID;
				END IF;

				SELECT   COUNT(*) INTO   V_CLASSIFICATIONGROUP FROM CLASSIFICATIONS WHERE CLASSIFICATIONGROUP_ID =
				(SELECT   CLASSIFICATIONGROUP_ID FROM   CLASSIFICATIONGROUP WHERE   OPPORTUNITY_ID = V_FUNDINGBODYID);

				IF V_CLASSIFICATIONGROUP = 0
				THEN
					DELETE FROM   CLASSIFICATIONGROUP WHERE   OPPORTUNITY_ID = V_FUNDINGBODYID;
				END IF;

			ELSEIF P_INSDEL = 2
			THEN
				UPDATE CLASSIFICATION SET   FREQUENCY = P_FREQUENCY, CODE = P_CODE,
					CLASSIFICATION_TEXT = P_CLASSIFICATION_TEXT,
					CLASSIFICATIONS_ID = P_CLASSIFICATIONS_ID
				WHERE CLASSIFICATIONS_ID = P_CLASSIFICATIONS_ID AND FREQUENCY = O_FREQUENCY AND CODE = O_CODE;

				INSERT INTO frog
				VALUES   (
				CONCAT(' 3 FREQUENCY'
				, '*** '
				, IFNULL(O_FREQUENCY, '')
				, '---- '
				, 'CODE'
				, '*** '
				, IFNULL(O_CODE, '')
				, '---- '
				, 'CLASSIFICATIONS_ID'
				, '*** '
				, IFNULL(P_CLASSIFICATIONS_ID, '')),
				SYSDATE()
				);

				UPDATE   CLASSIFICATIONS SET   TYPE = P_TYPE WHERE   CLASSIFICATIONS_ID = P_CLASSIFICATIONS_ID;

				SELECT   CGP.CLASSIFICATIONGROUP_ID,
				CGP.FUNDINGBODY_ID,
				CFS.TYPE,
				CFS.CLASSIFICATIONS_ID,
				CF.FREQUENCY,
				CF.CODE,
				CF.CLASSIFICATION_TEXT
				FROM   CLASSIFICATIONGROUP CGP
				LEFT JOIN CLASSIFICATIONS CFS
				ON CGP.CLASSIFICATIONGROUP_ID = CFS.CLASSIFICATIONGROUP_ID
				LEFT JOIN CLASSIFICATION CF
				ON CFS.CLASSIFICATIONS_ID = CF.CLASSIFICATIONS_ID
				WHERE CGP.OPPORTUNITY_ID = V_FUNDINGBODYID;
				
			END IF;

		ELSEIF V_MODULEID = 4
		THEN

			IF P_INSDEL = 1
			THEN
					DELETE FROM   CLASSIFICATION WHERE       FREQUENCY = P_FREQUENCY AND CODE = P_CODE
						AND CLASSIFICATION_TEXT = P_CLASSIFICATION_TEXT
						AND CLASSIFICATIONS_ID = P_CLASSIFICATIONS_ID;

					SELECT   COUNT(*) INTO   V_CLASSIFICATIONS FROM   CLASSIFICATION
					WHERE   CLASSIFICATIONS_ID = P_CLASSIFICATIONS_ID;

				IF V_CLASSIFICATIONS = 0
				THEN
					DELETE FROM   CLASSIFICATIONS WHERE   CLASSIFICATIONS_ID = P_CLASSIFICATIONS_ID;
				END IF;

				SELECT COUNT(*) INTO V_CLASSIFICATIONGROUP FROM CLASSIFICATIONS WHERE CLASSIFICATIONGROUP_ID 
				IN (SELECT CLASSIFICATIONGROUP_ID FROM CLASSIFICATIONGROUP WHERE AWARD_ID = V_FUNDINGBODYID);

				IF V_CLASSIFICATIONGROUP = 0
				THEN
					DELETE FROM   CLASSIFICATIONGROUP WHERE   AWARD_ID = V_FUNDINGBODYID
					AND NOT EXISTS
					(SELECT   1
					   FROM   CLASSIFICATIONS
					  WHERE   CLASSIFICATIONGROUP_ID =
								 X.CLASSIFICATIONGROUP_ID);
				END IF;

			ELSEIF P_INSDEL = 2
			THEN
				UPDATE CLASSIFICATION SET FREQUENCY = P_FREQUENCY,CODE = P_CODE,
					CLASSIFICATION_TEXT = P_CLASSIFICATION_TEXT,
					CLASSIFICATIONS_ID = P_CLASSIFICATIONS_ID
				WHERE CLASSIFICATIONS_ID = P_CLASSIFICATIONS_ID
				AND FREQUENCY = O_FREQUENCY
				AND CODE = O_CODE;

				INSERT INTO frog
				VALUES   (
				CONCAT(' 4 FREQUENCY'
				, '*** '
				, IFNULL(O_FREQUENCY, '')
				, '---- '
				, 'CODE'
				, '*** '
				, IFNULL(O_CODE, '')
				, '---- '
				, 'CLASSIFICATIONS_ID'
				, '*** '
				, IFNULL(P_CLASSIFICATIONS_ID, '')),
				SYSDATE()
				);

				UPDATE CLASSIFICATIONS SET TYPE = P_TYPE WHERE CLASSIFICATIONS_ID = P_CLASSIFICATIONS_ID;

				SELECT CGP.CLASSIFICATIONGROUP_ID,
				CGP.FUNDINGBODY_ID,
				CFS.TYPE,
				CFS.CLASSIFICATIONS_ID,
				CF.FREQUENCY,
				CF.CODE,
				CF.CLASSIFICATION_TEXT
				FROM   CLASSIFICATIONGROUP CGP
				LEFT JOIN CLASSIFICATIONS CFS
				ON CGP.CLASSIFICATIONGROUP_ID = CFS.CLASSIFICATIONGROUP_ID
				LEFT JOIN CLASSIFICATION CF
				ON CFS.CLASSIFICATIONS_ID = CF.CLASSIFICATIONS_ID
				WHERE CGP.AWARD_ID = V_FUNDINGBODYID;

				if V_MODULEID=2
				then

					SELECT   CGP.CLASSIFICATIONGROUP_ID,
					CGP.FUNDINGBODY_ID,
					CFS.TYPE,
					CFS.CLASSIFICATIONS_ID,
					CF.FREQUENCY,
					CF.CODE,
					CF.CLASSIFICATION_TEXT
					FROM   CLASSIFICATIONGROUP CGP
					LEFT JOIN CLASSIFICATIONS CFS
					ON CGP.CLASSIFICATIONGROUP_ID = CFS.CLASSIFICATIONGROUP_ID
					LEFT JOIN CLASSIFICATION CF
					ON CFS.CLASSIFICATIONS_ID = CF.CLASSIFICATIONS_ID
					WHERE CGP.FUNDINGBODY_ID = V_FUNDINGBODYID;

				elseif V_MODULEID=3
				then

					SELECT   CGP.CLASSIFICATIONGROUP_ID,
					CGP.FUNDINGBODY_ID,
					CFS.TYPE,
					CFS.CLASSIFICATIONS_ID,
					CF.FREQUENCY,
					CF.CODE,
					CF.CLASSIFICATION_TEXT
					FROM   CLASSIFICATIONGROUP CGP
					LEFT JOIN CLASSIFICATIONS CFS
					ON CGP.CLASSIFICATIONGROUP_ID = CFS.CLASSIFICATIONGROUP_ID
					LEFT JOIN CLASSIFICATION CF
					ON CFS.CLASSIFICATIONS_ID = CF.CLASSIFICATIONS_ID
					WHERE CGP.OPPORTUNITY_ID = V_FUNDINGBODYID;

				elseif  V_MODULEID=4
				then

					SELECT   CGP.CLASSIFICATIONGROUP_ID,
					CGP.FUNDINGBODY_ID,
					CFS.TYPE,
					CFS.CLASSIFICATIONS_ID,
					CF.FREQUENCY,
					CF.CODE,
					CF.CLASSIFICATION_TEXT
					FROM   CLASSIFICATIONGROUP CGP
					LEFT JOIN CLASSIFICATIONS CFS
					ON CGP.CLASSIFICATIONGROUP_ID = CFS.CLASSIFICATIONGROUP_ID
					LEFT JOIN CLASSIFICATION CF
					ON CFS.CLASSIFICATIONS_ID = CF.CLASSIFICATIONS_ID
					WHERE CGP.AWARD_ID = V_FUNDINGBODYID;
				end if;

			END IF;
		END IF;			
	END;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_contactinsert_s2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_contactinsert_s2`(
   p_workflowid         INTEGER,
   p_mode               INTEGER,
   p_insdel             INTEGER,
   p_contactid          INTEGER,
   p_type               VARCHAR(4000),
   p_title              VARCHAR(4000),
   p_telephone          VARCHAR(4000),
   p_fax                VARCHAR(4000),
   p_email              VARCHAR(4000),
   p_url                VARCHAR(4000),
   p_website_text       VARCHAR(4000),
   p_country            VARCHAR(4000),
   p_room               VARCHAR(4000),
   p_street             VARCHAR(4000),
   p_state              VARCHAR(4000),
   p_city               VARCHAR(4000),
   p_postalcode         VARCHAR(4000),
   p_prefix             VARCHAR(4000),
   p_givenname          VARCHAR(4000),
   p_middlename         VARCHAR(4000),
   p_surname            VARCHAR(4000),
   p_suffix             VARCHAR(4000),
   p_LANG               VARCHAR(4000)
)
sp_lbl:

BEGIN
	DECLARE v_fundingbodyid   INTEGER;
	DECLARE v_value           INTEGER;
	DECLARE v_contact         INTEGER;
	DECLARE v_count           INTEGER;
	DECLARE v_contactcount    INTEGER;
	DECLARE v_count1          INTEGER;
	DECLARE v_moduleid        integer;
   
	SELECT   ID, moduleid INTO   v_fundingbodyid, v_moduleid FROM   sci_workflow WHERE   workflowid = p_workflowid;

	IF v_moduleid = 2
	THEN
		IF p_mode = 1 AND p_insdel = 0
		THEN
			SELECT   COUNT(*) INTO   v_count FROM   contacts WHERE   fundingbody_id = v_fundingbodyid;

			IF v_count = 0
			THEN
				SELECT   contacts_seq.NEXTVAL INTO v_value FROM DUAL;

				INSERT INTO contacts VALUES   (v_value, v_fundingbodyid);
			ELSE
				SELECT   contacts_id INTO   v_value FROM   contacts
				WHERE   fundingbody_id = v_fundingbodyid;
			END IF;

			SELECT   contact_seq.NEXTVAL INTO v_contact FROM DUAL;

			INSERT INTO contact (TYPE,
                              title,
                              telephone,
                              fax,
                              email,
                              contact_id,
                              contacts_id)
			VALUES   (p_type,
                     p_title,
                     p_telephone,
                     p_fax,
                     p_email,
                     v_contact,
                     v_value);

			IF p_url IS NOT NULL
			THEN
				INSERT INTO website (url, website_text, contact_id,Lang)
				VALUES   (p_url, p_website_text, v_contact,p_LANG);
			END IF;

			IF p_country IS NOT NULL
			THEN
				INSERT INTO address (countryTEST,
                                 room,
                                 street,
                                 city,
                                 state,
                                 postalcode,
                                 contact_id)
				VALUES   (p_country,
                        p_room,
                        p_street,
                        p_city,
                        p_state,
                        p_postalcode,
                        v_contact);
			END IF;

			IF p_givenname IS NOT NULL AND p_surname IS NOT NULL
			THEN
				INSERT INTO contactname (prefix,
                                     givenname,
                                     middlename,
                                     surname,
                                     suffix,
                                     contact_id)
				VALUES   (p_prefix,
                        p_givenname,
                        p_middlename,
                        p_surname,
                        p_suffix,
                        v_contact);
			END IF;
      -- ***********************************************************************
		ELSEIF p_mode = 2 AND p_insdel = 0
		THEN
			SELECT   COUNT(*) INTO   v_count FROM   officers WHERE   fundingbody_id = v_fundingbodyid;

			IF v_count = 0
			THEN
				SELECT   officers_seq.NEXTVAL INTO v_value FROM DUAL;

				INSERT INTO officers VALUES   (v_value, v_fundingbodyid);
			ELSE
				SELECT   officers_id INTO   v_value FROM   officers WHERE   fundingbody_id = v_fundingbodyid;
			END IF;

			SELECT   contact_seq.NEXTVAL INTO v_contact FROM DUAL;

			INSERT INTO contact (TYPE,
                              title,
                              telephone,
                              fax,
                              email,
                              contact_id,
                              officers_id)
			VALUES   (p_type,
                     p_title,
                     p_telephone,
                     p_fax,
                     p_email,
                     v_contact,
                     v_value);

			IF p_url IS NOT NULL
			THEN
				INSERT INTO website (url, website_text, contact_id) VALUES   (p_url, p_website_text, v_contact);
			END IF;

			IF p_country IS NOT NULL
			THEN
				INSERT INTO address (countryTEST,
                                 room,
                                 street,
                                 city,
                                 state,
                                 postalcode,
                                 contact_id)
				VALUES   (p_country,
                        p_room,
                        p_street,
                        p_city,
                        p_state,
                        p_postalcode,
                        v_contact);
			END IF;

			IF p_givenname IS NOT NULL AND p_surname IS NOT NULL
			THEN
				INSERT INTO contactname (prefix,
                                     givenname,
                                     middlename,
                                     surname,
                                     suffix,
                                     contact_id)
				VALUES   (p_prefix,
                        p_givenname,
                        p_middlename,
                        p_surname,
                        p_suffix,
                        v_contact);
			END IF;
      -- **************************************************************************
		ELSEIF p_mode = 3 AND p_insdel = 0
		THEN
			SELECT   COUNT(*) INTO   v_count FROM   contactinfo WHERE   fundingbody_id = v_fundingbodyid;

			IF v_count = 0
			THEN
				SELECT   contactinfo_seq.NEXTVAL INTO v_value FROM DUAL;

				INSERT INTO contactinfo (contactinfo_id, fundingbody_id) VALUES   (v_value, v_fundingbodyid);
			ELSE
				SELECT   contactinfo_id INTO   v_value FROM   contactinfo WHERE   fundingbody_id = v_fundingbodyid;
			END IF;

			SELECT   contact_seq.NEXTVAL INTO v_contact FROM DUAL;

			INSERT INTO contact (TYPE,
                              title,
                              telephone,
                              fax,
                              email,
                              contact_id,
                              contactinfo_id)
			VALUES   (p_type,
                     p_title,
                     p_telephone,
                     p_fax,
                     p_email,
                     v_contact,
                     v_value);

			IF p_url IS NOT NULL
			THEN
				INSERT INTO website (url, website_text, contact_id,LANG) VALUES   (p_url, p_website_text, v_contact,p_LANG);
			END IF;

			IF p_country IS NOT NULL
			THEN
				INSERT INTO address (countryTEST,
                                 room,
                                 street,
                                 city,
                                 state,
                                 postalcode,
                                 contact_id)
				VALUES   (p_country,
                        p_room,
                        p_street,
                        p_city,
                        p_state,
                        p_postalcode,
                        v_contact);
			END IF;

			IF p_givenname IS NOT NULL AND p_surname IS NOT NULL
			THEN
				INSERT INTO contactname (prefix,
                                     givenname,
                                     middlename,
                                     surname,
                                     suffix,
                                     contact_id)
				VALUES   (p_prefix,
                        p_givenname,
                        p_middlename,
                        p_surname,
                        p_suffix,
                        v_contact);
			END IF;
      -- --**********************************************************************
		ELSEIF p_mode = 1 AND p_insdel = 1
		THEN
			DELETE FROM   website WHERE   contact_id = p_contactid;

			DELETE FROM   address WHERE   contact_id = p_contactid;

			DELETE FROM   contactname WHERE   contact_id = p_contactid;

			DELETE FROM   contact WHERE   contact_id = p_contactid;

			SELECT   COUNT(*)
			INTO   v_contactcount
			FROM   contact
			WHERE   contacts_id = (SELECT   contacts_id
                                   FROM   contacts
                                  WHERE   fundingbody_id = v_fundingbodyid);

			IF v_contactcount = 0
			THEN
				DELETE FROM   contacts WHERE   fundingbody_id = v_fundingbodyid;
			END IF;
      -- *******************************************************************
		ELSEIF p_mode = 2 AND p_insdel = 1
		THEN
			DELETE FROM   website WHERE   contact_id = p_contactid;

			DELETE FROM   address WHERE   contact_id = p_contactid;

			DELETE FROM   contactname WHERE   contact_id = p_contactid;

			DELETE FROM   contact WHERE   contact_id = p_contactid;

			SELECT   COUNT(*)
			INTO   v_contactcount
			FROM   contact
			WHERE   officers_id = (SELECT   officers_id
                                   FROM   officers
                                  WHERE   fundingbody_id = v_fundingbodyid);

			IF v_contactcount = 0
			THEN
				DELETE FROM   officers WHERE   fundingbody_id = v_fundingbodyid;
			END IF;
      -- **************************************************************************
		ELSEIF p_mode = 3 AND p_insdel = 1
		THEN
			DELETE FROM   website WHERE   contact_id = p_contactid;

			DELETE FROM   address WHERE   contact_id = p_contactid;

			DELETE FROM   contactname WHERE   contact_id = p_contactid;

			DELETE FROM   contact WHERE   contact_id = p_contactid;

			SELECT   COUNT(*)
			INTO   v_contactcount
			FROM   contact
			WHERE   contactinfo_id =
                     (SELECT   contactinfo_id
                        FROM   contactinfo
                       WHERE   fundingbody_id = v_fundingbodyid);

			IF v_contactcount = 0
			THEN
				DELETE FROM   contactinfo WHERE   fundingbody_id = v_fundingbodyid;
			END IF;
      -- *************************************************************************
		ELSEIF p_insdel = 2
		THEN
			SELECT   COUNT(*)
			INTO   v_count1
			FROM   website
			WHERE   contact_id = p_contactid;

			IF v_count1 = 0 AND p_url IS NOT NULL
			THEN
				INSERT INTO website (url, website_text, contact_id)
				VALUES   (p_url, p_website_text, p_contactid);
			END IF;
         
            UPDATE   website
               SET   url = p_url, website_text = p_website_text,lang=p_LANG
             WHERE   contact_id = p_contactid;
        
			SELECT   COUNT(*)
			INTO   v_count1
			FROM   address
			WHERE   contact_id = p_contactid;

			IF v_count1 = 0 AND p_country IS NOT NULL
			THEN
				INSERT INTO address (countryTEST,
                                 room,
                                 street,
                                 city,
                                 state,
                                 postalcode,
                                 contact_id)
				VALUES   (p_country,
                        p_room,
                        p_street,
                        p_city,
                        p_state,
                        p_postalcode,
                        p_contactid);
			END IF;

			IF p_country IS NOT NULL
			THEN
				UPDATE   address
				SET   countryTEST = p_country,
                     room = p_room,
                     street = p_street,
                     city = p_city,
                     state = p_state,
                     postalcode = p_postalcode
				WHERE   contact_id = p_contactid;
			END IF;

			SELECT   COUNT(*)
			INTO   v_count1
			FROM   contactname
			WHERE   contact_id = p_contactid;

			IF v_count1 = 0 AND p_surname IS NOT NULL                  
			THEN
				INSERT INTO contactname (prefix,
                                     givenname,
                                     middlename,
                                     surname,
                                     suffix,
                                     contact_id)
				VALUES   (p_prefix,
                        p_givenname,
                        p_middlename,
                        p_surname,
                        p_suffix,
                        p_contactid);					
			ELSE
            IF p_givenname IS NOT NULL AND p_surname IS NOT NULL 
			THEN
				UPDATE  contactname
                  SET    prefix = p_prefix,
                      givenname = p_givenname,
                     middlename = p_middlename,
                        surname = p_surname,
                         suffix = p_suffix
				WHERE contact_id = p_contactid;               
            ELSE
				DELETE FROM contactname WHERE contact_id = p_contactid;
                              
        END IF;
    END IF;

		UPDATE   contact SET   TYPE = p_type,
					  title = p_title,
					  telephone = p_telephone,
					  fax = p_fax,
					  email = p_email
		WHERE   contact_id = p_contactid;
	 
	END IF;

      -- ********************************************************
      DELETE FROM   contactname
            WHERE       prefix IS NULL
                    AND givenname IS NULL
                    AND middlename IS NULL
                    AND surname IS NULL
                    AND suffix IS NULL;

      -- ----******************************************************************
    IF p_mode = 1
    THEN         
        SELECT   c.TYPE,
                     c.title,
                     c.telephone,
                     c.email,
                     c.fax,
                     c.contact_id,
                     w.url,
                     w.website_text,
                    Case  when w.LANG is null then 'en' 
                     else w.Lang End LANG,
                     a.countryTEST countrycode,
                     cc.name  countryname,
                     a.room,
                     a.street,
                     a.city,
                     ifnull(a.state,a.state) statecode,
                      ifnull(sc.name,a.state) statename,
                     a.postalcode,
                     cn.prefix,
                     cn.givenname,
                     cn.middlename,
                     cn.surname,
                     cn.suffix
        FROM   contact c
        LEFT JOIN website w
        ON c.contact_id = w.contact_id
        LEFT JOIN address a
        ON c.contact_id = a.contact_id
        LEFT JOIN contactname cn
        ON c.contact_id = cn.contact_id
        RIGHT JOIN contacts cs
        ON sc.code=a.STATE
        RIGHT JOIN SCI_COUNTRYCODES cc
        ON cc.LCODE=a.COUNTRYTEST,        
		SCI_STATECODES sc
        WHERE c.contacts_id = cs.contacts_id
		AND cs.fundingbody_id = v_fundingbodyid;
        
    ELSEIF p_mode = 2
    THEN         
            SELECT   c.TYPE,
                     c.title,
                     c.telephone,
                     c.email,
                     c.fax,
                     c.contact_id,
                     w.url,
                     w.website_text,
                     a.countryTEST countrycode,
                     cc.name  countryname,
                     a.room,
                     a.street,
                     a.city,
                    ifnull(a.state,a.state) statecode,
                      ifnull(sc.name,a.state) statename,
                     a.postalcode,
                     cn.prefix,
                     cn.givenname,
                     cn.middlename,
                     cn.surname,
                     cn.suffix
            FROM   contact c
            LEFT JOIN website w
            ON c.contact_id = w.contact_id
            LEFT JOIN address a
            ON c.contact_id = a.contact_id
            LEFT JOIN contactname cn
            ON c.contact_id = cn.contact_id
            RIGHT JOIN SCI_STATECODES sc
            ON sc.code=a.STATE
            RIGHT JOIN SCI_COUNTRYCODES cc
            ON cc.LCODE=a.COUNTRYTEST,
                     officers cs
			WHERE c.officers_id = cs.officers_id
			AND cs.fundingbody_id = v_fundingbodyid;
            
    ELSEIF p_mode = 3
    THEN
         
            SELECT   c.TYPE,
                     c.title,
                     c.telephone,
                     c.email,
                     c.fax,
                     c.contact_id,
                     w.url,
                     w.website_text,
                     a.countryTEST countrycode,
                     cc.name  countryname,
                     a.room,
                     a.street,
                     a.city,
                   ifnull(a.state,a.state) statecode,
                      ifnull(sc.name,a.state) statename,
                     a.postalcode,
                     cn.prefix,
                     cn.givenname,
                     cn.middlename,
                     cn.surname,
                     cn.suffix
              FROM   contact c
              LEFT JOIN website w
              ON C.CONTACT_ID = w.contact_id
              LEFT JOIN address a
              ON c.contact_id = a.contact_id
              LEFT JOIN contactname cn
              ON c.contact_id = cn.contact_id
              RIGHT JOIN SCI_STATECODES sc
              ON sc.code=a.STATE
              RIGHT JOIN SCI_COUNTRYCODES cc
              ON cc.LCODE=a.COUNTRYTEST,
                     contactinfo cs                     
             WHERE c.contactinfo_id = cs.contactinfo_id
			 AND cs.FUNDINGBODY_ID = v_fundingbodyid;
    END IF;
      
    ELSEIF v_moduleid = 3
    THEN
		IF p_mode = 3 AND p_insdel = 0
		THEN
			SELECT   COUNT(*)
			INTO   v_count
			FROM   contactinfo
			WHERE   OPPORTUNITY_ID = v_fundingbodyid;

			IF v_count = 0
			THEN
				SELECT   contactinfo_seq.NEXTVAL INTO v_value FROM DUAL;

				INSERT INTO contactinfo (contactinfo_id, OPPORTUNITY_ID)
				VALUES   (v_value, v_fundingbodyid);
			ELSE
				SELECT   contactinfo_id
				INTO   v_value
				FROM   contactinfo
				WHERE   OPPORTUNITY_ID = v_fundingbodyid;
			END IF;

			SELECT   contact_seq.NEXTVAL INTO v_contact FROM DUAL;

			INSERT INTO contact (TYPE,
                              title,
                              telephone,
                              fax,
                              email,
                              contact_id,
                              contactinfo_id)
			VALUES   (p_type,
                     p_title,
                     p_telephone,
                     p_fax,
                     p_email,
                     v_contact,
                     v_value);

			IF p_url IS NOT NULL
			THEN
				INSERT INTO website (url, website_text, contact_id,LANG)
				VALUES   (p_url, p_website_text, v_contact,p_LANG);
			END IF;

			IF p_country IS NOT NULL
			THEN
				INSERT INTO address (countryTEST,
                                 room,
                                 street,
                                 city,
                                 state,
                                 postalcode,
                                 contact_id)
				VALUES   (p_country,
                        p_room,
                        p_street,
                        p_city,
                        p_state,
                        p_postalcode,
                        v_contact);
			END IF;

			IF p_givenname IS NOT NULL AND p_surname IS NOT NULL
			THEN
				INSERT INTO contactname (prefix,
                                     givenname,
                                     middlename,
                                     surname,
                                     suffix,
                                     contact_id)
				VALUES   (p_prefix,
                        p_givenname,
                        p_middlename,
                        p_surname,
                        p_suffix,
                        v_contact);
			END IF;
      -- **************************************************************************
		ELSEIF p_mode = 3 AND p_insdel = 1
		THEN
			DELETE FROM   website
               WHERE   contact_id = p_contactid;

			DELETE FROM   address
               WHERE   contact_id = p_contactid;

			DELETE FROM   contactname
               WHERE   contact_id = p_contactid;

			DELETE FROM   contact
               WHERE   contact_id = p_contactid;

			SELECT   COUNT(*)
			INTO   v_contactcount
			FROM   contact
			WHERE   contactinfo_id =
                     (SELECT   contactinfo_id
                        FROM   contactinfo
                       WHERE   OPPORTUNITY_ID = v_fundingbodyid);

			IF v_contactcount = 0
			THEN
				DELETE FROM   contactinfo
                  WHERE   OPPORTUNITY_ID = v_fundingbodyid;
			END IF;
      -- *************************************************************************     
		ELSEIF p_insdel = 2
		THEN
			SELECT   COUNT(*)
			INTO   v_count1
			FROM   website
			WHERE   contact_id = p_contactid;

			IF v_count1 = 0 AND p_url IS NOT NULL
			THEN
				INSERT INTO website (url, website_text, contact_id,lang)
				VALUES   (p_url, p_website_text, p_contactid,p_LANG);
			END IF;
         
            UPDATE   website
               SET   url = p_url, website_text = p_website_text,Lang=p_LANG
            WHERE   contact_id = p_contactid;         

			SELECT   COUNT(*)
			INTO   v_count1
			FROM   address
			WHERE   contact_id = p_contactid;

			IF v_count1 = 0 AND p_country IS NOT NULL
			THEN
				INSERT INTO address (countryTEST,
                                 room,
                                 street,
                                 city,
                                 state,
                                 postalcode,
                                 contact_id)
				VALUES   (p_country,
                        p_room,
                        p_street,
                        p_city,
                        p_state,
                        p_postalcode,
                        p_contactid);
			END IF;

			IF p_country IS NOT NULL
			THEN
				UPDATE   address
				SET   countryTEST = p_country,
                     room = p_room,
                     street = p_street,
                     city = p_city,
                     state = p_state,
                     postalcode = p_postalcode
				WHERE   contact_id = p_contactid;
			END IF;

			SELECT   COUNT(*)
			INTO   v_count1
			FROM   contactname
			WHERE   contact_id = p_contactid;
         -- -----------------------------------------------------------------------
         
			IF v_count1 = 0 
			THEN
         
				IF  p_givenname IS NOT NULL AND p_surname IS NOT NULL 
				THEN
					INSERT INTO contactname (prefix,
                                     givenname,
                                     middlename,
                                     surname,
                                     suffix,
                                     contact_id)
					VALUES   (p_prefix,
                        p_givenname,
                        p_middlename,
                        p_surname,
                        p_suffix,
                        p_contactid);									
            END IF;
		
        IF p_givenname IS NULL AND p_surname   IS NULL AND p_prefix IS NULL AND p_givenname IS NULL AND p_middlename IS NULL 
			AND p_surnam IS NULL AND p_suffix IS NULL 
		THEN
			DELETE FROM contactname WHERE contact_id = p_contactid;
              
		ELSEIF   
              p_givenname IS NULL OR
              p_surname   IS NULL THEN
            
             UPDATE   contactname
               SET    prefix = p_prefix,
                   givenname = p_givenname,
                  middlename = p_middlename,
                     surname = p_surname,
                      suffix = p_suffix
              WHERE   contact_id = p_contactid;
        END IF;
    END IF;
    
         UPDATE   contact
            SET   TYPE = p_type,
                  title = p_title,
                  telephone = p_telephone,
                  fax = p_fax,
                  email = p_email
          WHERE   contact_id = p_contactid;
              
         
END IF;

      -- ********************************************************
      DELETE FROM   contactname
            WHERE       prefix IS NULL
                    AND givenname IS NULL
                    AND middlename IS NULL
                    AND surname IS NULL
                    AND suffix IS NULL;

      -- ----******************************************************************
IF p_mode = 3
THEN
      
            SELECT            
              c.TYPE,
                     c.title,
                     c.telephone,
                     c.email,
                     c.fax,
                     c.contact_id,
                     w.url,
                     w.website_text,
                     Case  when w.LANG is null then 'en' 
                  else w.Lang End LANG,
                     a.countryTEST countrycode,
                     cc.name  countryname,
                     a.room,
                     a.street,
                     a.city,
                      ifnull(a.state,a.state) statecode,
                      ifnull(sc.name,a.state) statename,
                     a.postalcode,
                     cn.prefix,
                     cn.givenname,
                     cn.middlename,
                     cn.surname,  
                     cn.suffix
              FROM   contact c 
              LEFT JOIN website w
              ON C.CONTACT_ID = w.contact_id
              LEFT JOIN address a
              ON c.contact_id = a.contact_id
              LEFT JOIN contactname cn
              ON c.contact_id = cn.contact_id
              RIGHT JOIN SCI_STATECODES sc
              ON sc.code=a.STATE
              RIGHT JOIN SCI_COUNTRYCODES cc
              ON cc.LCODE=a.COUNTRYTEST,
              contactinfo cs
             WHERE c.contactinfo_id = cs.contactinfo_id
                     AND cs.OPPORTUNITY_ID = v_fundingbodyid;                                          
                   
      END IF;  
  END IF;
      
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_contactlist` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_contactlist`(p_workflowid       integer,
		 p_mode             integer
	 )
BEGIN
   DECLARE v_fundingbodyid   integer;
   DECLARE v_moduleid integer;
  
   SELECT   ID,moduleid
     INTO   v_fundingbodyid,v_moduleid
     FROM   sci_workflow
    WHERE   WORKFLOWID = p_workflowid;

if v_moduleid=2
then

   IF p_mode = 1
   THEN
      
         SELECT   c.TYPE,
                  c.TITLE,
                  c.TELEPHONE,
                  c.email,
                  c.FAX,
                  c.CONTACT_ID,
                  w.URL,
                  w.WEBSITE_TEXT,
                  Case  when w.LANG is null then 'en' 
                  else w.Lang End LANG,
                  a.countryTEST countrycode,
				  cc.name  countryname,
                  a.ROOM,
                  a.STREET,
                  a.CITY,
                  ifnull(a.state,a.state) statecode,
                     ifnull(sc.name,a.state) statename,
                  a.POSTALCODE,
                  cn.PREFIX,
                  cn.GIVENNAME,
                  cn.MIDDLENAME,
                  cn.SURNAME,
                  cn.SUFFIX
           FROM contact c LEFT JOIN  website w
			ON c.CONTACT_ID = w.CONTACT_ID
			LEFT JOIN address a
			ON c.CONTACT_ID = a.CONTACT_ID
			LEFT JOIN contactname cn
			ON c.CONTACT_ID = cn.CONTACT_ID
			RIGHT JOIN SCI_STATECODES sc 
			ON sc.code = a.STATE
			RIGHT JOIN SCI_COUNTRYCODES cc
			ON cc.LCODE=a.COUNTRYTEST,
			contacts cs
			WHERE c.CONTACTS_ID = cs.CONTACTS_ID
			AND cs.FUNDINGBODY_ID = v_fundingbodyid;
				  
   ELSEIF p_mode = 2
   THEN
      
         SELECT   c.TYPE,
                  c.TITLE,
                  c.TELEPHONE,
                  c.email,
                  c.FAX,
                  c.CONTACT_ID,
                  w.URL,
                  w.WEBSITE_TEXT,
                  Case  when w.LANG is null then 'en' 
                  else w.Lang End LANG,
                  a.countryTEST countrycode,
                     cc.name  countryname,
                  a.ROOM,
                  a.STREET,
                  a.CITY,
                  ifnull(a.state,a.state) statecode,
                     ifnull(sc.name,a.state) statename,
                  a.POSTALCODE,
                  cn.PREFIX,
                  cn.GIVENNAME,
                  cn.MIDDLENAME,
                  cn.SURNAME,
                  cn.SUFFIX
           FROM   contact c 
           LEFT JOIN website w 
           ON c.CONTACT_ID=w.CONTACT_ID
           LEFT JOIN address a
           ON c.CONTACT_ID = a.CONTACT_ID
           LEFT JOIN contactname cn
           ON c.CONTACT_ID = cn.CONTACT_ID
           LEFT JOIN officers cs
           ON c.OFFICERS_ID = cs.OFFICERS_ID
           RIGHT JOIN SCI_COUNTRYCODES cc
           ON cc.LCODE=a.COUNTRYTEST
           RIGHT JOIN SCI_STATECODES sc
           ON sc.code=a.STATE
          WHERE cs.FUNDINGBODY_ID = v_fundingbodyid;
          
   ELSEIF P_mode = 3
   THEN
      
         SELECT   c.TYPE,
                  c.TITLE,
                  c.TELEPHONE,
                  c.email,
                  c.FAX,
                  c.CONTACT_ID,
                  w.URL,
                  w.WEBSITE_TEXT,
                  Case  when w.LANG is null then 'en' 
                  else w.Lang End LANG,
                  a.countryTEST countrycode,
                     cc.name  countryname,
                  a.ROOM,
                  a.STREET,
                  a.CITY,
                   ifnull(a.state,a.state) statecode,
                     ifnull(sc.name,a.state) statename,
                  a.POSTALCODE,
                  cn.PREFIX,
                  cn.GIVENNAME,
                  cn.MIDDLENAME,
                  cn.SURNAME,
                  cn.SUFFIX
           FROM   contact c 
           LEFT JOIN website w 
           ON c.CONTACT_ID=w.CONTACT_ID
		   LEFT JOIN address a
           ON c.CONTACT_ID = a.CONTACT_ID
           LEFT JOIN contactname cn
           ON c.CONTACT_ID = cn.CONTACT_ID
           RIGHT JOIN SCI_STATECODES sc
           ON sc.code=a.STATE
           RIGHT JOIN SCI_COUNTRYCODES cc
           ON cc.LCODE=a.COUNTRYTEST,
		   contactinfo cs                  
		   WHERE c.CONTACTINFO_ID = cs.CONTACTINFO_ID
	       AND cs.FUNDINGBODY_ID = v_fundingbodyid;
           
   END IF;
   
elseif v_moduleid=3
then  

  IF P_mode = 3
   THEN
      
         SELECT   c.TYPE,
                  c.TITLE,
                  c.TELEPHONE,
                  c.email,
                  c.FAX,
                  c.CONTACT_ID,
                  w.URL,
                  w.WEBSITE_TEXT,
                  Case  when w.LANG is null then 'en' 
                  else w.Lang End LANG,
                 a.countryTEST countrycode,
                     cc.name  countryname,
                  a.ROOM,
                  a.STREET,
                  a.CITY,
                  ifnull(a.state,a.state) statecode,
                     ifnull(sc.name,a.state) statename,
                  a.POSTALCODE,
                  cn.PREFIX,
                  cn.GIVENNAME,
                  cn.MIDDLENAME,
                  cn.SURNAME,
                  cn.SUFFIX
           FROM   contact c 
           LEFT JOIN website w 
           ON c.CONTACT_ID=w.CONTACT_ID
		   LEFT JOIN address a
           ON c.CONTACT_ID = a.CONTACT_ID
           LEFT JOIN contactname cn
           ON c.CONTACT_ID = cn.CONTACT_ID       
           RIGHT JOIN SCI_COUNTRYCODES cc
           ON cc.LCODE=a.COUNTRYTEST
           RIGHT JOIN SCI_STATECODES sc
           ON sc.code=a.STATE,
           contactinfo cs				
           WHERE c.CONTACTINFO_ID = cs.CONTACTINFO_ID
		   AND cs.OPPORTUNITY_ID = v_fundingbodyid;
           
   END IF;

end if;
  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_CURRENCYTYPElist` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_CURRENCYTYPElist`(
)
BEGIN   
   
        SELECT   *
          FROM   SCI_CURRENCYTYPE
      ORDER BY   2;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_establishmentinsert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_establishmentinsert`(
   p_workflowid                     integer,
   p_ESTABLISHMENTDATE              VARCHAR(4000),
   p_ESTABLISHMENTCITY              VARCHAR(4000),
   p_ESTABLISHMENTSTATE             VARCHAR(4000),
   p_ESTABLISHMENTCOUNTRYCODE       VARCHAR(4000),
   p_ESTABLISHMENTDESCRIPTION       VARCHAR(4000),
   p_lang                            VARCHAR(4000)
)
BEGIN
   DECLARE v_fundingbodyid   long;
   DECLARE v_count           integer;

   SELECT   ID
     INTO   v_fundingbodyid
     FROM   sci_workflow
    WHERE   WORKFLOWID = p_workflowid;
  
 SELECT   COUNT(*)
     INTO   v_count
     FROM   establishmentinfo
    WHERE   FUNDINGBODY_ID = v_fundingbodyid;
    
   IF v_count = 0
   THEN
		
      INSERT INTO establishmentinfo (ESTABLISHMENTDATE,
                                     ESTABLISHMENTCITY,
                                     ESTABLISHMENTSTATE,
                                     ESTABLISHMENTCOUNTRYCODE,
                                     ESTABLISHMENTDESCRIPTION,
                                     lang,
                                     FUNDINGBODY_ID)
        VALUES   (p_ESTABLISHMENTDATE,
                  p_ESTABLISHMENTCITY,
                  p_ESTABLISHMENTSTATE,
                  p_ESTABLISHMENTCOUNTRYCODE,
                  p_ESTABLISHMENTDESCRIPTION,
                  p_lang,
                  v_fundingbodyid);
   ELSE
      
      UPDATE   establishmentinfo
         SET   ESTABLISHMENTDATE = p_ESTABLISHMENTDATE,
               ESTABLISHMENTCITY = p_ESTABLISHMENTCITY,
               ESTABLISHMENTSTATE = p_ESTABLISHMENTSTATE,
               ESTABLISHMENTCOUNTRYCODE = p_ESTABLISHMENTCOUNTRYCODE,
               ESTABLISHMENTDESCRIPTION = p_ESTABLISHMENTDESCRIPTION,
               lang=p_lang
              where  FUNDINGBODY_ID = v_fundingbodyid;
   END IF;
   

      SELECT   ESTABLISHMENTDATE,ESTABLISHMENTCITY,ESTABLISHMENTSTATE,ESTABLISHMENTCOUNTRYCODE
      ,ESTABLISHMENTDESCRIPTION,FUNDINGBODY_ID,(CASE
                   WHEN lang IS NULL THEN 'en'
                   ELSE lang
                END) Lang
        FROM   establishmentinfo
       WHERE   FUNDINGBODY_ID = v_fundingbodyid;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_establishmentlist` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_establishmentlist`(
   p_workflowid       integer
)
BEGIN
   DECLARE v_fundingbodyid   bigint;
    
   SELECT   ID
     INTO   v_fundingbodyid
     FROM   sci_workflow
    WHERE   WORKFLOWID = p_workflowid;
   
      SELECT   COUNTRYID,
               NAME,
               LOWER (LCODE) LCODE,
               LOWER (SCODE) SCODE
        FROM   sci_countrycodes;
   
      SELECT   sc.lcode countrycode, ss.NAME, ss.code
        FROM   sci_countrycodes sc, sci_statecodes ss
       WHERE   sc.countryid = ss.countryid;
   
      SELECT   *
        FROM   establishmentinfo
       WHERE   FUNDINGBODY_ID = v_fundingbodyid;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_expiredetail` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_expiredetail`(
	pUserId	INT
)
BEGIN
	DECLARE lLogDate	DATE;
    
    SELECT logdate INTO lLogDate FROM sci_expired_opplist WHERE ROWNUM = 1 ORDER BY logdate;
    
    IF DATE(lLogDate) <> CURDATE()
    THEN
		DELETE FROM sci_expired_opplist WHERE 1=1;
        
        INSERT INTO sci_expired_opplist (Modulename, moduleid, oppname, fundingbodyname, id, taskname, taskid, cycle, duedate, cid)
		SELECT * FROM
			(SELECT modulename, moduleid, INITCAP(oppname) oppname, fundingbodyname, OPPORTUNITY_ID id, taskname, taskid, cycle, duedate, id cid FROM
				(SELECT DISTINCT O.OPPORTUNITY_ID, o.id id, f_loi_date_return_2 (O.OPPORTUNITY_ID, vmx1.mx, vmx2.mx) duedate, 'Opportunity' modulename, 3 moduleid, 
                OM.OPPORTUNITYNAME oppname, get_opp_fundingbodyname(o.opportunity_id) fundingbodyname, 'Expire' taskname, 7 taskid, 15 cycle FROM
					(SELECT opportunity_id, id, TRUNC (SYSDATE) curr_Date, FUNDINGBODY_ID FROM opportunity) o,
				fundingbody_master fm, Opportunity_Master om right outer join
                (SELECT MAX(sequence_id) mx, OPPORTUNITY_ID FROM sci_opp_loi_duedate_detail WHERE date_type IN (1, 2) GROUP BY opportunity_id, date_type) vmx1 ON OM.OPPORTUNITYID = vmx1.opportunity_id
                WHERE OM.OPPORTUNITYID = O.OPPORTUNITY_ID
                AND FM.FUNDINGBODY_ID = o.fundingbody_id AND om.statuscode IN (1, 2, 5, 6) AND EXISTS 
					(SELECT 1 FROM opportunity WHERE opportunity_id = OM.OPPORTUNITYID AND TRIM(opportunitystatus) = 'Active') AND EXISTS 
						(SELECT 1 FROM sci_xmldeliverydetail WHERE id = O.OPPORTUNITY_ID AND MODULEID = 3)) table2
				WHERE duedate IS NOT NULL AND duedate <= TRUNC(SYSDATE) 
                UNION
                SELECT 'Opportunity' modulename, 3 moduleid, INITCAP (OM.OPPORTUNITYNAME) oppname, fundingbodyname, O.OPPORTUNITY_ID id, 'Expire' taskname, 
                7 taskid, 15 cycle, F_LOI_DATE_RETURN_2 (sciwf.id, vmx1.mx, vmx2.mx) duedate, o.id cid 
                FROM sci_workflow sciwf, opportunity o, fundingbody_master fm, opportunity_master om right outer join
					(SELECT MAX(sequence_id) mx, OPPORTUNITY_ID FROM sci_opp_loi_duedate_detail WHERE date_type IN (1, 2) GROUP BY opportunity_id, date_type) vmx1 ON OM.OPPORTUNITYID = vmx1.opportunity_id
                    WHERE sciwf.id = om.opportunityid
                    AND O.OPPORTUNITY_ID = OM.OPPORTUNITYID AND FM.FUNDINGBODY_ID = OM.FUNDINGBODYID AND sciwf.CYCLE > 0 AND moduleid = 3 AND taskid = 7 
                    AND completeddate IS NULL AND statusid = 6 AND om.statuscode IN (1, 2, 5, 6) AND EXISTS 
						(SELECT 1 FROM sci_xmldeliverydetail WHERE id = OM.OPPORTUNITYID AND MODULEID = 3)) table1
         WHERE TO_CHAR(DUEDATE,'yyyy') <> '1900'                                                
         ORDER BY DUEDATE ASC;
    END IF;
    
    SELECT modulename, moduleid, oppname, fundingbodyname, id, taskname, taskid, cycle, duedate, id cid FROM SCI_expired_opplist WHERE flag = 0;
    
    UPDATE sci_language_detail SET tran_type_id = 1 WHERE scival_id IN (SELECT ID FROM SCI_expired_opplist) AND moduleid = 3 AND column_id = 5 AND tran_type_id = 0;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_fiscalclosedate` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_fiscalclosedate`(
   p_workflowid             integer,
   p_insdel                 integer,   -- 0 * insert ,1 * delete ,2 * update
   p_userid                 integer,
   p_FINANCIALINFO_ID       integer,
   p_fiscalclosedate_column  datetime
)
BEGIN
   DECLARE v_fundingbody_id     integer;
   DECLARE v_financialinfo_id   integer;
   DECLARE v_count              integer;
   DECLARE v_count1             integer;
   DECLARE v_count2             integer;
    
   SELECT   ID
     INTO   v_fundingbody_id
     FROM   sci_workflow
    WHERE   WORKFLOWID = p_workflowid;
   
   IF p_insdel = 0
   THEN
      SELECT   COUNT(*)
        INTO   v_count
        FROM   financialinfo
       WHERE   fundingbody_id = v_fundingbody_id;

      IF (v_count = 0)
      THEN
         SELECT   financial_seq.NEXTVAL INTO v_financialinfo_id FROM DUAL;
         
          insert into financialinfo values(v_financialinfo_id,v_fundingbody_id);

         INSERT INTO fiscalclosedate (
                                         fiscalclosedate_column,
                                         financialinfo_id
                    )
           VALUES   (p_fiscalclosedate_column, v_financialinfo_id);
         
      ELSE
         SELECT   FINANCIALINFO_ID
           INTO   v_FINANCIALINFO_ID
           FROM   financialinfo
          WHERE   fundingbody_id = v_fundingbody_id;
          
           select count(*) into v_count  from fiscalclosedate where financialinfo_id=v_financialinfo_id 
           and FISCALCLOSEDATE_COLUMN=p_FISCALCLOSEDATE_COLUMN;
          if(v_count=0)
           then

         INSERT INTO fiscalclosedate (
                                         fiscalclosedate_column,
                                         financialinfo_id
                    )
           VALUES   (p_fiscalclosedate_column, v_financialinfo_id);				
         
         end if;
      END IF;
   --
   ELSEIF p_insdel = 2
   THEN
      SELECT   COUNT(*)
        INTO   v_count1
        FROM   fiscalclosedate
       WHERE   financialinfo_id = p_financialinfo_id;
        SET v_financialinfo_id=p_financialinfo_id;
      IF (v_count1 > 0)
      THEN
         UPDATE   fiscalclosedate
            SET   fiscalclosedate_column = p_fiscalclosedate_column
          WHERE   financialinfo_id = p_financialinfo_id ;
         
      END IF;
  
   ELSEIF p_insdel = 1
   THEN
      SELECT   COUNT(*)
        INTO   v_count2
        FROM   fiscalclosedate
       WHERE   financialinfo_id = p_financialinfo_id;
       
        SET v_financialinfo_id=p_financialinfo_id;

      IF (v_count2 > 0)
      THEN
         DELETE FROM   fiscalclosedate
               WHERE   financialinfo_id = p_financialinfo_id and FISCALCLOSEDATE_COLUMN=p_fiscalclosedate_column;
		
      END IF;
   END IF;

       SELECT  FISCALCLOSEDATE_COLUMN,FINANCIALINFO_ID
        FROM fiscalclosedate
       WHERE   financialinfo_id = v_financialinfo_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_FundedProgramTypelist` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_FundedProgramTypelist`(
   p_workflowid       integer
)
BEGIN
   DECLARE v_fundingbodyid   integer;
    
   SELECT   ID
     INTO   v_fundingbodyid
     FROM   sci_workflow
    WHERE   WORKFLOWID = p_workflowid;

   SELECT   * FROM sci_fundedprogramstypelist;

      SELECT   FUNDINGBODY_ID,
               fps.FUNDEDPROGRAMSTYPES_ID,
               ID,
               FUNDEDPROGRAMSTYPE_TEXT
        FROM   FUNDEDPROGRAMSTYPES fps, FUNDEDPROGRAMSTYPE fp
       WHERE   fp.FUNDEDPROGRAMSTYPES_ID = fps.FUNDEDPROGRAMSTYPES_ID
               AND fps.FUNDINGBODY_ID = v_fundingbodyid;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_fundingbase_41` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_fundingbase_41`(
   p_FUNDINGBODYID             bigint,
   p_ORGDBID                         varchar(20),
   p_TYPE                            varchar(4000),
   p_TRUSTING                        varchar(4000),
   p_COUNTRY                         varchar(4000),
   p_STATE                           varchar(4000),
   p_COLLECTIONCODE                  varchar(4000),
   p_HIDDEN                          varchar(4000),
   p_CANONICALNAME                   LONGTEXT,
   p_PREFERREDORGNAME                LONGTEXT,
   p_CONTEXTNAME                     LONGTEXT,
   p_ABBREVNAME                      LONGTEXT,
   p_ELIGIBILITYDESCRIPTION          LONGTEXT,
   p_IDsubtypeid                     LONGTEXT,
   p_SUBTYPE_TEXT                    LONGTEXT,
   p_workflowid                      bigint,
   p_userid                          integer,
   p_projectname                     varchar(4000),
   p_recordsource                    varchar(4000),  
   p_awardsuccesrate                 double,    
   p_comment_desc                    longtext,      
   p_defunct                        varchar(4000),  
   p_crossrefid                      varchar(4000),
   P_extendedRecord                varchar(4000),
   p_capop                         varchar(4000),
   p_oppsup                        varchar(4000),
   p_CapAwards                     varchar(4000),
   p_AwardsSup                      varchar(4000),
   p_tierinfo                      varchar(4000),
   p_profit                       varchar(4000),
   p_oppFrequency                 varchar(4000),
   p_awFrequency                  varchar(4000)
)
BEGIN
   
DECLARE v_REVISIONHISTORYID integer;
DECLARE x_MODULEID integer;DECLARE x_CYCLE integer;
DECLARE v_region varchar(2000);
DECLARE v_subregion varchar(2000);
DECLARE v_FUNDINGID bigint;
SET v_FUNDINGID = 0;
   SELECT   ID,MODULEID,CYCLE
     INTO   p_FUNDINGBODYID,x_MODULEID,x_CYCLE
     FROM   sci_workflow
    WHERE   workflowid = p_workflowid;
  Select region into v_region from TEMPTABLE_SUBREGION where Upper(Alpha_3)= Upper(p_COUNTRY);
  Select subregion into v_subregion from TEMPTABLE_SUBREGION where Upper(Alpha_3)= Upper(p_COUNTRY);

   IF p_ORGDBID = '0'
   THEN
      INSERT INTO fundingbody (FUNDINGBODY_ID,
                               ORGDBID,
                               TYPE,
                               TRUSTING,
                               COUNTRY,
                               STATE,
                               COLLECTIONCODE,
                               HIDDEN,
                               ELIGIBILITYDESCRIPTION,
                               RECORDSOURCE,
                               AWARDSUCCESRATE,
                               comment_desc,
                              defunct,
                              crossrefid,
                              extendedRecord,
                               captureawards,
                               captureopportunities,
                               tierinfo,
                               awardssupplier,
                               opportunitiessupplier,
                              profit,
                              opportunitiesfrequency,
                              awardsfrequency)
        VALUES   (p_FUNDINGBODYID,
                  p_FUNDINGBODYID,
                  p_TYPE,
                  p_TRUSTING,
                  p_COUNTRY,
                  p_STATE,
                  p_COLLECTIONCODE,
                  p_HIDDEN,
                  p_ELIGIBILITYDESCRIPTION,
                  P_RECORDSOURCE,
                  P_AWARDSUCCESRATE,
                  p_comment_desc,
                  p_defunct,
                  p_crossrefid,
                  P_extendedRecord,
                  p_CapAwards,
                  p_capop,
                  p_tierinfo,
                  p_AwardsSup,
                  p_oppsup,
                  p_profit,
                  p_oppFrequency,
                  p_awFrequency);

      INSERT INTO subtype (ID, SUBTYPE_TEXT, FUNDINGBODY_ID)
        VALUES   (p_IDsubtypeid, p_SUBTYPE_TEXT, p_FUNDINGBODYID);
       
     -- SELECT REVISIONHISTORYID_SEQ.NEXTVAL INTO V_REVISIONHISTORYID  FROM DUAL;
        SELECT V_REVISIONHISTORYID+1 INTO V_REVISIONHISTORYID  FROM DUAL;
      INSERT INTO REVISIONHISTORY(STATUS,REVISIONHISTORY_ID,FUNDINGBODY_ID) VALUES('new',V_REVISIONHISTORYID,P_FUNDINGBODYID);
       
      INSERT INTO CREATEDDATE(VERSION,CREATEDDATE_TEXT,REVISIONHISTORY_ID)VALUES (0,SYSDATE(),V_REVISIONHISTORYID);
       
      INSERT INTO sci_userlog (workflowid,
                              moduleid,
                              id,
                              cycleid,
                              pagename,
                              userid,
                              action)
     VALUES   (p_workflowid,
               x_moduleid,
               p_FUNDINGBODYID,
               X_cycle,
               p_projectname,
               p_userid,
               'INSERT');
             
 ELSE
      UPDATE   fundingbody
         SET   TYPE = p_TYPE,
               TRUSTING = p_TRUSTING,
               COUNTRY = p_COUNTRY,
               STATE = p_STATE,
               COLLECTIONCODE = p_COLLECTIONCODE,
               HIDDEN = p_HIDDEN,
               ELIGIBILITYDESCRIPTION = p_ELIGIBILITYDESCRIPTION,
               RECORDSOURCE = P_RECORDSOURCE,
               AWARDSUCCESRATE = P_AWARDSUCCESRATE,
               comment_desc = p_comment_desc,
               defunct= p_defunct,    
               crossrefid=p_crossrefid,
               extendedRecord =P_extendedRecord,  
               captureawards =p_CapAwards,
               captureopportunities= p_capop,
               tierinfo=p_tierinfo,
               awardssupplier=p_AwardsSup,
                opportunitiessupplier= p_oppsup,    
                profit=p_profit,
                opportunitiesfrequency=p_oppfrequency,
                awardsfrequency=p_awfrequency
       WHERE   FUNDINGBODY_ID = p_FUNDINGBODYID AND ORGDBID = p_ORGDBID;
       
          UPDATE   subtype
         SET   ID = p_IDsubtypeid, SUBTYPE_TEXT = p_SUBTYPE_TEXT
       WHERE   FUNDINGBODY_ID = p_FUNDINGBODYID;
       
      UPDATE   award
         SET   trusting = p_TRUSTING,recordsource = p_recordsource
       WHERE   fundingbody_id = p_FUNDINGBODYID;
   
      UPDATE   oppotunity
         SET   trusting = p_TRUSTING, recordsource = p_recordsource
       WHERE   fundingbody_id = p_FUNDINGBODYID;  
       
       SELECT WORKFLOWID INTO v_FUNDINGID FROM sci_userlog WHERE workflowid =  p_workflowid;
       
       IF v_FUNDINGID = 0
       THEN
       INSERT INTO sci_userlog (workflowid,
                            moduleid,
                            id,
                            cycleid,
                            pagename,
                            userid,
                            action)
		VALUES   (p_workflowid,
               x_moduleid,
               p_FUNDINGBODYID,
               X_cycle,
               p_projectname,
               p_userid,
               'UPDATE');
	 ELSE 
      UPDATE sci_userlog SET moduleid=x_moduleid, id=p_FUNDINGBODYID,cycleid=X_cycle,pagename=p_projectname,userid=p_userid,action='UPDATE' WHERE workflowid = p_workflowid;
	END IF;
   END IF;

 UPDATE   FUNDINGBODY_MASTER
    SET   FUNDINGBODYNAME = P_PREFERREDORGNAME
  WHERE   FUNDINGBODY_ID =P_FUNDINGBODYID;
 
  UPDATE   ORG
     SET   ORG_TEXT = P_PREFERREDORGNAME
   WHERE   ORGDBID = P_ORGDBID;
 
 UPDATE   FBPROGRESS
    SET   FUNDINGBODYNAME = P_PREFERREDORGNAME
  WHERE   FUNDINGBODY_ID = P_FUNDINGBODYID;
 
 COMMIT;
  /*IF v_region is not null and v_subregion is not null
               THEN
               sci_iteminserttemp41(p_workflowid,7,0,0,'region',v_region,'','','en',p_mdata,p_o_status,p_o_error);
               sci_iteminserttemp41(p_workflowid,11,0,0,'subRegion',v_subregion,'','','en',p_mdata,p_o_status,p_o_error);
               END IF;*/
   
      SELECT   fd.FUNDINGBODY_ID,
               ORGDBID,
               TYPE,
               TRUSTING,
               COUNTRY,
               STATE,
               COLLECTIONCODE,
               HIDDEN,              
               ELIGIBILITYDESCRIPTION,
               ID subtypeid,
               SUBTYPE_TEXT,
               recordsource,
               awardsuccesrate,
               comment_desc,
               defunct,
               CROSSREFID,
               extendedRecord,
               captureawards,
               captureopportunities,
                               tierinfo,
                               awardssupplier,
                               opportunitiessupplier,
                               profit,
                               opportunitiesfrequency,
                               awardsfrequency
        FROM   fundingbody fd RIGHT JOIN subtype su
        ON fd.FUNDINGBODY_ID = su.FUNDINGBODY_ID
       WHERE  fd.FUNDINGBODY_ID = p_FUNDINGBODYID;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_fundingbodyurlinsert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_fundingbodyurlinsert`(
	pOrgDbId	INT,
    pUserId		INT
)
BEGIN
	DECLARE lFundingBodyCount	INT;
    DECLARE lBatch				INT;
    DECLARE lUrlMasterCount		INT;
    
	SELECT COUNT(1) INTO lFundingBodyCount From fundingbody WHERE ORGDBID = pOrgDbId;
    
    IF lFundingBodyCount > 0
    THEN
		SELECT IFNULL(MAX(batch), 0) + 1 INTO lBatch FROM sci_urlmaster WHERE ORGDBID = pOrgDbId;
        
        CREATE TEMPORARY TABLE distinct_url SELECT DISTINCT URL FROM temp_scivalurl;
        
        SELECT COUNT(1) INTO lUrlMasterCount FROM sci_urlmaster WHERE ORGDBID = pOrgDbId AND ROWNUM = 1;
        
        IF lUrlMasterCount > 0
        THEN
			INSERT INTO sci_urlmaster (ORGDBID, URLID, URL, status, CREATEDBY, CREATEDDATE,batch)
            SELECT pOrgDbId, SCI_URLSEQ.NEXTVAL, distinct_url.*, 0, pUserId, SYSDATE, v_batch FROM distinct_url;
        ELSE
			INSERT INTO sci_urlmaster (ORGDBID, URLID, URL, status, CREATEDBY, CREATEDDATE,batch)
            SELECT pOrgDbId, SCI_URLSEQ.NEXTVAL, URL, 0, pUserId, SYSDATE, v_batch 
            FROM (SELECT T1.URL FROM (SELECT COLUMN_VALUE URL FROM distinct_url) t1 
            LEFT JOIN (SELECT url FROM SCI_URLMASTER WHERE orgdbid = p_orgdbid) T2 ON TRIM (UPPER (t1.URL)) = TRIM (UPPER (t2.url)) WHERE T2.URL IS NULL) T;
        END IF;
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_getfiscalclosedate` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_getfiscalclosedate`(
   IN p_workflowid            integer
)
BEGIN
   DECLARE v_FUNDINGBODY_ID   integer;
   DECLARE v_moduleid         integer;
    
   SELECT   moduleid, id
     INTO   v_moduleid, v_FUNDINGBODY_ID
     FROM   sci_workflow
    WHERE   workflowid = p_workflowid;

   IF v_moduleid = 2
   THEN
 
         SELECT   *
           FROM   fiscalclosedate
          WHERE   FINANCIALINFO_ID IN
                        (SELECT   FINANCIALINFO_ID
                           FROM   FINANCIALINFO
                          WHERE   FUNDINGBODY_ID = v_FUNDINGBODY_ID);
      
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_GetHiddenStatus` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_GetHiddenStatus`(
	p_WorkId INTEGER
)
BEGIN
	select sci_checkhiddenstatus_fb(p_WorkId) hidden_cnt from dual;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_GetLanguageDetails` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_GetLanguageDetails`(
	p_langLength INTEGER
)
BEGIN

	SELECT * FROM sci_language_master 
    WHERE code_length = p_langLength  
    ORDER BY LANGUAGE_NAME;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_GETOPPORTUNITYDATES_5` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_GETOPPORTUNITYDATES_5`(
   P_WORKFLOWID                     INTEGER
)
BEGIN
   DECLARE V_MODULEID   INTEGER;
   DECLARE V_ID         INTEGER;
   DECLARE V_CYCLE      INTEGER;
    
   SELECT   MODULEID, ID, CYCLE INTO   V_MODULEID, V_ID, V_CYCLE FROM   SCI_WORKFLOW
   WHERE   WORKFLOWID = P_WORKFLOWID;
   
      SELECT   opportunity_id,
               DATE_FORMAT (loi_due_date, '%d-%m-%Y') loi_DATE,
               sequence_id,
               DATE_REMARKS,
               (CASE
                   WHEN lang IS NULL THEN 'en'
                   ELSE lang
                END) Lang
        FROM   sci_opp_loi_duedate_detail
       WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 1;

      SELECT   opportunity_id,
               (CASE
                   WHEN loi_due_date IS NULL THEN (DATE_REMARKS)
                   ELSE to_clob(DATE_FORMAT (loi_due_date, '%d-%m-%Y'))
                END)
                  DUE_DATE,
               sequence_id,
               DATE_REMARKS,
               (CASE
                   WHEN lang IS NULL THEN 'en'
                   ELSE lang
                END) Lang
        FROM   sci_opp_loi_duedate_detail
       WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 2;

      SELECT   opportunity_id,
               DATE_FORMAT (loi_due_date, '%d-%m-%Y') expiration_date,
               sequence_id,
               DATE_REMARKS,
               (CASE
                   WHEN lang IS NULL THEN 'en'
                   ELSE lang
                END) Lang
        FROM   sci_opp_loi_duedate_detail
       WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 3;

      SELECT   opportunity_id,
               DATE_FORMAT (loi_due_date, '%d-%m-%Y') firstpost_date,
               sequence_id,
               DATE_REMARKS,
               (CASE
                   WHEN lang IS NULL THEN 'en'
                   ELSE lang
                END) Lang
        FROM   sci_opp_loi_duedate_detail
       WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 4;

      SELECT   opportunity_id,
               DATE_FORMAT (loi_due_date, '%d-%m-%Y') lastmodifedpost_date,
               sequence_id,
               DATE_REMARKS,
               (CASE
                   WHEN lang IS NULL THEN 'en'
                   ELSE lang
                END) Lang
        FROM   sci_opp_loi_duedate_detail
       WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 5;

      SELECT   opportunity_id,
               DATE_FORMAT (loi_due_date, '%d-%m-%Y') open_date,
               sequence_id,
               DATE_REMARKS,
               (CASE
                   WHEN lang IS NULL THEN 'en'
                   ELSE lang
                END) Lang
        FROM   sci_opp_loi_duedate_detail
       WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 6;
       	
       SELECT   opportunity_id,
               DATE_FORMAT (loi_due_date, '%d-%m-%Y') PreProposal_Date,
               sequence_id,
               DATE_REMARKS,
               (CASE
                   WHEN lang IS NULL THEN 'en'
                   ELSE lang
                END) Lang
        FROM   sci_opp_loi_duedate_detail
       WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 7;
            
       SELECT   opportunity_id,
               DATE_FORMAT (loi_due_date, '%d-%m-%Y') Decision_Date,
               sequence_id,
               DATE_REMARKS,
               (CASE
                   WHEN lang IS NULL THEN 'en'
                   ELSE lang
                END) Lang
        FROM   sci_opp_loi_duedate_detail
       WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 8;
   
      SELECT   OPPORTUNITYSTATUS
        FROM   opportunity
       WHERE   OPPORTUNITY_ID = V_ID;       
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_gettaxids` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_gettaxids`(
   IN p_workflowid       integer
)
BEGIN
   DECLARE v_FUNDINGBODY_ID   integer;
   DECLARE v_moduleid         integer;
    
   SELECT   moduleid, id
     INTO   v_moduleid, v_FUNDINGBODY_ID
     FROM   sci_workflow
    WHERE   workflowid = p_workflowid;

   IF v_moduleid = 2
   THEN
      
         SELECT   *
           FROM   taxids
          WHERE   FINANCIALINFO_ID IN
                        (SELECT   FINANCIALINFO_ID
                           FROM   FINANCIALINFO
                          WHERE   FUNDINGBODY_ID = v_FUNDINGBODY_ID);
      
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_gettaxidtype` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_gettaxidtype`()
BEGIN

   SELECT   * FROM SCI_TAXIDTYPETYPE;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_GetWorkFlowDetails` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_GetWorkFlowDetails`(
	p_WorkflowId INTEGER
)
BEGIN
	SELECT sw.ID, sw.MODULEID, om.fundingbodyid 
    FROM sci_workflow sw, opportunity_master om  
    WHERE om.opportunityid=sw.id AND workflowid=p_WorkflowId;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_INDELIGIBILITY_DML_PRC23MA` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_INDELIGIBILITY_DML_PRC23MA`(
P_WORKFLOWID                         INTEGER,
   P_NOT_SPECIFIED                      VARCHAR(4000) /* DEFAULT NULL */ ,
   P_DEGREE                             VARCHAR(4000) /* DEFAULT NULL */ ,
   P_GRADUATE                           VARCHAR(4000) /* DEFAULT NULL */ ,
   P_NEWFACULTY                         VARCHAR(4000) /* DEFAULT NULL */ ,
   P_UNDERGRADUATE                      VARCHAR(4000) /* DEFAULT NULL */ ,
   P_NORESTRICTION                      VARCHAR(4000) /* DEFAULT NULL */ ,
   P_COUNTRY                            VARCHAR(4000) /* DEFAULT NULL */ ,
   P_CITIZENSHIP_TEXT                   VARCHAR(4000) /* DEFAULT NULL */ ,
   P_ELIGIBILITYCLASSIFICATION_ID       INTEGER /* DEFAULT NULL */ ,
   P_INDIVIDUALELIGIBILITY_ID           INTEGER /* DEFAULT NULL */ ,
   p_lang                              VARCHAR(4000) /* DEFAULT NULL */ ,
   P_MODE                               INTEGER             -- -0 FOR INSERT
)
sp_lbl:

BEGIN
   DECLARE V_ID                             INTEGER;
   DECLARE V_TRANSITIONALID                 INTEGER;
   DECLARE V_MODULEID                       INTEGER;
   DECLARE V_TASKID                         INTEGER;
   DECLARE V_CYCLE                          INTEGER;
   DECLARE V_FUNDINGBODY_ID                 INTEGER;
   DECLARE V_NAME                           LONGTEXT;
   DECLARE V_STARTDATE                      DATETIME;
   DECLARE V_AMOUNT                         INTEGER;
   DECLARE V_AMOUNT_CNT                     INTEGER;
   DECLARE V_FUNDINGBODY_CNT                INTEGER;
   DECLARE V_INDEXEDNAME                    VARCHAR (1000);
   DECLARE V_COUNT                          INTEGER;
   DECLARE L_ELIGCLASSIFICATION_SEQ         INTEGER;
   DECLARE L_COUNT                          INTEGER;
   DECLARE L_INDIVIDUALELIGIBILITY_ID_SEQ   INTEGER;
   DECLARE L_ELIGIBILITYCLASSIFICATION_ID   INTEGER;
   DECLARE L_INDIVIDUAL_ELIG                INTEGER  DEFAULT  0;
   DECLARE L_INDIVIDUALELIGIBILITY_ID       INTEGER;
   DECLARE L_CITIZEN_CNT                    INTEGER;

   SELECT   ID,
            MODULEID,
            TASKID,
            CYCLE
     INTO   V_ID,
            V_MODULEID,
            V_TASKID,
            V_CYCLE
     FROM   SCI_WORKFLOW
    WHERE   WORKFLOWID = P_WORKFLOWID;

   IF V_MODULEID = 3 AND P_MODE = 0
   THEN 
      SELECT   ELIGIBILITYCLASSIFICATION_SEQ.NEXTVAL
        INTO   L_ELIGCLASSIFICATION_SEQ
        FROM   DUAL;

      INSERT INTO ELIGIBILITYCLASSIFICATION (
                                                ELIGIBILITYCLASSIFICATION_ID,
                                                OPPORTUNITY_ID,lang
                 )
        VALUES   (L_ELIGCLASSIFICATION_SEQ, V_ID,p_lang);

      SELECT   INDIVIDUALELIGIBILITY_ID_SEQ.NEXTVAL
        INTO   L_INDIVIDUALELIGIBILITY_ID_SEQ
        FROM   DUAL;


      INSERT INTO INDIVIDUALELIGIBILITY (NOT_SPECIFIED,
                                         DEGREE,
                                         GRADUATE,
                                         NEWFACULTY,
                                         UNDERGRADUATE,
                                         INDIVIDUALELIGIBILITY_ID,
                                         ELIGIBILITYCLASSIFICATION_ID)
        VALUES   (P_NOT_SPECIFIED,
                  P_DEGREE,
                  P_GRADUATE,
                  P_NEWFACULTY,
                  P_UNDERGRADUATE,
                  L_INDIVIDUALELIGIBILITY_ID_SEQ,
                  L_ELIGCLASSIFICATION_SEQ);

       INSERT INTO CITIZENSHIP (NORESTRICTION,
                                  COUNTRY,
                                  CITIZENSHIP_TEXT,
                                  INDIVIDUALELIGIBILITY_ID)
           VALUES   (P_NORESTRICTION,
                     P_COUNTRY,
                     P_CITIZENSHIP_TEXT,
                     L_INDIVIDUALELIGIBILITY_ID_SEQ);

   ELSEIF V_MODULEID = 3 AND P_MODE = 1                            -- FOR UPDATE
   THEN
      UPDATE   INDIVIDUALELIGIBILITY
         SET   NOT_SPECIFIED = P_NOT_SPECIFIED,
               DEGREE = P_DEGREE,
               GRADUATE = P_GRADUATE,
               NEWFACULTY = P_NEWFACULTY,
               UNDERGRADUATE = P_UNDERGRADUATE
       WHERE   ELIGIBILITYCLASSIFICATION_ID = P_ELIGIBILITYCLASSIFICATION_ID
               AND INDIVIDUALELIGIBILITY_ID = P_INDIVIDUALELIGIBILITY_ID;


      SELECT   COUNT( * )
        INTO   L_CITIZEN_CNT
        FROM   CITIZENSHIP
       WHERE   INDIVIDUALELIGIBILITY_ID = P_INDIVIDUALELIGIBILITY_ID;

      IF L_CITIZEN_CNT > 0
      THEN
         IF P_COUNTRY <> '0' THEN
           UPDATE   CITIZENSHIP
              SET   NORESTRICTION = P_NORESTRICTION,
                    COUNTRY = P_COUNTRY,
                    CITIZENSHIP_TEXT = P_CITIZENSHIP_TEXT
           WHERE    INDIVIDUALELIGIBILITY_ID = P_INDIVIDUALELIGIBILITY_ID;
         ELSE
           UPDATE   CITIZENSHIP
              SET   NORESTRICTION = P_NORESTRICTION,
                    -- COUNTRY = P_COUNTRY,
                    CITIZENSHIP_TEXT = P_CITIZENSHIP_TEXT
           WHERE    INDIVIDUALELIGIBILITY_ID = P_INDIVIDUALELIGIBILITY_ID;
         END IF; 

      ELSEIF  L_CITIZEN_CNT = 0 -- and P_COUNTRY IS NOT NULL   --if condation is comment on 25 oct 2018 now values will be inserted in all case
      THEN
         INSERT INTO CITIZENSHIP (NORESTRICTION,
                                  COUNTRY,
                                  CITIZENSHIP_TEXT,
                                  INDIVIDUALELIGIBILITY_ID)
           VALUES   (P_NORESTRICTION,
                     P_COUNTRY,
                     P_CITIZENSHIP_TEXT,
                     P_INDIVIDUALELIGIBILITY_ID);
      END IF;
   ELSEIF V_MODULEID = 3 AND P_MODE = 2                            -- FOR DELETE
   THEN
      DELETE  FROM CITIZENSHIP
       WHERE   INDIVIDUALELIGIBILITY_ID = P_INDIVIDUALELIGIBILITY_ID;

      DELETE FROM  INDIVIDUALELIGIBILITY
       WHERE   INDIVIDUALELIGIBILITY_ID = P_INDIVIDUALELIGIBILITY_ID
               AND ELIGIBILITYCLASSIFICATION_ID =
                     P_ELIGIBILITYCLASSIFICATION_ID;

      DELETE  FROM ELIGIBILITYCLASSIFICATION
       WHERE   ELIGIBILITYCLASSIFICATION_ID = P_ELIGIBILITYCLASSIFICATION_ID;
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_INDELIGIBILITY_DML_PRC24Ap` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_INDELIGIBILITY_DML_PRC24Ap`(
P_WORKFLOWID                         INTEGER,
   P_NOT_SPECIFIED                      VARCHAR(4000) /* DEFAULT NULL */ ,
   P_DEGREE                             VARCHAR(4000) /* DEFAULT NULL */ ,
   P_GRADUATE                           VARCHAR(4000) /* DEFAULT NULL */ ,
   P_NEWFACULTY                         VARCHAR(4000) /* DEFAULT NULL */ ,
   P_UNDERGRADUATE                      VARCHAR(4000) /* DEFAULT NULL */ ,
   P_NORESTRICTION                      VARCHAR(4000) /* DEFAULT NULL */ ,
   P_COUNTRY                            VARCHAR(4000) /* DEFAULT NULL */ ,
   P_CITIZENSHIP_TEXT                   VARCHAR(4000) /* DEFAULT NULL */ ,
   P_ELIGIBILITYCLASSIFICATION_ID       INTEGER /* DEFAULT NULL */ ,
   P_INDIVIDUALELIGIBILITY_ID           INTEGER /* DEFAULT NULL */ ,
   p_lang                               VARCHAR(4000) /* DEFAULT NULL */ ,
   P_MODE                               INTEGER               -- -0 FOR INSERT
)
sp_lbl:

BEGIN
  DECLARE V_ID                             INTEGER;
   DECLARE V_TRANSITIONALID                 INTEGER;
   DECLARE V_MODULEID                       INTEGER;
   DECLARE V_TASKID                         INTEGER;
   DECLARE V_CYCLE                          INTEGER;
   DECLARE V_FUNDINGBODY_ID                 INTEGER;
   DECLARE V_NAME                           LONGTEXT;
   DECLARE V_STARTDATE                      DATETIME;
   DECLARE V_AMOUNT                         INTEGER;
   DECLARE V_AMOUNT_CNT                     INTEGER;
   DECLARE V_FUNDINGBODY_CNT                INTEGER;
   DECLARE V_INDEXEDNAME                    VARCHAR (1000);
   DECLARE V_COUNT                          INTEGER;
   DECLARE L_ELIGCLASSIFICATION_SEQ         INTEGER;
   DECLARE L_COUNT                          INTEGER;
   DECLARE L_INDIVIDUALELIGIBILITY_ID_SEQ   INTEGER;
   DECLARE L_ELIGIBILITYCLASSIFICATION_ID   INTEGER;
   DECLARE L_INDIVIDUAL_ELIG                INTEGER  DEFAULT  0;
   DECLARE L_INDIVIDUALELIGIBILITY_ID       INTEGER;
   DECLARE L_CITIZEN_CNT                    INTEGER;

   SELECT   ID,
            MODULEID,
            TASKID,
            CYCLE
     INTO   V_ID,
            V_MODULEID,
            V_TASKID,
            V_CYCLE
     FROM   SCI_WORKFLOW
    WHERE   WORKFLOWID = P_WORKFLOWID;

   IF V_MODULEID = 3 AND P_MODE = 0
   THEN    
      SELECT   ELIGIBILITYCLASSIFICATION_SEQ.NEXTVAL
        INTO   L_ELIGCLASSIFICATION_SEQ
        FROM   DUAL;

      INSERT INTO ELIGIBILITYCLASSIFICATION (
                                                ELIGIBILITYCLASSIFICATION_ID,
                                                OPPORTUNITY_ID,lang
                 )
        VALUES   (L_ELIGCLASSIFICATION_SEQ, V_ID,p_lang);

      SELECT   INDIVIDUALELIGIBILITY_ID_SEQ.NEXTVAL
        INTO   L_INDIVIDUALELIGIBILITY_ID_SEQ
        FROM   DUAL;


      INSERT INTO INDIVIDUALELIGIBILITY (NOT_SPECIFIED,
                                         DEGREE,
                                         GRADUATE,
                                         NEWFACULTY,
                                         UNDERGRADUATE,
                                         INDIVIDUALELIGIBILITY_ID,
                                         ELIGIBILITYCLASSIFICATION_ID)
        VALUES   (P_NOT_SPECIFIED,
                  P_DEGREE,
                  P_GRADUATE,
                  P_NEWFACULTY,
                  P_UNDERGRADUATE,
                  L_INDIVIDUALELIGIBILITY_ID_SEQ,
                  L_ELIGCLASSIFICATION_SEQ);

          INSERT INTO CITIZENSHIP (NORESTRICTION,
                                  COUNTRY,
                                  CITIZENSHIP_TEXT,
                                  INDIVIDUALELIGIBILITY_ID)
           VALUES   (P_NORESTRICTION,
                     P_COUNTRY,
                     P_CITIZENSHIP_TEXT,
                     L_INDIVIDUALELIGIBILITY_ID_SEQ);

   ELSEIF V_MODULEID = 3 AND P_MODE = 1                            -- FOR UPDATE
   THEN
      UPDATE   INDIVIDUALELIGIBILITY
         SET   NOT_SPECIFIED = P_NOT_SPECIFIED,
               DEGREE = P_DEGREE,
               GRADUATE = P_GRADUATE,
               NEWFACULTY = P_NEWFACULTY,
               UNDERGRADUATE = P_UNDERGRADUATE
       WHERE   ELIGIBILITYCLASSIFICATION_ID = P_ELIGIBILITYCLASSIFICATION_ID
               AND INDIVIDUALELIGIBILITY_ID = P_INDIVIDUALELIGIBILITY_ID;


      SELECT   COUNT( * )
        INTO   L_CITIZEN_CNT
        FROM   CITIZENSHIP
       WHERE   INDIVIDUALELIGIBILITY_ID = P_INDIVIDUALELIGIBILITY_ID;

      IF L_CITIZEN_CNT > 0
      THEN
         UPDATE   CITIZENSHIP
            SET   NORESTRICTION = P_NORESTRICTION,
                  COUNTRY = P_COUNTRY,
                  CITIZENSHIP_TEXT = P_CITIZENSHIP_TEXT
          WHERE   INDIVIDUALELIGIBILITY_ID = P_INDIVIDUALELIGIBILITY_ID;
      ELSEIF  L_CITIZEN_CNT = 0 
      THEN
         INSERT INTO CITIZENSHIP (NORESTRICTION,
                                  COUNTRY,
                                  CITIZENSHIP_TEXT,
                                  INDIVIDUALELIGIBILITY_ID)
           VALUES   (P_NORESTRICTION,
                     P_COUNTRY,
                     P_CITIZENSHIP_TEXT,
                     P_INDIVIDUALELIGIBILITY_ID);
      END IF;
   ELSEIF V_MODULEID = 3 AND P_MODE = 2                            -- FOR DELETE
   THEN
      DELETE FROM  CITIZENSHIP
       WHERE   INDIVIDUALELIGIBILITY_ID = P_INDIVIDUALELIGIBILITY_ID;

      DELETE FROM  INDIVIDUALELIGIBILITY
       WHERE   INDIVIDUALELIGIBILITY_ID = P_INDIVIDUALELIGIBILITY_ID
               AND ELIGIBILITYCLASSIFICATION_ID =
                     P_ELIGIBILITYCLASSIFICATION_ID;

      DELETE  FROM ELIGIBILITYCLASSIFICATION
       WHERE   ELIGIBILITYCLASSIFICATION_ID = P_ELIGIBILITYCLASSIFICATION_ID;
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_INDELIGIBILITY_DML_PRC_s` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_INDELIGIBILITY_DML_PRC_s`(
P_DELETEGROUPID                      INTEGER /* DEFAULT NULL */ ,
   P_WORKFLOWID                         INTEGER,
   P_NOT_SPECIFIED                      VARCHAR(4000) /* DEFAULT NULL */ ,
   P_DEGREE                             VARCHAR(4000) /* DEFAULT NULL */ ,
   P_GRADUATE                           VARCHAR(4000) /* DEFAULT NULL */ ,
   P_NEWFACULTY                         VARCHAR(4000) /* DEFAULT NULL */ ,
   P_UNDERGRADUATE                      VARCHAR(4000) /* DEFAULT NULL */ ,
   P_NORESTRICTION                      VARCHAR(4000) /* DEFAULT NULL */ ,
   P_COUNTRY                            VARCHAR(4000) /* DEFAULT NULL */ ,
   P_CITIZENSHIP_TEXT                   VARCHAR(4000) /* DEFAULT NULL */ ,
   P_ELIGIBILITYCLASSIFICATION_ID       INTEGER /* DEFAULT NULL */ ,
   P_INDIVIDUALELIGIBILITY_ID           INTEGER /* DEFAULT NULL */ ,
   p_lang                               VARCHAR(4000) /* DEFAULT NULL */ ,
   P_MODE                               INTEGER               -- -0 FOR INSERT
)
sp_lbl:

BEGIN
 
   DECLARE V_ID                             INTEGER;
   DECLARE V_TRANSITIONALID                 INTEGER;
   DECLARE V_MODULEID                       INTEGER;
   DECLARE V_TASKID                         INTEGER;
   DECLARE V_CYCLE                          INTEGER;
   DECLARE V_FUNDINGBODY_ID                 INTEGER;
   DECLARE V_NAME                           LONGTEXT;
   DECLARE V_STARTDATE                      DATETIME;
   DECLARE V_AMOUNT                         INTEGER;
   DECLARE V_AMOUNT_CNT                     INTEGER;
   DECLARE V_FUNDINGBODY_CNT                INTEGER;
   DECLARE V_INDEXEDNAME                    VARCHAR (1000);
   DECLARE V_COUNT                          INTEGER;
   DECLARE L_ELIGCLASSIFICATION_SEQ         INTEGER;
   DECLARE L_COUNT                          INTEGER;
   DECLARE L_INDIVIDUALELIGIBILITY_ID_SEQ   INTEGER;
   DECLARE L_ELIGIBILITYCLASSIFICATION_ID   INTEGER;
   DECLARE L_INDIVIDUAL_ELIG                INTEGER  DEFAULT  0;
   DECLARE L_INDIVIDUALELIGIBILITY_ID       INTEGER;
   DECLARE L_CITIZEN_CNT                    INTEGER;

   SELECT   ID,
            MODULEID,
            TASKID,
            CYCLE
     INTO   V_ID,
            V_MODULEID,
            V_TASKID,
            V_CYCLE
     FROM   SCI_WORKFLOW
    WHERE   WORKFLOWID = P_WORKFLOWID;

   IF V_MODULEID = 3 AND P_MODE = 0
   THEN
  
      SELECT   ELIGIBILITYCLASSIFICATION_SEQ.NEXTVAL
        INTO   L_ELIGCLASSIFICATION_SEQ
        FROM   DUAL;

      INSERT INTO ELIGIBILITYCLASSIFICATION (
                                                ELIGIBILITYCLASSIFICATION_ID,
                                                OPPORTUNITY_ID,lang
                 )
        VALUES   (L_ELIGCLASSIFICATION_SEQ, V_ID,p_lang);

      SELECT   INDIVIDUALELIGIBILITY_ID_SEQ.NEXTVAL
        INTO   L_INDIVIDUALELIGIBILITY_ID_SEQ
        FROM   DUAL;


      INSERT INTO INDIVIDUALELIGIBILITY (NOT_SPECIFIED,
                                         DEGREE,
                                         GRADUATE,
                                         NEWFACULTY,
                                         UNDERGRADUATE,
                                         INDIVIDUALELIGIBILITY_ID,
                                         ELIGIBILITYCLASSIFICATION_ID)
        VALUES   (P_NOT_SPECIFIED,
                  P_DEGREE,
                  P_GRADUATE,
                  P_NEWFACULTY,
                  P_UNDERGRADUATE,
                  L_INDIVIDUALELIGIBILITY_ID_SEQ,
                  L_ELIGCLASSIFICATION_SEQ);

         INSERT INTO CITIZENSHIP (NORESTRICTION,
                                  COUNTRY,
                                  CITIZENSHIP_TEXT,
                                  INDIVIDUALELIGIBILITY_ID)
           VALUES   (P_NORESTRICTION,
                     P_COUNTRY,
                     P_CITIZENSHIP_TEXT,
                     L_INDIVIDUALELIGIBILITY_ID_SEQ);
   ELSEIF V_MODULEID = 3 AND P_MODE = 1                            -- FOR UPDATE
   THEN
      UPDATE   INDIVIDUALELIGIBILITY
         SET   NOT_SPECIFIED = P_NOT_SPECIFIED,
               DEGREE = P_DEGREE,
               GRADUATE = P_GRADUATE,
               NEWFACULTY = P_NEWFACULTY,
               UNDERGRADUATE = P_UNDERGRADUATE
       WHERE   ELIGIBILITYCLASSIFICATION_ID = P_ELIGIBILITYCLASSIFICATION_ID
               AND INDIVIDUALELIGIBILITY_ID = P_INDIVIDUALELIGIBILITY_ID;


      SELECT   COUNT( * )
        INTO   L_CITIZEN_CNT
        FROM   CITIZENSHIP
       WHERE   INDIVIDUALELIGIBILITY_ID = P_INDIVIDUALELIGIBILITY_ID;

      IF L_CITIZEN_CNT > 0
      THEN
         UPDATE   CITIZENSHIP
            SET   NORESTRICTION = P_NORESTRICTION,
                  COUNTRY = P_COUNTRY,
                  CITIZENSHIP_TEXT = P_CITIZENSHIP_TEXT
          WHERE   INDIVIDUALELIGIBILITY_ID = P_INDIVIDUALELIGIBILITY_ID;
      ELSEIF  L_CITIZEN_CNT = 0 
      THEN
         INSERT INTO CITIZENSHIP (NORESTRICTION,
                                  COUNTRY,
                                  CITIZENSHIP_TEXT,
                                  INDIVIDUALELIGIBILITY_ID)
           VALUES   (P_NORESTRICTION,
                     P_COUNTRY,
                     P_CITIZENSHIP_TEXT,
                     P_INDIVIDUALELIGIBILITY_ID);
      END IF;
   
   ELSEIF V_MODULEID = 3 AND P_MODE = 2                           -- FOR DELETE
   THEN
      IF  p_deletegroupid IS NULL   THEN
        DELETE FROM  CITIZENSHIP
         WHERE   INDIVIDUALELIGIBILITY_ID = P_INDIVIDUALELIGIBILITY_ID;

        DELETE  FROM INDIVIDUALELIGIBILITY
         WHERE   INDIVIDUALELIGIBILITY_ID = P_INDIVIDUALELIGIBILITY_ID
                 AND ELIGIBILITYCLASSIFICATION_ID =
                     P_ELIGIBILITYCLASSIFICATION_ID;

        DELETE FROM  ELIGIBILITYCLASSIFICATION
         WHERE   ELIGIBILITYCLASSIFICATION_ID = P_ELIGIBILITYCLASSIFICATION_ID;
      
      ELSE
        DELETE  FROM CITIZENSHIP where INDIVIDUALELIGIBILITY_ID in
         (select INDIVIDUALELIGIBILITY_ID
           FROM INDIVIDUALELIGIBILITY
             WHERE eligibilityclassification_id in
              (select ELIGIBILITYCLASSIFICATION_ID
                from ELIGIBILITYCLASSIFICATION where opportunity_id = V_ID));       

        DELETE FROM INDIVIDUALELIGIBILITY
          where eligibilityclassification_id in
            (select ELIGIBILITYCLASSIFICATION_ID
               from ELIGIBILITYCLASSIFICATION where opportunity_id = V_ID);       

      
      END IF; 
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_inserttimesheet41` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_inserttimesheet41`(
  p_workflowid           INTEGER,
   p_userid               INTEGER
   )
BEGIN
   DECLARE v_moduleid   INTEGER;
   DECLARE v_id         bigint;
   DECLARE v_cycleid    INTEGER;
   DECLARE v_taskid     INTEGER;
   DECLARE p_TRANSITIONALID INTEGER;
   DECLARE p_murl	NVARCHAR(200);
   DECLARE p_fname NVARCHAR(200);

   SELECT   moduleid,
            ID,
            CYCLE,
            taskid
     INTO   v_moduleid,
            v_id,
            v_cycleid,
            v_taskid
     FROM   sci_workflow
    WHERE   workflowid = p_workflowid;


   UPDATE   sci_timesheet
      SET   ENDDATE = SYSDATE()
    WHERE   workflowid = p_workflowid AND ENDDATE IS NULL;

   SELECT   IFNULL (MAX(TRANSITIONALID), 0)
     INTO   p_TRANSITIONALID
     FROM   sci_timesheet
    WHERE       workflowid = p_workflowid
            AND STATUSCODE = 7
            AND userid = p_userid;

   IF p_TRANSITIONALID <> 0
   THEN
      UPDATE   sci_timesheet
         SET   IDLETIME = SYSDATE() - IFNULL (ENDDATE, SYSDATE())
       WHERE   TRANSITIONALID = p_TRANSITIONALID;
   ELSE    
    --  SELECT timesheetid_seq.NEXTVAL INTO p_TRANSITIONALID FROM DUAL;
	 set p_TRANSITIONALID = p_TRANSITIONALID + 1;
      INSERT INTO sci_timesheet (transitionalid,
                                 workflowid,
                                 moduleid,
                                 ID,
                                 taskid,
                                 userid,
                                 cycleid,
                                 statuscode,
                                 startdate)
        VALUES   (p_TRANSITIONALID,
                  p_workflowid,
                  v_moduleid,
                  v_id,
                  v_taskid,
                  p_userid,
                  v_cycleid,
                  7,
                  SYSDATE());
   END IF;

   IF v_moduleid = 2
   THEN
      SELECT   url, fundingbodyname
    --    INTO   p_murl, p_fname
        FROM   fundingbody_master
       WHERE   fundingbody_id = v_id;

         SELECT   fb.FUNDINGBODY_ID,
                  ORGDBID,
                  TYPE,
                  TRUSTING,
                  COUNTRY,
                  STATE,
                  COLLECTIONCODE,
                  HIDDEN,
                  ELIGIBILITYDESCRIPTION,
                  ID subtypeid,
                  SUBTYPE_TEXT,
                  recordsource,
                  awardsuccesrate,
                  comment_desc,                          -- v.0.2 modification
                  DEFUNCT, -- added by Rakesh  on  10-dec-2012  for  v.2 .0 modification
                  CROSSREFID, -- -- added by Rakesh  on  10-dec-2012  for  v.2 .0 modification
                  EXTENDEDRECORD,
                  captureawards, -- ---modified  by  AVINASH    on  29-MAY-2018  for modeficaiton of   v.40
                  captureopportunities, -- ---modified  by  AVINASH    on  29-MAY-2018  for modeficaiton of   v.40
                  tierinfo, -- ---modified  by  AVINASH    on  29-MAY-2018  for modeficaiton of   v.40
                  awardssupplier, -- ---modified  by  AVINASH    on  29-MAY-2018  for modeficaiton of   v.40
                  opportunitiessupplier, -- ---modified  by  AVINASH    on  29-MAY-2018  for modeficaiton of   v.40
                  profit,
                 opportunitiesfrequency,
                awardsfrequency
           FROM   fundingbody fb, subtype st
          WHERE   fb.FUNDINGBODY_ID = st.FUNDINGBODY_ID
                  AND fb.fundingbody_id = v_id;

      -- --------------------------------------------------------------------------------
SELECT   * FROM sci_countrycodes;

         SELECT   sc.lcode countrycode, ss.NAME, ss.code
           FROM   sci_countrycodes sc, sci_statecodes ss
          WHERE   sc.countryid = ss.countryid;
          
SELECT   * FROM sci_fundingbodytypeidstype;

 SELECT   * FROM sci_fundingbodysubtypeidstype order by value;

          SELECT   NULL award_KEYWORDS,
                    NULL KEYWORDS_ID,
                    NULL LANG,
                    NULL AWARD_ID
             FROM   keyword k, keywords ks
            WHERE   k.KEYWORDS_ID = ks.KEYWORDS_ID AND FUNDINGBODY_ID = V_ID
         GROUP BY   k.KEYWORDS_ID, K.LANG, ks.AWARD_ID;
   ELSEIF v_moduleid = 3
   THEN
      SELECT   url
      --  INTO   p_murl
        FROM   FUNDINGBODY_MASTER
       WHERE   FUNDINGBODY_ID = (SELECT   FUNDINGBODYID
                                   FROM   OPPORTUNITY_MASTER
                                  WHERE   OPPORTUNITYID = V_ID);

        SELECT   fundingbody_id,
                  fundingbodyopportunityid,
                  limitedsubmission,
                  trusting,
                  -- newinvestigator,  ---v.2.0 commented by avinash
                  collectioncode,
                  hidden,
                  -- name,-- v.0.2 modification
                  --   loidate,
                  -- -   duedate,
                  eligibilitycategory,
                  linktofulltext,
                  firstpostdate,
                  lastmodifiedpostdate,
                  opportunitystatus,
                  numberofawards,
                  duration,
                  limitedsubmissiondescription,
                  opportunity_id,
                  -- - rawtext,   ---v.2.0 commented by avinash
                  eligibilitydescription,
                  duedatedescription,
                  id,
                  recordsource,
                  expirationdate,
               (CASE
                   WHEN lang IS NULL THEN 'en'
                   ELSE lang
                END) Lang
           FROM   OPPORTUNITY
          WHERE   OPPORTUNITY_ID = V_ID;

         SELECT   *
           FROM   TYPE
          WHERE   OPPORTUNITY_ID = V_ID;

 SELECT   * FROM sci_countrycodes;

          SELECT   sc.lcode countrycode, ss.NAME, ss.code
           FROM   sci_countrycodes sc, sci_statecodes ss
          WHERE   sc.countryid = ss.countryid;

         SELECT   opportunity_id, loi_due_date loi_DATE, sequence_id
           FROM   sci_opp_loi_duedate_detail
          WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 1;

         SELECT   opportunity_id,
                  (CASE
                      WHEN loi_due_date IS NULL THEN DATE_REMARKS
                      ELSE TO_CLOB (DATE_FORMAT (loi_due_date, '%m-%d-%Y'))
                   END)
                     DUE_DATE,
                  sequence_id
           FROM   sci_opp_loi_duedate_detail
          WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 2;

 SELECT   * FROM sci_FundingTypeIDsType;

          SELECT k.KEYWORD_COLUMN    opportunity_KEYWORDS,
                    k.KEYWORDS_ID,
                    K.LANG,
                    ks.opportunity_id
             FROM   keyword k, keywords ks
            WHERE   k.KEYWORDS_ID = ks.KEYWORDS_ID AND ks.opportunity_id = V_ID
         GROUP BY   k.KEYWORDS_ID, K.LANG, ks.opportunity_id;
   ELSEIF v_moduleid = 4
   THEN
      SELECT   url
        -- INTO   p_murl
        FROM   FUNDINGBODY_MASTER
       WHERE   FUNDINGBODY_ID = (SELECT   FUNDINGBODYID
                                   FROM   award_MASTER
                                  WHERE   AWARDID = V_ID);

         SELECT   fundingbody_id,
                  fundingbodyawardid,
                  TYPE,
                  trusting,
                  collectioncode,
                  hidden,
                  -- name,-- v.0.2 modification
                  startdate,
                  lastamendeddate,
                  enddate,
                  award_id,
                  id,
                  -- abstract,-- v.0.2 modification
                  recordsource,
                  AWARDNOTICEDATE,
                  PUBLISHEDDATE-- ADDED ON 7-JUN-2018 FOR SCIVAL SCHEMA VERSION 4.0
                  
           FROM   award
          WHERE   AWARD_ID = V_ID;

         SELECT   *
           FROM   DUAL
          WHERE   1 = 2;

 SELECT   * FROM sci_countrycodes;

         SELECT   sc.lcode countrycode, ss.NAME, ss.code
           FROM   sci_countrycodes sc, sci_statecodes ss
          WHERE   sc.countryid = ss.countryid;

   SELECT   * FROM SCI_FUNDEDPROGRAMSTYPELIST;

      SELECT  k.KEYWORD_COLUMN
                       award_KEYWORDS,
                    k.KEYWORDS_ID,
                    K.LANG,
                    ks.AWARD_ID
             FROM   keyword k, keywords ks
            WHERE   k.KEYWORDS_ID = ks.KEYWORDS_ID AND AWARD_ID = V_ID
         GROUP BY   k.KEYWORDS_ID, K.LANG, ks.AWARD_ID;
   END IF;

   COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_iteminserttemp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_iteminserttemp`(
   p_workflowid        INTEGER,
   p_mode              INTEGER,
   p_insdel            INTEGER,
   p_itemid            INTEGER,
   p_RELTYPE           VARCHAR(4000),
   p_DESCRIPTION       VARCHAR(4000),
   p_url               VARCHAR(4000),
   p_urltext           VARCHAR(4000),
   p_lang              VARCHAR(4000)
)
BEGIN
   DECLARE v_fundingbodyid                  INTEGER;
   DECLARE v_value                          INTEGER;
   DECLARE v_itemid                         INTEGER;
   DECLARE v_count                          INTEGER;
   DECLARE v_itemcount                      INTEGER;
   DECLARE v_moduleid                       INTEGER;
   DECLARE l_region_cnt                     INTEGER;
   DECLARE l_eligibilitydescription_id      INTEGER;
   DECLARE v_itemid_seq                     INTEGER;
   DECLARE v_itemd                          INTEGER;
   DECLARE l_limitedsubmissiondesc_id_seq   INTEGER;
   DECLARE v_ELIGIBILITYDESCRIPTION_ID      INTEGER;
   DECLARE l_estimatedamountdesc_id        INTEGER;
 
   SELECT   ID, moduleid
     INTO   v_fundingbodyid, V_moduleid
     FROM   sci_workflow
    WHERE   WORKFLOWID = p_workflowid;

   IF v_moduleid = 2
   THEN
      IF p_mode = 1 AND p_insdel = 0
      THEN
         SELECT   COUNT(*)
           INTO   v_count
           FROM   about
          WHERE   FUNDINGBODY_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
            SELECT   about_SEQ.NEXTVAL INTO v_value FROM DUAL;

            INSERT INTO about
              VALUES   (v_value, v_fundingbodyid);
         ELSE
            SELECT   ABOUT_ID
              INTO   v_value
              FROM   about
             WHERE   FUNDINGBODY_ID = v_fundingbodyid;
         END IF;

         SELECT   item_SEQ.NEXTVAL INTO v_itemid FROM DUAL;



         INSERT INTO item (RELTYPE,
                           DESCRIPTION,
                           ITEM_ID,
                           ABOUT_ID,
                           LANG)
           VALUES   (p_RELTYPE,
                     p_DESCRIPTION,
                     v_itemid,
                     v_value,
                     p_lang);

         INSERT INTO link (URL, LINK_TEXT, ITEM_ID)
           VALUES   (p_url, p_urltext, v_itemid);
      
      ELSEIF p_mode = 1 AND p_insdel = 1
      THEN
         DELETE FROM   link
               WHERE   ITEM_ID = p_itemid;

         DELETE FROM   item
               WHERE   ITEM_ID = p_itemid;



         SELECT   COUNT(*)
           INTO   v_itemcount
           FROM   item
          WHERE   ABOUT_ID = (SELECT   about_id
                                FROM   about
                               WHERE   FUNDINGBODY_ID = v_fundingbodyid);

         IF v_itemcount = 0
         THEN
            DELETE FROM   about
                  WHERE   FUNDINGBODY_ID = v_fundingbodyid;
         END IF;
      ELSEIF p_mode = 1 AND p_insdel = 2
      THEN
         UPDATE   item
            SET   RELTYPE = p_RELTYPE,
                  DESCRIPTION = p_DESCRIPTION,
                  LANG = p_lang
          WHERE   ITEM_ID = p_itemid;

         UPDATE   link
            SET   URL = p_URL, LINK_TEXT = p_urltext
          WHERE   ITEM_ID = p_itemid;
	ELSEIF p_mode = 2 AND p_insdel = 0
      THEN
         SELECT   COUNT(*)
           INTO   v_count
           FROM   FUNDINGPOLICY
          WHERE   FUNDINGBODY_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
            SELECT   FUNDINGPOLICY_SEQ.NEXTVAL INTO v_value FROM DUAL;

            INSERT INTO FUNDINGPOLICY (FUNDINGPOLICY_ID, FUNDINGBODY_ID)
              VALUES   (v_value, v_fundingbodyid);
         ELSE
            SELECT   FUNDINGPOLICY_ID
              INTO   v_value
              FROM   FUNDINGPOLICY
             WHERE   FUNDINGBODY_ID = v_fundingbodyid;
         END IF;
         SELECT   item_SEQ.NEXTVAL INTO v_itemid FROM DUAL;
         INSERT INTO item (RELTYPE,
                           DESCRIPTION,
                           ITEM_ID,
                           FUNDINGPOLICY_ID,
                           LANG)
           VALUES   (p_RELTYPE,
                     p_DESCRIPTION,
                     v_itemid,
                     v_value,
                     p_lang);

         INSERT INTO link (URL, LINK_TEXT, ITEM_ID)
           VALUES   (p_url, p_urltext, v_itemid);

      ELSEIF p_mode = 2 AND p_insdel = 1
      THEN
         DELETE FROM   link
               WHERE   ITEM_ID = p_itemid;

         DELETE FROM   item
               WHERE   ITEM_ID = p_itemid;

         SELECT   COUNT(*)
           INTO   v_itemcount
           FROM   item
          WHERE   APPINFO_ID = (SELECT   APPINFO_ID
                                  FROM   appinfo
                                 WHERE   FUNDINGBODY_ID = v_fundingbodyid);

         IF v_itemcount = 0
         THEN
            DELETE FROM   appinfo
                  WHERE   FUNDINGBODY_ID = v_fundingbodyid;
         END IF;
      ELSEIF p_mode = 2 AND p_insdel = 2
      THEN
         UPDATE   item
            SET   RELTYPE = p_RELTYPE,
                  DESCRIPTION = p_DESCRIPTION,
                  LANG = p_lang
          WHERE   ITEM_ID = p_itemid;

         UPDATE   link
            SET   URL = p_URL, LINK_TEXT = p_urltext
          WHERE   ITEM_ID = p_itemid;
      
      ELSEIF p_mode = 3 AND p_insdel = 0
      THEN
         SELECT   COUNT(*)
           INTO   v_count
           FROM   geoscope
          WHERE   FUNDINGBODY_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
            SELECT   geoscope_SEQ.NEXTVAL INTO v_value FROM DUAL;

            INSERT INTO geoscope
              VALUES   (v_value, v_fundingbodyid);
         ELSE
            SELECT   GEOSCOPE_ID
              INTO   v_value
              FROM   geoscope
             WHERE   FUNDINGBODY_ID = v_fundingbodyid;
         END IF;
         SELECT   item_SEQ.NEXTVAL INTO v_itemid FROM DUAL;
         INSERT INTO item (RELTYPE,
                           DESCRIPTION,
                           ITEM_ID,
                           GEOSCOPE_ID,
                           LANG)
           VALUES   (p_RELTYPE,
                     p_DESCRIPTION,
                     v_itemid,
                     v_value,
                     p_lang);

         INSERT INTO link (URL, LINK_TEXT, ITEM_ID)
           VALUES   (p_url, p_urltext, v_itemid);

      ELSEIF p_mode = 3 AND p_insdel = 1
      THEN
         DELETE FROM   link
               WHERE   ITEM_ID = p_itemid;

         DELETE FROM   item
               WHERE   ITEM_ID = p_itemid;


         SELECT   COUNT(*)
           INTO   v_itemcount
           FROM   item
          WHERE   GEOSCOPE_ID = (SELECT   APPINFO_ID
                                   FROM   geoscope
                                  WHERE   FUNDINGBODY_ID = v_fundingbodyid);

         IF v_itemcount = 0
         THEN
            DELETE FROM   geoscope
                  WHERE   FUNDINGBODY_ID = v_fundingbodyid;
         END IF;

      ELSEIF p_mode = 3 AND p_insdel = 2
      THEN
         UPDATE   item
            SET   RELTYPE = p_RELTYPE,
                  DESCRIPTION = p_DESCRIPTION,
                  LANG = p_lang
          WHERE   ITEM_ID = p_itemid;

         UPDATE   link
            SET   URL = p_URL, LINK_TEXT = p_urltext
          WHERE   ITEM_ID = p_itemid;
      
      ELSEIF p_mode = 4 AND p_insdel = 0
      THEN
         SELECT   COUNT(*)
           INTO   v_count
           FROM   relateditems
          WHERE   FUNDINGBODY_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
            SELECT   relateditems_SEQ.NEXTVAL INTO v_value FROM DUAL;

            INSERT INTO relateditems (RELATEDITEMS_ID, FUNDINGBODY_ID)
              VALUES   (v_value, v_fundingbodyid);
         ELSE
            SELECT   RELATEDITEMS_ID
              INTO   v_value
              FROM   relateditems
             WHERE   FUNDINGBODY_ID = v_fundingbodyid;
         END IF;


         SELECT   item_SEQ.NEXTVAL INTO v_itemid FROM DUAL;



         INSERT INTO item (RELTYPE,
                           DESCRIPTION,
                           ITEM_ID,
                           RELATEDITEMS_ID,
                           LANG)
           VALUES   (p_RELTYPE,
                     p_DESCRIPTION,
                     v_itemid,
                     v_value,
                     p_lang);

         INSERT INTO link (URL, LINK_TEXT, ITEM_ID)
           VALUES   (p_url, p_urltext, v_itemid);
      
      ELSEIF p_mode = 4 AND p_insdel = 1
      THEN
         DELETE FROM   link
               WHERE   ITEM_ID = p_itemid;

         DELETE FROM   item
               WHERE   ITEM_ID = p_itemid AND RELATEDITEMS_ID = v_value;

       SELECT   COUNT(*)
           INTO   v_itemcount
           FROM   item
          WHERE   RELATEDITEMS_ID =
                     (SELECT   RELATEDITEMS_ID
                        FROM   relateditems
                       WHERE   FUNDINGBODY_ID = v_fundingbodyid);

         IF v_itemcount = 0
         THEN
            DELETE FROM   relateditems
                  WHERE   FUNDINGBODY_ID = v_fundingbodyid;
         END IF;
      ELSEIF p_mode = 4 AND p_insdel = 2
      THEN
         UPDATE   item
            SET   RELTYPE = p_RELTYPE,
                  DESCRIPTION = p_DESCRIPTION,
                  lang = p_lang
          WHERE   ITEM_ID = p_itemid;

         UPDATE   link
            SET   URL = p_URL, LINK_TEXT = p_urltext
          WHERE   ITEM_ID = p_itemid;
      
      ELSEIF p_mode = 7 AND p_insdel = 0
      THEN
         SELECT   COUNT(*)
           INTO   l_region_cnt
           FROM   region
          WHERE   fundingbody_id = v_fundingbodyid;

         IF l_region_cnt = 0
         THEN
            INSERT INTO region (LANG, REGION_TEXT, FUNDINGBODY_ID)
              VALUES   (p_lang, p_DESCRIPTION, v_fundingbodyid);
         ELSE
            UPDATE   region
               SET   REGION_TEXT = p_DESCRIPTION, lang = p_lang
             WHERE   fundingbody_id = v_fundingbodyid;
         END IF;
      END IF;

     IF p_mode = 1
      THEN
--         OPEN p_mRELATION FOR
            SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.ABOUT_ID id,
                     ch.FUNDINGBODY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID,
                     IT.LANG
              FROM   item it, about ch, link l
             WHERE       it.about_id = ch.about_id
                     AND l.item_id = it.item_id
                     AND ch.FUNDINGBODY_ID = v_fundingbodyid;
      ELSEIF p_mode = 2
      THEN
  --       OPEN p_mRELATION FOR
            SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.APPINFO_ID id,
                    ch.FUNDINGBODY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID,
                     IT.LANG
              FROM   item it, appinfo ch, link l
             WHERE       it.APPINFO_ID = ch.APPINFO_ID
                     AND l.item_id = it.item_id
                     AND ch.FUNDINGBODY_ID = v_fundingbodyid;
      ELSEIF p_mode = 3
      THEN
        -- OPEN p_mRELATION FOR
            SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.GEOSCOPE_ID id,
                     it.lang,
                     ch.FUNDINGBODY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, geoscope ch, link l
             WHERE       it.geoscope_id = ch.geoscope_id
                     AND l.item_id = it.item_id
                     AND ch.FUNDINGBODY_ID = v_fundingbodyid;
      ELSEIF p_mode = 4
      THEN
         -- OPEN p_mRELATION FOR
            SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.RELATEDITEMS_ID id,
                     it.lang,
                     ch.FUNDINGBODY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, relateditems ch, link l
             WHERE       it.RELATEDITEMS_ID = ch.RELATEDITEMS_ID
                     AND l.item_id = it.item_id
                     AND ch.FUNDINGBODY_ID = v_fundingbodyid;
      ELSEIF p_mode = 7
      THEN
         -- OPEN p_mRELATION FOR
            SELECT   REGION_TEXT, lang, FUNDINGBODY_ID
              FROM   region
             WHERE   FUNDINGBODY_ID = v_fundingbodyid;
      END IF;
     
   ELSEIF v_moduleid = 3
   THEN
      IF p_mode = 2 AND p_insdel = 0
      THEN
         SELECT   COUNT(*)
           INTO   v_count
           FROM   appinfo
          WHERE   OPPORTUNITY_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
            SELECT   appinfo_SEQ.NEXTVAL INTO v_value FROM DUAL;

            INSERT INTO appinfo (APPINFO_ID, OPPORTUNITY_ID)
              VALUES   (v_value, v_fundingbodyid);
         ELSE
            SELECT   APPINFO_ID
              INTO   v_value
              FROM   appinfo
             WHERE   OPPORTUNITY_ID = v_fundingbodyid;
         END IF;



         SELECT   item_SEQ.NEXTVAL INTO v_itemid FROM DUAL;



         INSERT INTO item (RELTYPE,
                           DESCRIPTION,
                           ITEM_ID,
                           APPINFO_ID,
                           lang)
           VALUES   (p_RELTYPE,
                     p_DESCRIPTION,
                     v_itemid,
                     v_value,
                     p_lang);

         INSERT INTO link (URL, LINK_TEXT, ITEM_ID)
           VALUES   (p_url, p_urltext, v_itemid);
      
      ELSEIF p_mode = 2 AND p_insdel = 1
      THEN
         DELETE FROM   link
               WHERE   ITEM_ID = p_itemid;

         DELETE FROM   item
               WHERE   ITEM_ID = p_itemid;

         SELECT   COUNT(*)
           INTO   v_itemcount
           FROM   item
          WHERE   APPINFO_ID = (SELECT   APPINFO_ID
                                  FROM   appinfo
                                 WHERE   OPPORTUNITY_ID = v_fundingbodyid);

         IF v_itemcount = 0
         THEN
            DELETE FROM   appinfo
                  WHERE   OPPORTUNITY_ID = v_fundingbodyid;
         END IF;
      ELSEIF p_mode = 2 AND p_insdel = 2
      THEN
         UPDATE   item
            SET   RELTYPE = p_RELTYPE,
                  DESCRIPTION = p_DESCRIPTION,
                  lang = p_lang
          WHERE   ITEM_ID = p_itemid;

         UPDATE   link
            SET   URL = p_URL, LINK_TEXT = p_urltext
          WHERE   ITEM_ID = p_itemid;
      ELSEIF p_mode = 4 AND p_insdel = 0
      THEN
         SELECT   COUNT(*)
           INTO   v_count
           FROM   relateditems
          WHERE   OPPORTUNITY_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
            SELECT   relateditems_SEQ.NEXTVAL INTO v_value FROM DUAL;

            INSERT INTO relateditems (RELATEDITEMS_ID, OPPORTUNITY_ID)
              VALUES   (v_value, v_fundingbodyid);
         ELSE
            SELECT   RELATEDITEMS_ID
              INTO   v_value
              FROM   relateditems
             WHERE   OPPORTUNITY_ID = v_fundingbodyid;
         END IF;


         SELECT   item_SEQ.NEXTVAL INTO v_itemid FROM DUAL;



         INSERT INTO item (RELTYPE,
                           DESCRIPTION,
                           ITEM_ID,
                           RELATEDITEMS_ID,
                           lang)
           VALUES   (p_RELTYPE,
                     p_DESCRIPTION,
                     v_itemid,
                     v_value,
                     p_lang);

         INSERT INTO link (URL, LINK_TEXT, ITEM_ID)
           VALUES   (p_url, p_urltext, v_itemid);
      -- ***********************************--**************************************
      ELSEIF p_mode = 4 AND p_insdel = 1
      THEN
         DELETE FROM   link
               WHERE   ITEM_ID = p_itemid;

         DELETE FROM   item
               WHERE   ITEM_ID = p_itemid AND RELATEDITEMS_ID = v_value;



         SELECT   COUNT(*)
           INTO   v_itemcount
           FROM   item
          WHERE   RELATEDITEMS_ID =
                     (SELECT   RELATEDITEMS_ID
                        FROM   relateditems
                       WHERE   OPPORTUNITY_ID = v_fundingbodyid);

         IF v_itemcount = 0
         THEN
            DELETE FROM   relateditems
                  WHERE   OPPORTUNITY_ID = v_fundingbodyid;
         END IF;
      ELSEIF p_mode = 4 AND p_insdel = 2
      THEN
         UPDATE   item
            SET   RELTYPE = p_RELTYPE,
                  DESCRIPTION = p_DESCRIPTION,
                  lang = p_lang
          WHERE   ITEM_ID = p_itemid;

         UPDATE   link
            SET   URL = p_URL, LINK_TEXT = p_urltext
          WHERE   ITEM_ID = p_itemid;
      ELSEIF p_mode = 5 AND p_insdel = 0
      THEN
         SELECT   COUNT(*)
           INTO   v_count
           FROM   synopsis
          WHERE   OPPORTUNITY_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
            SELECT   SYNOPSISID_SEQ.NEXTVAL INTO v_value FROM DUAL;

            INSERT INTO synopsis (SYNOPSIS_ID, OPPORTUNITY_ID)
              VALUES   (v_value, v_fundingbodyid);
         ELSE
            SELECT   SYNOPSIS_ID
              INTO   v_value
              FROM   synopsis
             WHERE   OPPORTUNITY_ID = v_fundingbodyid;
         END IF;


         SELECT   item_SEQ.NEXTVAL INTO v_itemid FROM DUAL;



         INSERT INTO item (                                         
                           DESCRIPTION,
                           ITEM_ID,
                           SYNOPSIS_ID,
                           lang)
           VALUES   (                                             
                     p_DESCRIPTION,             
                     v_itemid,
                     v_value,
                     p_lang);

         INSERT INTO link (URL, LINK_TEXT, ITEM_ID)
           VALUES   (p_url, p_urltext, v_itemid);
      
      ELSEIF p_mode = 5 AND p_insdel = 1
      THEN
         DELETE FROM   link
               WHERE   ITEM_ID = p_itemid;

         DELETE FROM   item
               WHERE   ITEM_ID = p_itemid;



         SELECT   COUNT(*)
           INTO   v_itemcount
           FROM   item
          WHERE   SYNOPSIS_ID = (SELECT   SYNOPSIS_ID
                                   FROM   synopsis
                                  WHERE   OPPORTUNITY_ID = v_fundingbodyid);

         IF v_itemcount = 0
         THEN
            DELETE FROM   synopsis
                  WHERE   OPPORTUNITY_ID = v_fundingbodyid;
         END IF;
ELSEIF p_mode = 5 AND p_insdel = 2
      THEN
         UPDATE   item
            SET                                         
               DESCRIPTION = p_DESCRIPTION, lang = p_lang
          WHERE   ITEM_ID = p_itemid;

         UPDATE   link
            SET   URL = p_URL, LINK_TEXT = p_urltext
          WHERE   ITEM_ID = p_itemid;
      ELSEIF p_mode = 6 AND p_insdel = 0
      THEN
         SELECT   COUNT(*)
           INTO   v_count
           FROM   OPP_SUBJECTMATTER
          WHERE   OPPORTUNITY_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
            SELECT   subject_matter_SEQ.NEXTVAL INTO v_value FROM DUAL;

            INSERT INTO OPP_SUBJECTMATTER (SUBJECTMATTER_ID, OPPORTUNITY_ID)
              VALUES   (v_value, v_fundingbodyid);
         ELSE
            SELECT   SUBJECTMATTER_ID
              INTO   v_value
              FROM   OPP_SUBJECTMATTER
             WHERE   OPPORTUNITY_ID = v_fundingbodyid;
         END IF;
         SELECT   item_SEQ.NEXTVAL INTO v_itemid FROM DUAL;

         INSERT INTO item (RELTYPE,
                           DESCRIPTION,
                           ITEM_ID,
                           SUBJECTMATTER_ID,
                           lang)
           VALUES   (p_RELTYPE,
                     p_DESCRIPTION,
                     v_itemid,
                     v_value,
                     p_lang);

         INSERT INTO link (URL, LINK_TEXT, ITEM_ID)
           VALUES   (p_url, p_urltext, v_itemid);
      ELSEIF p_mode = 6 AND p_insdel = 1
      THEN
         DELETE FROM   link
               WHERE   ITEM_ID = p_itemid;

         DELETE FROM   item
               WHERE   ITEM_ID = p_itemid;       

         SELECT   COUNT(*)
           INTO   v_itemcount
           FROM   item
          WHERE   SUBJECTMATTER_ID =
                     (SELECT   SUBJECTMATTER_ID
                        FROM   OPP_SUBJECTMATTER
                       WHERE   OPPORTUNITY_ID = v_fundingbodyid);

         IF v_itemcount = 0
         THEN
            DELETE FROM   OPP_SUBJECTMATTER
                  WHERE   OPPORTUNITY_ID = v_fundingbodyid;
         END IF;
      ELSEIF p_mode = 6 AND p_insdel = 2
      THEN
         UPDATE   item
            SET   RELTYPE = p_RELTYPE,
                  DESCRIPTION = p_DESCRIPTION,
                  lang = p_lang  
          WHERE   ITEM_ID = p_itemid;

         UPDATE   link
            SET   URL = p_URL, LINK_TEXT = p_urltext
          WHERE   ITEM_ID = p_itemid;
      

      ELSEIF p_mode = 8 AND p_insdel = 0
      THEN
         SELECT   COUNT(*)
           INTO   v_count
           FROM   eligibilitydescription
          WHERE   OPPORTUNITY_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
            SELECT   eligibilitydescription_id_SEQ.NEXTVAL
              INTO   l_eligibilitydescription_id
              FROM   DUAL;

            INSERT INTO eligibilitydescription (
                                                   ELIGIBILITYDESCRIPTION_ID,
                                                   OPPORTUNITY_ID
                       )
              VALUES   (l_eligibilitydescription_id, v_fundingbodyid);

            SELECT   item_SEQ.NEXTVAL INTO v_itemid_SEQ FROM DUAL;

            INSERT INTO item (RELTYPE,
                              DESCRIPTION,
                              ITEM_ID,
                              lang,
                              ELIGIBILITYDESCRIPTION_ID)
              VALUES   ('about',
                        p_DESCRIPTION,
                        v_itemid_SEQ,
                        p_lang,
                        l_eligibilitydescription_id);

            INSERT INTO LINK (URL, LINK_TEXT, ITEM_ID)
              VALUES   (p_url, p_urltext, v_itemid_SEQ);
         ELSEIF v_count > 0                                                  -- 
         THEN
            SELECT   item_SEQ.NEXTVAL INTO v_itemid_SEQ FROM DUAL;



            SELECT   ELIGIBILITYDESCRIPTION_ID
              INTO   v_ELIGIBILITYDESCRIPTION_ID
              FROM   eligibilitydescription
             WHERE   OPPORTUNITY_ID = v_fundingbodyid;

            INSERT INTO item (RELTYPE,
                              DESCRIPTION,
                              ITEM_ID,
                              lang,
                              ELIGIBILITYDESCRIPTION_ID)
              VALUES   ('about',
                        p_DESCRIPTION,
                        v_itemid_SEQ,
                        p_lang,
                        v_ELIGIBILITYDESCRIPTION_ID);

            INSERT INTO LINK (URL, LINK_TEXT, ITEM_ID)
              VALUES   (p_url, p_urltext, v_itemid_SEQ);
         END IF;
      -- 
      ELSEIF p_mode = 8 AND p_insdel = 1
      THEN
         DELETE FROM  link
          WHERE   ITEM_ID = p_itemid;


         DELETE  FROM item
          WHERE   ITEM_ID = p_itemid;
      ELSEIF p_mode = 8 AND p_insdel = 2
      THEN
         UPDATE   ITEM
            SET   DESCRIPTION = p_DESCRIPTION, lang = p_lang
          WHERE   ITEM_ID = p_itemid;

         UPDATE   LINK
            SET   URL = p_url, LINK_TEXT = p_urltext
          WHERE   ITEM_ID = p_itemid;
      ELSEIF p_mode = 9 AND p_insdel = 0
      THEN
         SELECT   COUNT(*)
           INTO   v_count
           FROM   LIMITEDSUBMISSIONDESCRIPTION
          WHERE   OPPORTUNITY_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
            SELECT   limitedsubmissiondesc_id_SEQ.NEXTVAL
              INTO   l_limitedsubmissiondesc_id_seq
              FROM   DUAL;

            INSERT INTO LIMITEDSUBMISSIONDESCRIPTION (
                                                         LIMITEDSUBMISSIONDESC_ID,
                                                         OPPORTUNITY_ID
                       )
              VALUES   (l_limitedsubmissiondesc_id_seq, v_fundingbodyid);

            SELECT   item_SEQ.NEXTVAL INTO v_itemid_SEQ FROM DUAL;

            INSERT INTO item (RELTYPE,
                              DESCRIPTION,
                              ITEM_ID,
                              lang,
                              LIMITEDSUBMISSIONDESC_ID)
              VALUES   ('about',
                        p_DESCRIPTION,
                        v_itemid_SEQ,
                        p_lang,
                        l_limitedsubmissiondesc_id_seq);

            INSERT INTO LINK (URL, LINK_TEXT, ITEM_ID)
              VALUES   (p_url, p_urltext, v_itemid_SEQ);
         ELSEIF v_count > 0
         THEN
            SELECT   LIMITEDSUBMISSIONDESC_ID
              INTO   v_ELIGIBILITYDESCRIPTION_ID
              FROM   LIMITEDSUBMISSIONDESCRIPTION
             WHERE   OPPORTUNITY_ID = v_fundingbodyid;



            SELECT   item_SEQ.NEXTVAL INTO v_itemid_SEQ FROM DUAL;

            INSERT INTO item (RELTYPE,
                              DESCRIPTION,
                              ITEM_ID,
                              lang,
                              LIMITEDSUBMISSIONDESC_ID)
              VALUES   ('about',
                        p_DESCRIPTION,
                        v_itemid_SEQ,
                        p_lang,
                        v_ELIGIBILITYDESCRIPTION_ID);

            INSERT INTO LINK (URL, LINK_TEXT, ITEM_ID)
              VALUES   (p_url, p_urltext, v_itemid_SEQ);
         END IF;
      ELSEIF p_mode = 9 AND p_insdel = 1
      THEN
         DELETE FROM link
          WHERE   ITEM_ID = p_itemid;


         DELETE  FROM item
          WHERE   ITEM_ID = p_itemid;
          Update OPPORTUNITY set limitedsubmissiondescription='' WHERE   OPPORTUNITY_ID = v_fundingbodyid;
      ELSEIF p_mode = 9 AND p_insdel = 2
      THEN
         UPDATE   ITEM
            SET   DESCRIPTION = p_DESCRIPTION, lang = p_lang
          WHERE   ITEM_ID = p_itemid;

         UPDATE   LINK
            SET   URL = p_url, LINK_TEXT = p_urltext
          WHERE   ITEM_ID = p_itemid;
      
      ELSEIF p_mode = 10 AND p_insdel = 0
      THEN
         SELECT   COUNT(*)
           INTO   v_count
           FROM   estimatedAmountDescription
          WHERE   OPPORTUNITY_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
             SELECT   estimatedamountdesc_id_SEQ.NEXTVAL
                 INTO   l_estimatedamountdesc_id
                 FROM   DUAL;

            INSERT INTO estimatedAmountDescription (
                                                         ESTIMATEDAMOUNTDESCRIPTION_ID,
                                                         OPPORTUNITY_ID
                       )
              VALUES   (l_estimatedamountdesc_id, v_fundingbodyid);

            SELECT   item_SEQ.NEXTVAL INTO v_itemid_SEQ FROM DUAL;

            INSERT INTO item (RELTYPE,
                              DESCRIPTION,
                              ITEM_ID,
                              lang,
                              ESTIMATEDAMOUNTDESCRIPTION_ID)
              VALUES   ('about',
                        p_DESCRIPTION,
                        v_itemid_SEQ,
                        p_lang,
                        l_estimatedamountdesc_id);

            INSERT INTO LINK (URL, LINK_TEXT, ITEM_ID)
              VALUES   (p_url, p_urltext, v_itemid_SEQ);
         ELSEIF v_count > 0
         THEN
            SELECT   ESTIMATEDAMOUNTDESCRIPTION_ID
              INTO   l_estimatedamountdesc_id
              FROM   estimatedAmountDescription
             WHERE   OPPORTUNITY_ID = v_fundingbodyid;



            SELECT   item_SEQ.NEXTVAL INTO v_itemid_SEQ FROM DUAL;

            INSERT INTO item (RELTYPE,
                              DESCRIPTION,
                              ITEM_ID,
                              lang,
                              ESTIMATEDAMOUNTDESCRIPTION_ID)
              VALUES   ('about',
                        p_DESCRIPTION,
                        v_itemid_SEQ,
                        p_lang,
                        l_estimatedamountdesc_id);

            INSERT INTO LINK (URL, LINK_TEXT, ITEM_ID)
              VALUES   (p_url, p_urltext, v_itemid_SEQ);
         END IF;
      ELSEIF p_mode = 10 AND p_insdel = 1
      THEN
         DELETE  FROM link
          WHERE   ITEM_ID = p_itemid;


         DELETE FROM  item
          WHERE   ITEM_ID = p_itemid;
            
      ELSEIF p_mode = 10 AND p_insdel = 2
      THEN
         UPDATE   ITEM
            SET   DESCRIPTION = p_DESCRIPTION, lang = p_lang
          WHERE   ITEM_ID = p_itemid;

         UPDATE   LINK
            SET   URL = p_url, LINK_TEXT = p_urltext
          WHERE   ITEM_ID = p_itemid;
      
      END IF;

      COMMIT;

      IF p_mode = 2
      THEN
      --   OPEN p_mRELATION FOR
            SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.APPINFO_ID id,
                     it.lang,
                     ch.OPPORTUNITY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, appinfo ch, link l
             WHERE       it.APPINFO_ID = ch.APPINFO_ID
                     AND l.item_id = it.item_id
                     AND ch.OPPORTUNITY_ID = v_fundingbodyid;
      ELSEIF p_mode = 4
      THEN
        -- OPEN p_mRELATION FOR
            SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.RELATEDITEMS_ID id,
                     it.lang,
                     ch.OPPORTUNITY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, relateditems ch, link l
             WHERE       it.RELATEDITEMS_ID = ch.RELATEDITEMS_ID
                     AND l.item_id = it.item_id
                     AND ch.OPPORTUNITY_ID = v_fundingbodyid;
      ELSEIF p_mode = 5
      THEN
        -- OPEN p_mRELATION FOR
            SELECT  
            it .description,
                     it.ITEM_ID,
                     it.RELATEDITEMS_ID id,
                     it.lang,
                    ch.OPPORTUNITY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, synopsis ch, link l
             WHERE       it.SYNOPSIS_ID = ch.SYNOPSIS_ID
                     AND l.item_id = it.item_id
                     AND ch.OPPORTUNITY_ID = v_fundingbodyid;
      ELSEIF p_mode = 7
      THEN
         -- OPEN p_mRELATION FOR
            SELECT   REGION_TEXT, lang, FUNDINGBODY_ID
              FROM   region
             WHERE   FUNDINGBODY_ID = v_fundingbodyid;
      ELSEIF p_mode = 8
      THEN
         -- OPEN p_mRELATION FOR
            SELECT   description,
                     it.item_id,
                     it.lang,
                     opportunity_id,
                     url,
                     link_text reltype
              FROM   eligibilitydescription ED, ITEM IT, LINK LI
             WHERE   OPPORTUNITY_ID = v_fundingbodyid
                     AND ed.eligibilitydescription_id =
                           it.eligibilitydescription_id
                     AND it.item_id = li.item_id;
      ELSEIF p_mode = 9
      THEN
         -- OPEN p_mRELATION FOR
            SELECT   description,
                     it.item_id,
                     it.lang,
                     opportunity_id,
                     url,
                     link_text reltype
              FROM   LIMITEDSUBMISSIONDESCRIPTION ED, ITEM IT, LINK LI
             WHERE   OPPORTUNITY_ID = v_fundingbodyid
                     AND ed.limitedsubmissiondesc_id =
                           it.limitedsubmissiondesc_id
                     AND it.item_id = li.item_id;
                     
                       ELSEIF p_mode = 10
      THEN
         -- OPEN p_mRELATION FOR
            SELECT   description,
                     it.item_id,
                     it.lang,
                     opportunity_id,
                     url,
                     link_text reltype
              FROM   estimatedAmountDescription ED, ITEM IT, LINK LI
             WHERE   OPPORTUNITY_ID = v_fundingbodyid
                     AND ed.estimatedAmountDescription_id =
                           it.estimatedAmountDescription_id
                     AND it.item_id = li.item_id;
      END IF;

      
   ELSEIF v_moduleid = 4
   THEN
      IF p_mode = 4 AND p_insdel = 0
      THEN
         SELECT   COUNT(*)
           INTO   v_count
           FROM   relateditems
          WHERE   AWARD_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
            SELECT   relateditems_SEQ.NEXTVAL INTO v_value FROM DUAL;

            INSERT INTO relateditems (RELATEDITEMS_ID, AWARD_ID)
              VALUES   (v_value, v_fundingbodyid);
         ELSE
            SELECT   RELATEDITEMS_ID
              INTO   v_value
              FROM   relateditems
             WHERE   AWARD_ID = v_fundingbodyid;
         END IF;


         SELECT   item_SEQ.NEXTVAL INTO v_itemid FROM DUAL;



         INSERT INTO item (RELTYPE,
                           DESCRIPTION,
                           ITEM_ID,
                           RELATEDITEMS_ID,
                           lang)
           VALUES   (p_RELTYPE,
                     p_DESCRIPTION,
                     v_itemid,
                     v_value,
                     p_lang);

         INSERT INTO link (URL, LINK_TEXT, ITEM_ID)
           VALUES   (p_url, p_urltext, v_itemid);
      ELSEIF p_mode = 4 AND p_insdel = 1
      THEN
         DELETE FROM   link
               WHERE   ITEM_ID = p_itemid;

         DELETE FROM   item
               WHERE   ITEM_ID = p_itemid;   
		SELECT   COUNT(*)
           INTO   v_itemcount
           FROM   item
          WHERE   RELATEDITEMS_ID = (SELECT   RELATEDITEMS_ID
                                       FROM   relateditems
                                      WHERE   AWARD_ID = v_fundingbodyid);

         IF v_itemcount = 0
         THEN
            DELETE FROM   relateditems
                  WHERE   AWARD_ID = v_fundingbodyid;
         END IF;
      ELSEIF p_mode = 4 AND p_insdel = 2
      THEN
         UPDATE   item
            SET   RELTYPE = p_RELTYPE,
                  DESCRIPTION = p_DESCRIPTION,
                  lang = p_lang
          WHERE   ITEM_ID = p_itemid;

         UPDATE   link
            SET   URL = p_URL, LINK_TEXT = p_urltext
          WHERE   ITEM_ID = p_itemid;
      END IF;

      COMMIT;


      IF p_mode = 4
      THEN
      --   OPEN p_mRELATION FOR
            SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.lang,
                     it.RELATEDITEMS_ID id,
                     ch.AWARD_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, relateditems ch, link l
             WHERE       it.RELATEDITEMS_ID = ch.RELATEDITEMS_ID
                     AND l.item_id = it.item_id
                     AND ch.AWARD_ID = v_fundingbodyid;
      END IF;
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_iteminserttemp5` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_iteminserttemp5`(
	 p_workflowid        INTEGER,
	p_mode              INTEGER, -- 1 * about,2 * appinfo,3 * geoscope/FUNDINGDESCRIPTION,4 * relateditems/awardSuccessRatedesc  5 * synopsis 6* subject matter  7* region/Identifier,
   -- 8* eligibility description*9 limitedsubmissiondescription *10   estimatedAmountDescription *11 SubRegion  *12 FunderGroup *13 duration
   p_insdel            INTEGER, -- 0 * insert ,1 * delete ,2 * update
   p_itemid            INTEGER,
   p_RELTYPE           VARCHAR(4000),
   p_DESCRIPTION       VARCHAR(4000),
   p_url               VARCHAR(4000),
   p_urltext           VARCHAR(4000),
   p_lang              VARCHAR(4000)
)
sp_lbl:

BEGIN
   DECLARE v_fundingbodyid                  bigint;
   DECLARE v_value                          INTEGER;
   DECLARE v_itemid                         INTEGER;
   DECLARE v_count                          INTEGER;
   DECLARE v_itemcount                      INTEGER;
   DECLARE v_moduleid                       INTEGER;
   DECLARE l_region_cnt                     INTEGER;
   DECLARE l_eligibilitydescription_id      INTEGER;
   DECLARE v_itemid_seq                     INTEGER;
   DECLARE v_itemd                          INTEGER;
   DECLARE l_limitedsubmissiondesc_id_seq   INTEGER;
   DECLARE v_ELIGIBILITYDESCRIPTION_ID      INTEGER;
   DECLARE l_estimatedamountdesc_id         INTEGER;
 
   SELECT   ID, moduleid
     INTO   v_fundingbodyid, V_moduleid
     FROM   sci_workflow
    WHERE   WORKFLOWID = p_workflowid;

   IF v_moduleid = 2
   THEN
      IF p_mode = 1 AND p_insdel = 0
      THEN
         SELECT   COUNT( * )
           INTO   v_count
           FROM   about
          WHERE   FUNDINGBODY_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
            -- SELECT   about_SEQ.NEXTVAL INTO v_value FROM DUAL;
select max(ABOUT_ID)+1  INTO v_value from about;
            INSERT INTO about
              VALUES   (v_value, v_fundingbodyid);
         ELSE
            SELECT   ABOUT_ID
              INTO   v_value
              FROM   about
             WHERE   FUNDINGBODY_ID = v_fundingbodyid;
         END IF;

         -- SELECT   item_SEQ.NEXTVAL INTO v_itemid FROM DUAL;
select max(ITEM_ID)+1  INTO v_itemid from item;
         INSERT INTO item (RELTYPE,
                           DESCRIPTION,
                           ITEM_ID,
                           ABOUT_ID,
                           LANG)
           VALUES   (p_RELTYPE,
                     p_DESCRIPTION,
                     v_itemid,
                     v_value,
                     p_lang);

         INSERT INTO link (URL, LINK_TEXT, ITEM_ID)
           VALUES   (p_url, p_urltext, v_itemid);
      -- ***********************************--**************************************
      ELSEIF p_mode = 1 AND p_insdel = 1
      THEN
         DELETE FROM   link
               WHERE   ITEM_ID = p_itemid;

         DELETE FROM   item
               WHERE   ITEM_ID = p_itemid;

         SELECT   COUNT( * )
           INTO   v_itemcount
           FROM   item
          WHERE   ABOUT_ID = (SELECT   about_id
                                FROM   about
                               WHERE   FUNDINGBODY_ID = v_fundingbodyid);

         IF v_itemcount = 0
         THEN
            DELETE FROM   about
                  WHERE   FUNDINGBODY_ID = v_fundingbodyid;
         END IF;
      -- ***********************************--**************************************
      ELSEIF p_mode = 1 AND p_insdel = 2
      THEN
         UPDATE   item
            SET   RELTYPE = p_RELTYPE,
                  DESCRIPTION = p_DESCRIPTION,
                  LANG = p_lang
          WHERE   ITEM_ID = p_itemid;

         UPDATE   link
            SET   URL = p_URL, LINK_TEXT = p_urltext
          WHERE   ITEM_ID = p_itemid;
      -- *****************************************************************************

      ELSEIF p_mode = 2 AND p_insdel = 0
      THEN
         SELECT   COUNT( * )
           INTO   v_count
           FROM   FUNDINGPOLICY
          WHERE   FUNDINGBODY_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
            -- SELECT   FUNDINGPOLICY_SEQ.NEXTVAL INTO v_value FROM DUAL;
            select max(FUNDINGPOLICY_ID)+1  INTO v_value from FUNDINGPOLICY;

            INSERT INTO FUNDINGPOLICY (FUNDINGPOLICY_ID, FUNDINGBODY_ID)
              VALUES   (v_value, v_fundingbodyid);
         ELSE
            SELECT   FUNDINGPOLICY_ID
              INTO   v_value
              FROM   FUNDINGPOLICY
             WHERE   FUNDINGBODY_ID = v_fundingbodyid;
         END IF;

        -- SELECT   item_SEQ.NEXTVAL INTO v_itemid FROM DUAL;

select max(ITEM_ID)+1  INTO v_itemid from item;
         INSERT INTO item (RELTYPE,
                           DESCRIPTION,
                           ITEM_ID,
                           FUNDINGPOLICY_ID,
                           LANG)
           VALUES   (p_RELTYPE,
                     p_DESCRIPTION,
                     v_itemid,
                     v_value,
                     p_lang);

         INSERT INTO link (URL, LINK_TEXT, ITEM_ID)
           VALUES   (p_url, p_urltext, v_itemid);
      -- ***********************************--**************************************
      ELSEIF p_mode = 2 AND p_insdel = 1
      THEN
         DELETE FROM   link
               WHERE   ITEM_ID = p_itemid;

         DELETE FROM   item
               WHERE   ITEM_ID = p_itemid;

         SELECT   COUNT( * )
           INTO   v_itemcount
           FROM   item
          WHERE   APPINFO_ID = (SELECT   APPINFO_ID
                                  FROM   appinfo
                                 WHERE   FUNDINGBODY_ID = v_fundingbodyid);

         IF v_itemcount = 0
         THEN
            DELETE FROM   appinfo
                  WHERE   FUNDINGBODY_ID = v_fundingbodyid;
         END IF;
       -- ***********************************--**************************************

      ELSEIF p_mode = 2 AND p_insdel = 2
      THEN
         UPDATE   item
            SET   RELTYPE = p_RELTYPE,
                  DESCRIPTION = p_DESCRIPTION,
                  LANG = p_lang
          WHERE   ITEM_ID = p_itemid;

         UPDATE   link
            SET   URL = p_URL, LINK_TEXT = p_urltext
          WHERE   ITEM_ID = p_itemid;
      -- *****************************************************************************
      ELSEIF p_mode = 3 AND p_insdel = 0
      THEN
       
        -- SELECT   FUNDINGDESCRIPTION_SEQ.NEXTVAL INTO v_value FROM DUAL;
         select max(FUNDINGDESCRIPTION_ID)+1 INTO v_value FROM FUNDINGDESCRIPTION;

         INSERT INTO FUNDINGDESCRIPTION (FUNDINGDESCRIPTION_ID,
                                         FUNDINGBODY_ID,
                                         LANG,
                                         DESCRIPTION,
                                         SOURCE)
           VALUES   (v_value,
                     v_fundingbodyid,
                     p_lang,
                     p_DESCRIPTION,
                     p_url);
      -- ***********************************--**************************************
      ELSEIF p_mode = 3 AND p_insdel = 1
      THEN
     
         DELETE from  FUNDINGDESCRIPTION
          WHERE   FUNDINGDESCRIPTION_ID = p_itemid;
      -- ***********************************--**************************************

      ELSEIF p_mode = 3 AND p_insdel = 2
      THEN
           UPDATE   FUNDINGDESCRIPTION
            SET   description = p_DESCRIPTION, SOURCE = p_url, LANG = p_lang
          WHERE   FUNDINGDESCRIPTION_ID = p_itemid;
      -- *****************************************************************************
      ELSEIF p_mode = 4 AND p_insdel = 0
      THEN
  
         -- SELECT   awardSuccessRatedesc_SEQ.NEXTVAL INTO v_value FROM DUAL;
 select max(AWARDSUCCESSRATE_ID)+1 INTO v_value FROM AWARDSUCCESSRATEDESC;


         INSERT INTO AWARDSUCCESSRATEDESC (AWARDSUCCESSRATE_ID,
                                           LANG,
                                           DESCRIPTION,
                                           SOURCE,
                                           FUNDINGBODY_ID)
           VALUES   (v_value,
                     p_lang,
                     p_DESCRIPTION,
                     p_url,
                     v_fundingbodyid);
      -- ***********************************--**************************************
      ELSEIF p_mode = 4 AND p_insdel = 1
      THEN
    
         DELETE from  AWARDSUCCESSRATEDESC
          WHERE   AWARDSUCCESSRATE_ID = p_itemid;
      -- *******************************************************************************
      ELSEIF p_mode = 4 AND p_insdel = 2
      THEN
   
         UPDATE   AWARDSUCCESSRATEDESC
            SET   description = p_DESCRIPTION, SOURCE = p_url, LANG = p_lang
          WHERE   AWARDSUCCESSRATE_ID = p_itemid;
      -- *****************************************************************************

      ELSEIF p_mode = 7 AND p_insdel = 0
      THEN
   
         SELECT   COUNT( * )
           INTO   l_region_cnt
           FROM   identifier
          WHERE   fundingbody_id = v_fundingbodyid AND TYPE = p_DESCRIPTION;

         IF l_region_cnt = 0
         THEN
            -- SELECT   identifier_SEQ.NEXTVAL INTO v_value FROM DUAL;

select max(identifier_id)+1  INTO v_value from identifier;
            INSERT INTO identifier (identifier_id,
                                    TYPE,
                                    VALUE,
                                    FUNDINGBODY_ID)
              VALUES   (v_value,
                        p_DESCRIPTION,
                        p_urltext,
                        v_fundingbodyid);
         ELSE
            UPDATE   identifier
               SET   TYPE = p_DESCRIPTION, VALUE = p_urltext
             WHERE   fundingbody_id = v_fundingbodyid
                     AND identifier_id = v_value;

         END IF;
      ELSEIF p_mode = 7 AND p_insdel = 2
      THEN
         SELECT   COUNT( * )
           INTO   l_region_cnt
           FROM   identifier
          WHERE   fundingbody_id = v_fundingbodyid
                  AND identifier_id = p_itemid;

         IF l_region_cnt > 0
         THEN
            UPDATE   identifier
               SET   TYPE = p_DESCRIPTION, VALUE = p_urltext
             WHERE   fundingbody_id = v_fundingbodyid
                     AND identifier_id = v_value;

         END IF;
      ELSEIF p_mode = 7 AND p_insdel = 1
      THEN
         SELECT   COUNT( * )
           INTO   l_region_cnt
           FROM   identifier
          WHERE   fundingbody_id = v_fundingbodyid
                  AND identifier_id = p_itemid;

         IF l_region_cnt > 0
         THEN
            DELETE from  identifier
             WHERE   fundingbody_id = v_fundingbodyid
                     AND identifier_id = p_itemid;
         END IF;
      -- ********************  for region development on 4-jun-2018 end here *********************************************************
      -- *************For SubRegion and fundergroup Strat***************************
      ELSEIF p_mode = 11 AND p_insdel = 0
      THEN
         SELECT   COUNT( * )
           INTO   l_region_cnt
           FROM   Subregion
          WHERE   fundingbody_id = v_fundingbodyid;

         IF l_region_cnt = 0
         THEN
            INSERT INTO Subregion (LANG, Subregion_TEXT, FUNDINGBODY_ID)
              VALUES   (p_lang, p_DESCRIPTION, v_fundingbodyid);
         ELSE
            UPDATE   Subregion
               SET   Subregion_TEXT = p_DESCRIPTION, lang = p_lang
             WHERE   fundingbody_id = v_fundingbodyid;

            END IF;
      ELSEIF p_mode = 12 AND p_insdel = 0
      THEN
         SELECT   COUNT( * )
           INTO   l_region_cnt
           FROM   funderGroup
          WHERE   fundingbody_id = v_fundingbodyid;

         IF l_region_cnt = 0
         THEN
            INSERT INTO funderGroup (LANG, funderGroup_TEXT, FUNDINGBODY_ID)
              VALUES   (p_lang, p_DESCRIPTION, v_fundingbodyid);
         ELSE
            UPDATE   funderGroup
               SET   funderGroup_TEXT = p_DESCRIPTION, lang = p_lang
             WHERE   fundingbody_id = v_fundingbodyid;

         END IF;
      -- *******************END SubRegion and fundergroup***************************
      ELSE
           ROLLBACK;
         LEAVE sp_lbl;
      END IF;

      COMMIT;

      IF p_mode = 1
      THEN
           SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.ABOUT_ID id,
                     ch.FUNDINGBODY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID,
                     IT.LANG
              FROM   item it, about ch, link l
             WHERE       it.about_id = ch.about_id
                     AND l.item_id = it.item_id
                     AND ch.FUNDINGBODY_ID = v_fundingbodyid;
      ELSEIF p_mode = 2
      THEN
            SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.APPINFO_ID id,
                     ch.FUNDINGBODY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID,
                     IT.LANG
              FROM   item it, appinfo ch, link l
             WHERE       it.APPINFO_ID = ch.APPINFO_ID
                     AND l.item_id = it.item_id
                     AND ch.FUNDINGBODY_ID = v_fundingbodyid;
      ELSEIF p_mode = 3
      THEN
            SELECT   NULL RELTYPE,
                     DESCRIPTION,
                     FUNDINGDESCRIPTION_ID Item_id,
                     LANG,
                     FUNDINGBODY_ID,
                     SOURCE URL,
                     NULL LINK_TEXT
              FROM   FUNDINGDESCRIPTION
             WHERE   FUNDINGBODY_ID = v_fundingbodyid;
      ELSEIF p_mode = 4
      THEN
              SELECT   NULL RELTYPE,
                     DESCRIPTION,
                     AWARDSUCCESSRATE_ID Item_id,
                     LANG,
                     FUNDINGBODY_ID,
                     SOURCE URL,
                     NULL LINK_TEXT
              FROM   AWARDSUCCESSRATEDESC
             WHERE   FUNDINGBODY_ID = v_fundingbodyid;
      ELSEIF p_mode = 7
      THEN
          SELECT   TYPE RELTYPE,
                     TYPE DESCRIPTION,
                     identifier_id Item_id,
                     'en' LANG,
                     FUNDINGBODY_ID,
                     NULL URL,
                     VALUE LINK_TEXT
              FROM   identifier
             WHERE   FUNDINGBODY_ID = v_fundingbodyid;
      ELSEIF p_mode = 11
      THEN
            SELECT   SUBREGION_TEXT, lang, FUNDINGBODY_ID
              FROM   SUBregion
             WHERE   FUNDINGBODY_ID = v_fundingbodyid;
      ELSEIF p_mode = 12
      THEN
            SELECT   funderGroup_TEXT, lang, FUNDINGBODY_ID
              FROM   funderGroup
             WHERE   FUNDINGBODY_ID = v_fundingbodyid;
      END IF;
   ELSEIF v_moduleid = 3
   THEN
      IF p_mode = 2 AND p_insdel = 0
      THEN
         SELECT   COUNT( * )
           INTO   v_count
           FROM   appinfo
          WHERE   OPPORTUNITY_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
            -- SELECT   appinfo_SEQ.NEXTVAL INTO v_value FROM DUAL;
            select max(APPINFO_ID)+1 INTO v_value FROM appinfo;


            INSERT INTO appinfo (APPINFO_ID, OPPORTUNITY_ID)
              VALUES   (v_value, v_fundingbodyid);
         ELSE
            SELECT   APPINFO_ID
              INTO   v_value
              FROM   appinfo
             WHERE   OPPORTUNITY_ID = v_fundingbodyid;
         END IF;

         -- SELECT   item_SEQ.NEXTVAL INTO v_itemid FROM DUAL;
         select max(ITEM_ID)+1 INTO v_itemid FROM item;


         INSERT INTO item (RELTYPE,
                           DESCRIPTION,
                           ITEM_ID,
                           APPINFO_ID,
                           lang)
           VALUES   (p_RELTYPE,
                     p_DESCRIPTION,
                     v_itemid,
                     v_value,
                     p_lang);

         INSERT INTO link (URL, LINK_TEXT, ITEM_ID)
           VALUES   (p_url, p_urltext, v_itemid);
      -- ***********************************--**************************************
      ELSEIF p_mode = 2 AND p_insdel = 1
      THEN
         DELETE FROM   link
               WHERE   ITEM_ID = p_itemid;

         DELETE FROM   item
               WHERE   ITEM_ID = p_itemid;

         SELECT   COUNT( * )
           INTO   v_itemcount
           FROM   item
          WHERE   APPINFO_ID = (SELECT   APPINFO_ID
                                  FROM   appinfo
                                 WHERE   OPPORTUNITY_ID = v_fundingbodyid);

         IF v_itemcount = 0
         THEN
            DELETE FROM   appinfo
                  WHERE   OPPORTUNITY_ID = v_fundingbodyid;
         END IF;

      ELSEIF p_mode = 2 AND p_insdel = 2
      THEN
         UPDATE   item
            SET   RELTYPE = p_RELTYPE,
                  DESCRIPTION = p_DESCRIPTION,
                  lang = p_lang
          WHERE   ITEM_ID = p_itemid;

         UPDATE   link
            SET   URL = p_URL, LINK_TEXT = p_urltext
          WHERE   ITEM_ID = p_itemid;
      ELSEIF p_mode = 4 AND p_insdel = 0
      THEN
         SELECT   COUNT( * )
           INTO   v_count
           FROM   relateditems
          WHERE   OPPORTUNITY_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
           -- SELECT   relateditems_SEQ.NEXTVAL INTO v_value FROM DUAL;
            select max(RELATEDITEMS_ID)+1  INTO v_value FROM relateditems;



            INSERT INTO relateditems (RELATEDITEMS_ID, OPPORTUNITY_ID)
              VALUES   (v_value, v_fundingbodyid);
         ELSE
            SELECT   RELATEDITEMS_ID
              INTO   v_value
              FROM   relateditems
             WHERE   OPPORTUNITY_ID = v_fundingbodyid;
         END IF;

        -- SELECT   item_SEQ.NEXTVAL INTO v_itemid FROM DUAL;
        select max(ITEM_ID)+1  INTO v_itemid FROM item;


         INSERT INTO item (RELTYPE,
                           DESCRIPTION,
                           ITEM_ID,
                           RELATEDITEMS_ID,
                           lang)
           VALUES   (p_RELTYPE,
                     p_DESCRIPTION,
                     v_itemid,
                     v_value,
                     p_lang);

         INSERT INTO link (URL, LINK_TEXT, ITEM_ID)
           VALUES   (p_url, p_urltext, v_itemid);
      -- ***********************************--**************************************
      ELSEIF p_mode = 4 AND p_insdel = 1
      THEN
         DELETE FROM   link
               WHERE   ITEM_ID = p_itemid;

         DELETE FROM   item
               WHERE   ITEM_ID = p_itemid AND RELATEDITEMS_ID = v_value;

         SELECT   COUNT( * )
           INTO   v_itemcount
           FROM   item
          WHERE   RELATEDITEMS_ID =
                     (SELECT   RELATEDITEMS_ID
                        FROM   relateditems
                       WHERE   OPPORTUNITY_ID = v_fundingbodyid);

         IF v_itemcount = 0
         THEN
            DELETE FROM   relateditems
                  WHERE   OPPORTUNITY_ID = v_fundingbodyid;
         END IF;
      ELSEIF p_mode = 4 AND p_insdel = 2
      THEN
         UPDATE   item
            SET   RELTYPE = p_RELTYPE,
                  DESCRIPTION = p_DESCRIPTION,
                  lang = p_lang
          WHERE   ITEM_ID = p_itemid;

         UPDATE   link
            SET   URL = p_URL, LINK_TEXT = p_urltext
          WHERE   ITEM_ID = p_itemid;
      -- *****************************************************************************

      ELSEIF p_mode = 5 AND p_insdel = 0
      THEN
         SELECT   COUNT( * )
           INTO   v_count
           FROM   synopsis
          WHERE   OPPORTUNITY_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
           -- SELECT   SYNOPSISID_SEQ.NEXTVAL INTO v_value FROM DUAL;
              select max(SYNOPSIS_ID)+1 INTO v_value FROM synopsis;


            INSERT INTO synopsis (SYNOPSIS_ID, OPPORTUNITY_ID)
              VALUES   (v_value, v_fundingbodyid);
         ELSE
            SELECT   SYNOPSIS_ID
              INTO   v_value
              FROM   synopsis
             WHERE   OPPORTUNITY_ID = v_fundingbodyid;
         END IF;

         -- SELECT   item_SEQ.NEXTVAL INTO v_itemid FROM DUAL;
          select max(ITEM_ID)+1 INTO v_itemid FROM item;


         INSERT INTO item (                                         -- RELTYPE,
                           DESCRIPTION,
                           ITEM_ID,
                           SYNOPSIS_ID,
                           lang)
           VALUES   (                                             -- p_RELTYPE,
                     p_DESCRIPTION,             -- - open by avi on 14oct2016--
                     v_itemid,
                     v_value,
                     p_lang);

         INSERT INTO link (URL, LINK_TEXT, ITEM_ID)
           VALUES   (p_url, 'NULL', v_itemid);
      -- ***********************************--**************************************
      ELSEIF p_mode = 5 AND p_insdel = 1
      THEN
         DELETE FROM   link
               WHERE   ITEM_ID = p_itemid;

         DELETE FROM   item
               WHERE   ITEM_ID = p_itemid;       -- AND SYNOPSIS_ID = v_value;

         SELECT   COUNT( * )
           INTO   v_itemcount
           FROM   item
          WHERE   SYNOPSIS_ID = (SELECT   SYNOPSIS_ID
                                   FROM   synopsis
                                  WHERE   OPPORTUNITY_ID = v_fundingbodyid);

         IF v_itemcount = 0
         THEN
            DELETE FROM   synopsis
                  WHERE   OPPORTUNITY_ID = v_fundingbodyid;
         END IF;
      ELSEIF p_mode = 5 AND p_insdel = 2
      THEN
         UPDATE   item
            SET                                         -- RELTYPE = p_RELTYPE,
               DESCRIPTION = p_DESCRIPTION, lang = p_lang
               WHERE   ITEM_ID = p_itemid;

         UPDATE   link
            SET   URL = p_URL
          WHERE   ITEM_ID = p_itemid;
      -- *****************************************************************************

      -- -- avi
      ELSEIF p_mode = 6 AND p_insdel = 0
      THEN
         SELECT   COUNT( * )
           INTO   v_count
           FROM   OPP_SUBJECTMATTER
          WHERE   OPPORTUNITY_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
           -- SELECT   subject_matter_SEQ.NEXTVAL INTO v_value FROM DUAL;
           select max(SUBJECTMATTER_ID)+1 INTO v_value FROM OPP_SUBJECTMATTER;


            INSERT INTO OPP_SUBJECTMATTER (SUBJECTMATTER_ID, OPPORTUNITY_ID)
              VALUES   (v_value, v_fundingbodyid);
         ELSE
            SELECT   SUBJECTMATTER_ID
              INTO   v_value
              FROM   OPP_SUBJECTMATTER
             WHERE   OPPORTUNITY_ID = v_fundingbodyid;
         END IF;

         -- SELECT   item_SEQ.NEXTVAL INTO v_itemid FROM DUAL;
         select max(ITEM_ID)+1 INTO v_itemid FROM item;


         INSERT INTO item (RELTYPE,
                           DESCRIPTION,
                           ITEM_ID,
                           SUBJECTMATTER_ID,
                           lang)
           VALUES   (p_RELTYPE,
                     p_DESCRIPTION,            
                     v_itemid,
                     v_value,
                     p_lang);

         INSERT INTO link (URL, LINK_TEXT, ITEM_ID)
           VALUES   (p_url, 'NULL', v_itemid);
      -- ***********************************--**************************************
      ELSEIF p_mode = 6 AND p_insdel = 1
      THEN
         DELETE FROM   link
               WHERE   ITEM_ID = p_itemid;

         DELETE FROM   item
               WHERE   ITEM_ID = p_itemid;       -- AND SYNOPSIS_ID = v_value;

         SELECT   COUNT( * )
           INTO   v_itemcount
           FROM   item
          WHERE   SUBJECTMATTER_ID =
                     (SELECT   SUBJECTMATTER_ID
                        FROM   OPP_SUBJECTMATTER
                       WHERE   OPPORTUNITY_ID = v_fundingbodyid);

         IF v_itemcount = 0
         THEN
            DELETE FROM   OPP_SUBJECTMATTER
                  WHERE   OPPORTUNITY_ID = v_fundingbodyid;
         END IF;
      ELSEIF p_mode = 6 AND p_insdel = 2
      THEN
         UPDATE   item
            SET   RELTYPE = p_RELTYPE,
                  DESCRIPTION = p_DESCRIPTION,
                  lang = p_lang                 -- -open by avi in 14oct2016---
          WHERE   ITEM_ID = p_itemid;

         UPDATE   link
            SET   URL = p_URL
          WHERE   ITEM_ID = p_itemid;
      -- *****************************************************************************

      ELSEIF p_mode = 8 AND p_insdel = 0
      THEN
         SELECT   COUNT( * )
           INTO   v_count
           FROM   eligibilitydescription
          WHERE   OPPORTUNITY_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
            SELECT   eligibilitydescription_id_SEQ.NEXTVAL INTO   l_eligibilitydescription_id
              FROM   DUAL;
select max(ELIGIBILITYDESCRIPTION_ID)+1 INTO l_eligibilitydescription_id FROM eligibilitydescription;

            INSERT INTO eligibilitydescription (
                                                   ELIGIBILITYDESCRIPTION_ID,
                                                   OPPORTUNITY_ID
                       )
              VALUES   (l_eligibilitydescription_id, v_fundingbodyid);

           -- SELECT   item_SEQ.NEXTVAL INTO v_itemid_SEQ FROM DUAL;
           select max(ITEM_ID)+1 INTO v_itemid_SEQ FROM item;


            INSERT INTO item (RELTYPE,
                              DESCRIPTION,
                              ITEM_ID,
                              lang,
                              ELIGIBILITYDESCRIPTION_ID)
              VALUES   ('about',
                        p_DESCRIPTION,
                        v_itemid_SEQ,
                        p_lang,
                        l_eligibilitydescription_id);

            INSERT INTO LINK (URL, LINK_TEXT, ITEM_ID)
              VALUES   (p_url, p_urltext, v_itemid_SEQ);
         ELSEIF v_count > 0                                                  -- 
         THEN
            SELECT   item_SEQ.NEXTVAL INTO v_itemid_SEQ FROM DUAL;

            SELECT   ELIGIBILITYDESCRIPTION_ID
              INTO   v_ELIGIBILITYDESCRIPTION_ID
              FROM   eligibilitydescription
             WHERE   OPPORTUNITY_ID = v_fundingbodyid;

            INSERT INTO item (RELTYPE,
                              DESCRIPTION,
                              ITEM_ID,
                              lang,
                              ELIGIBILITYDESCRIPTION_ID)
              VALUES   ('about',
                        p_DESCRIPTION,
                        v_itemid_SEQ,
                        p_lang,
                        v_ELIGIBILITYDESCRIPTION_ID);

            INSERT INTO LINK (URL, LINK_TEXT, ITEM_ID)
              VALUES   (p_url, p_urltext, v_itemid_SEQ);
         END IF;
      -- 
      ELSEIF p_mode = 8 AND p_insdel = 1
      THEN
         DELETE from  link
          WHERE   ITEM_ID = p_itemid;


         DELETE  from item
          WHERE   ITEM_ID = p_itemid;
      ELSEIF p_mode = 8 AND p_insdel = 2
      THEN
         UPDATE   ITEM
            SET   DESCRIPTION = p_DESCRIPTION, lang = p_lang
          WHERE   ITEM_ID = p_itemid;

         UPDATE   LINK
            SET   URL = p_url, LINK_TEXT = p_urltext
          WHERE   ITEM_ID = p_itemid;
      ELSEIF p_mode = 9 AND p_insdel = 0
      THEN
         SELECT   COUNT( * )
           INTO   v_count
           FROM   LIMITEDSUBMISSIONDESCRIPTION
          WHERE   OPPORTUNITY_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
            SELECT   limitedsubmissiondesc_id_SEQ.NEXTVAL
              INTO   l_limitedsubmissiondesc_id_seq
              FROM   DUAL;

            INSERT INTO LIMITEDSUBMISSIONDESCRIPTION (
                                                         LIMITEDSUBMISSIONDESC_ID,
                                                         OPPORTUNITY_ID
                       )
              VALUES   (l_limitedsubmissiondesc_id_seq, v_fundingbodyid);

            SELECT   item_SEQ.NEXTVAL INTO v_itemid_SEQ FROM DUAL;

            INSERT INTO item (RELTYPE,
                              DESCRIPTION,
                              ITEM_ID,
                              lang,
                              LIMITEDSUBMISSIONDESC_ID)
              VALUES   ('about',
                        p_DESCRIPTION,
                        v_itemid_SEQ,
                        p_lang,
                        l_limitedsubmissiondesc_id_seq);

            INSERT INTO LINK (URL, LINK_TEXT, ITEM_ID)
              VALUES   (p_url, p_urltext, v_itemid_SEQ);
         ELSEIF v_count > 0
         THEN
            SELECT   LIMITEDSUBMISSIONDESC_ID
              INTO   v_ELIGIBILITYDESCRIPTION_ID
              FROM   LIMITEDSUBMISSIONDESCRIPTION
             WHERE   OPPORTUNITY_ID = v_fundingbodyid;



          -- SELECT   item_SEQ.NEXTVAL INTO v_itemid_SEQ FROM DUAL;
           select max(ITEM_ID)+1 INTO v_itemid_SEQ FROM item;


            INSERT INTO item (RELTYPE,
                              DESCRIPTION,
                              ITEM_ID,
                              lang,
                              LIMITEDSUBMISSIONDESC_ID)
              VALUES   ('about',
                        p_DESCRIPTION,
                        v_itemid_SEQ,
                        p_lang,
                        v_ELIGIBILITYDESCRIPTION_ID);

            INSERT INTO LINK (URL, LINK_TEXT, ITEM_ID)
              VALUES   (p_url, p_urltext, v_itemid_SEQ);
         END IF;
      ELSEIF p_mode = 9 AND p_insdel = 1
      THEN
         DELETE from  link
          WHERE   ITEM_ID = p_itemid;


         DELETE from  item
          WHERE   ITEM_ID = p_itemid;

         UPDATE   OPPORTUNITY
            SET   limitedsubmissiondescription = ''
          WHERE   OPPORTUNITY_ID = v_fundingbodyid;
      ELSEIF p_mode = 9 AND p_insdel = 2
      THEN
         UPDATE   ITEM
            SET   DESCRIPTION = p_DESCRIPTION, lang = p_lang
          WHERE   ITEM_ID = p_itemid;

         UPDATE   LINK
            SET   URL = p_url, LINK_TEXT = p_urltext
          WHERE   ITEM_ID = p_itemid;
  
      ELSEIF p_mode = 10 AND p_insdel = 0
      THEN
         SELECT   COUNT( * )
           INTO   v_count
           FROM   estimatedAmountDescription
          WHERE   OPPORTUNITY_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
-- SELECT   estimatedamountdesc_id_SEQ.NEXTVAL INTO   l_estimatedamountdesc_id  FROM   DUAL;
 select max(ESTIMATEDAMOUNTDESCRIPTION_ID)+1 INTO l_estimatedamountdesc_id FROM estimatedAmountDescription;

            INSERT INTO estimatedAmountDescription (
                                                       ESTIMATEDAMOUNTDESCRIPTION_ID,
                                                       OPPORTUNITY_ID
                       )
              VALUES   (l_estimatedamountdesc_id, v_fundingbodyid);

            -- SELECT   item_SEQ.NEXTVAL INTO v_itemid_SEQ FROM DUAL;
             select max(ITEM_ID)+1 INTO v_itemid_SEQ FROM item;


            INSERT INTO item (RELTYPE,
                              DESCRIPTION,
                              ITEM_ID,
                              lang,
                              ESTIMATEDAMOUNTDESCRIPTION_ID)
              VALUES   ('about',
                        p_DESCRIPTION,
                        v_itemid_SEQ,
                        p_lang,
                        l_estimatedamountdesc_id);

            INSERT INTO LINK (URL, LINK_TEXT, ITEM_ID)
              VALUES   (p_url, p_urltext, v_itemid_SEQ);
         ELSEIF v_count > 0
         THEN
            SELECT   ESTIMATEDAMOUNTDESCRIPTION_ID
              INTO   l_estimatedamountdesc_id
              FROM   estimatedAmountDescription
             WHERE   OPPORTUNITY_ID = v_fundingbodyid;



           -- SELECT   item_SEQ.NEXTVAL INTO v_itemid_SEQ FROM DUAL;
           select max(ITEM_ID)+1 INTO v_itemid_SEQ FROM item;


            INSERT INTO item (RELTYPE,
                              DESCRIPTION,
                              ITEM_ID,
                              lang,
                              ESTIMATEDAMOUNTDESCRIPTION_ID)
              VALUES   ('about',
                        p_DESCRIPTION,
                        v_itemid_SEQ,
                        p_lang,
                        l_estimatedamountdesc_id);

            INSERT INTO LINK (URL, LINK_TEXT, ITEM_ID)
              VALUES   (p_url, p_urltext, v_itemid_SEQ);
         END IF;
      ELSEIF p_mode = 10 AND p_insdel = 1
      THEN
         DELETE from  link
          WHERE   ITEM_ID = p_itemid;
      ELSEIF p_mode = 10 AND p_insdel = 2
      THEN
         UPDATE   ITEM
            SET   DESCRIPTION = p_DESCRIPTION, lang = p_lang
          WHERE   ITEM_ID = p_itemid;

         UPDATE   LINK
            SET   URL = p_url, LINK_TEXT = p_urltext
          WHERE   ITEM_ID = p_itemid;
      /****************************/
      -- duration start 27122019
      ELSEIF p_mode = 13 AND p_insdel = 0
      THEN
         SELECT   COUNT( * )
           INTO   v_count
           FROM   duration
          WHERE   OPPORTUNITY_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
          --  SELECT   Duration_seq.NEXTVAL INTO v_value FROM DUAL;
          select max(duration_ID)+1 INTO v_value FROM duration;


            INSERT INTO duration (duration_ID, OPPORTUNITY_ID)
              VALUES   (v_value, v_fundingbodyid);
         ELSE
            SELECT   duration_ID
              INTO   v_value
              FROM   duration
             WHERE   OPPORTUNITY_ID = v_fundingbodyid;
         END IF;


        -- SELECT   item_SEQ.NEXTVAL INTO v_itemid FROM DUAL;
        select max(ITEM_ID)+1 INTO v_itemid FROM item;




         INSERT INTO item (DESCRIPTION,
                           ITEM_ID,
                           duration_ID,
                           lang)
           VALUES   (p_DESCRIPTION,
                     v_itemid,
                     v_value,
                     p_lang);

         INSERT INTO link (URL, LINK_TEXT, ITEM_ID)
           VALUES   (p_url, 'NULL', v_itemid);
      -- ***********************************--**************************************
      ELSEIF p_mode = 13 AND p_insdel = 1
      THEN
         DELETE FROM   link
               WHERE   ITEM_ID = p_itemid;

         DELETE FROM   item
               WHERE   ITEM_ID = p_itemid;



         SELECT   COUNT( * )
           INTO   v_itemcount
           FROM   item
          WHERE   duration_ID = (SELECT   duration_ID
                                   FROM   duration
                                  WHERE   OPPORTUNITY_ID = v_fundingbodyid);

         IF v_itemcount = 0
         THEN
            DELETE FROM   duration
                  WHERE   OPPORTUNITY_ID = v_fundingbodyid;
         END IF;
      -- *******************************************************************************
      ELSEIF p_mode = 13 AND p_insdel = 2
      THEN
         UPDATE   item
            SET                                         -- RELTYPE = p_RELTYPE,
               DESCRIPTION = p_DESCRIPTION, lang = p_lang
          WHERE   ITEM_ID = p_itemid;

         UPDATE   link
            SET   URL = p_URL
          WHERE   ITEM_ID = p_itemid;
 
       ELSEIF p_mode = 14 AND p_insdel = 0
      THEN
         SELECT   COUNT( * )
           INTO   v_count
           FROM   instruction
          WHERE   OPPORTUNITY_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
          --  SELECT   instruction_seq.NEXTVAL INTO v_value FROM DUAL;
          select max(instruction_ID)+1 INTO v_value FROM instruction;


            INSERT INTO instruction (instruction_ID, OPPORTUNITY_ID)
              VALUES   (v_value, v_fundingbodyid);
         ELSE
            SELECT   instruction_ID
              INTO   v_value
              FROM   instruction
             WHERE   OPPORTUNITY_ID = v_fundingbodyid;
         END IF;


        -- SELECT   item_SEQ.NEXTVAL INTO v_itemid FROM DUAL;
        select max(ITEM_ID)+1 INTO v_itemid FROM item;


         INSERT INTO item (DESCRIPTION,
                           ITEM_ID,
                           instruction_ID,
                           lang)
           VALUES   (p_DESCRIPTION,
                     v_itemid,
                     v_value,
                     p_lang);

         INSERT INTO link (URL, LINK_TEXT, ITEM_ID)
           VALUES   (p_url, 'NULL', v_itemid);
      -- ***********************************--**************************************
      ELSEIF p_mode = 14 AND p_insdel = 1
      THEN
         DELETE FROM   link
               WHERE   ITEM_ID = p_itemid;

         DELETE FROM   item
               WHERE   ITEM_ID = p_itemid;

         SELECT   COUNT( * )
           INTO   v_itemcount
           FROM   item
          WHERE   instruction_ID = (SELECT   instruction_ID
                                   FROM   instruction
                                  WHERE   OPPORTUNITY_ID = v_fundingbodyid);

         IF v_itemcount = 0
         THEN
            DELETE FROM   instruction
                  WHERE   OPPORTUNITY_ID = v_fundingbodyid;
         END IF;
      -- *******************************************************************************
      ELSEIF p_mode = 14 AND p_insdel = 2
      THEN
         UPDATE   item
            SET                                         -- RELTYPE = p_RELTYPE,
               DESCRIPTION = p_DESCRIPTION, lang = p_lang
          WHERE   ITEM_ID = p_itemid;

         UPDATE   link
            SET   URL = p_URL
          WHERE   ITEM_ID = p_itemid;
      
              ELSEIF p_mode = 15 AND p_insdel = 0
      THEN
         SELECT   COUNT( * )
           INTO   v_count
           FROM   licenseInformation
          WHERE   OPPORTUNITY_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
          --  SELECT   licenseInformation_seq.NEXTVAL INTO v_value FROM DUAL;
 select max(licenseInformation_ID)+1 INTO v_value FROM licenseInformation;

            INSERT INTO licenseInformation (licenseInformation_ID, OPPORTUNITY_ID)
              VALUES   (v_value, v_fundingbodyid);
         ELSE
            SELECT   licenseInformation_ID
              INTO   v_value
              FROM   licenseInformation
             WHERE   OPPORTUNITY_ID = v_fundingbodyid;
         END IF;

        -- SELECT   item_SEQ.NEXTVAL INTO v_itemid FROM DUAL;
        select max(ITEM_ID)+1 INTO v_itemid FROM item;


         INSERT INTO item (DESCRIPTION,
                           ITEM_ID,
                           licenseInformation_ID,
                           lang)
           VALUES   (p_DESCRIPTION,
                     v_itemid,
                     v_value,
                     p_lang);

         INSERT INTO link (URL, LINK_TEXT, ITEM_ID)
           VALUES   (p_url, 'NULL', v_itemid);
      -- ***********************************--**************************************
      ELSEIF p_mode = 15 AND p_insdel = 1
      THEN
         DELETE FROM   link
               WHERE   ITEM_ID = p_itemid;

         DELETE FROM   item
               WHERE   ITEM_ID = p_itemid;

         SELECT   COUNT( * )
           INTO   v_itemcount
           FROM   item
          WHERE   licenseInformation_ID = (SELECT   licenseInformation_ID
                                   FROM   licenseInformation
                                  WHERE   OPPORTUNITY_ID = v_fundingbodyid);

         IF v_itemcount = 0
         THEN
            DELETE FROM   licenseInformation
                  WHERE   OPPORTUNITY_ID = v_fundingbodyid;
         END IF;
      -- *******************************************************************************
      ELSEIF p_mode = 15 AND p_insdel = 2
      THEN
         UPDATE   item
            SET                                         -- RELTYPE = p_RELTYPE,
               DESCRIPTION = p_DESCRIPTION, lang = p_lang
          WHERE   ITEM_ID = p_itemid;

         UPDATE   link
            SET   URL = p_URL
          WHERE   ITEM_ID = p_itemid;
      
      
      -- ------------------------licenseInformation END--------------------

      -- --end o
      ELSE
         ROLLBACK;
         LEAVE sp_lbl;
      END IF;

      COMMIT;

      IF p_mode = 2
      THEN
            SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     -- it.GEOSCOPE_ID,
                     it.APPINFO_ID id,
                     it.lang,
                     -- it.ABOUT_ID,
                     -- it.RELATEDITEMS_ID,
                     -- it.SYNOPSIS_ID,
                     ch.OPPORTUNITY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, appinfo ch, link l
             WHERE       it.APPINFO_ID = ch.APPINFO_ID
                     AND l.item_id = it.item_id
                     AND ch.OPPORTUNITY_ID = v_fundingbodyid;
      ELSEIF p_mode = 4
      THEN
           SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     -- it.GEOSCOPE_ID,
                     -- it.APPINFO_ID,
                     -- it.ABOUT_ID,
                     it.RELATEDITEMS_ID id,
                     it.lang,
                     -- it.SYNOPSIS_ID,
                     ch.OPPORTUNITY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, relateditems ch, link l
             WHERE       it.RELATEDITEMS_ID = ch.RELATEDITEMS_ID
                     AND l.item_id = it.item_id
                     AND ch.OPPORTUNITY_ID = v_fundingbodyid;
      ELSEIF p_mode = 5
      THEN
            SELECT                                               -- it.RELTYPE,
                  it .description,
                     it.ITEM_ID,
                     -- it.GEOSCOPE_ID,
                     -- it.APPINFO_ID,
                     -- it.ABOUT_ID,
                     it.RELATEDITEMS_ID id,
                     it.lang,
                     -- it.SYNOPSIS_ID,
                     ch.OPPORTUNITY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, synopsis ch, link l
             WHERE       it.SYNOPSIS_ID = ch.SYNOPSIS_ID
                     AND l.item_id = it.item_id
                     AND ch.OPPORTUNITY_ID = v_fundingbodyid;
      ELSEIF p_mode = 7
      THEN
            SELECT   REGION_TEXT, lang, FUNDINGBODY_ID
              FROM   region
             WHERE   FUNDINGBODY_ID = v_fundingbodyid;
      ELSEIF p_mode = 8
      THEN
            SELECT   description,
                     it.item_id,
                     it.lang,
                     opportunity_id,
                     url,
                     link_text reltype
              FROM   eligibilitydescription ED, ITEM IT, LINK LI
             WHERE   OPPORTUNITY_ID = v_fundingbodyid
                     AND ed.eligibilitydescription_id =
                           it.eligibilitydescription_id
                     AND it.item_id = li.item_id;
      ELSEIF p_mode = 9
      THEN
            SELECT   description,
                     it.item_id,
                     it.lang,
                     opportunity_id,
                     url,
                     link_text reltype
              FROM   LIMITEDSUBMISSIONDESCRIPTION ED, ITEM IT, LINK LI
             WHERE   OPPORTUNITY_ID = v_fundingbodyid
                     AND ed.limitedsubmissiondesc_id =
                           it.limitedsubmissiondesc_id
                     AND it.item_id = li.item_id;
      ELSEIF p_mode = 10
      THEN
            SELECT   description,
                     it.item_id,
                     it.lang,
                     opportunity_id,
                     url,
                     link_text reltype
              FROM   estimatedAmountDescription ED, ITEM IT, LINK LI
             WHERE   OPPORTUNITY_ID = v_fundingbodyid
                     AND ed.estimatedAmountDescription_id =
                           it.estimatedAmountDescription_id
                     AND it.item_id = li.item_id;
      ELSEIF p_mode = 13
      THEN
             SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.lang,
                     it.RELATEDITEMS_ID id,
                     it.duration_id,
                     d.OPPORTUNITY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID,
                     o.DURATION
              FROM   item it,
                     duration d,
                     link l,
                     OPPORTUNITY o
             WHERE       it.duration_ID = d.duration_ID
                     AND d.OPPORTUNITY_ID = o.OPPORTUNITY_ID
                     AND l.item_id = it.item_id
                     AND d.OPPORTUNITY_ID = v_fundingbodyid;
                     
                       ELSEIF p_mode = 14
      THEN
            SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.lang,
                     it.RELATEDITEMS_ID id,
                     it.instruction_id,
                     i.OPPORTUNITY_ID,
                     l.URL,
                     l.LINK_TEXT
                    
                     
              FROM   item it,
                     instruction i,
                     link l,
                     OPPORTUNITY o
             WHERE   it.instruction_ID = i.instruction_ID
                     AND i.OPPORTUNITY_ID = o.OPPORTUNITY_ID
                     AND l.item_id = it.item_id
                     AND i.OPPORTUNITY_ID = v_fundingbodyid;
                     
           ELSEIF p_mode = 15
      THEN
            SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.lang,
                     it.RELATEDITEMS_ID id,
                     it.licenseInformation_id,
                     i.OPPORTUNITY_ID,
                     l.URL,
                     l.LINK_TEXT
                    
                     
              FROM   item it,
                     licenseInformation i,
                     link l,
                     OPPORTUNITY o
             WHERE   it.licenseInformation_ID = i.licenseInformation_ID
                     AND i.OPPORTUNITY_ID = o.OPPORTUNITY_ID
                     AND l.item_id = it.item_id
                     AND i.OPPORTUNITY_ID = v_fundingbodyid;
      END IF;
   ELSEIF v_moduleid = 4
   THEN
      IF p_mode = 4 AND p_insdel = 0
      THEN
         SELECT   COUNT( * )
           INTO   v_count
           FROM   relateditems
          WHERE   AWARD_ID = v_fundingbodyid;

         IF v_count = 0
         THEN
         --   SELECT   relateditems_SEQ.NEXTVAL INTO v_value FROM DUAL;
         select max(RELATEDITEMS_ID)+1 INTO v_value FROM relateditems;


            INSERT INTO relateditems (RELATEDITEMS_ID, AWARD_ID)
              VALUES   (v_value, v_fundingbodyid);
         ELSE
            SELECT   RELATEDITEMS_ID
              INTO   v_value
              FROM   relateditems
             WHERE   AWARD_ID = v_fundingbodyid;
         END IF;

        -- SELECT   item_SEQ.NEXTVAL INTO v_itemid FROM DUAL;
        select max(ITEM_ID)+1 INTO v_itemid FROM item;




         INSERT INTO item (RELTYPE,
                           DESCRIPTION,
                           ITEM_ID,
                           RELATEDITEMS_ID,
                           lang)
           VALUES   (p_RELTYPE,
                     p_DESCRIPTION,
                     v_itemid,
                     v_value,
                     p_lang);

         INSERT INTO link (URL, LINK_TEXT, ITEM_ID)
           VALUES   (p_url, p_urltext, v_itemid);
      -- ***********************************--**************************************
      ELSEIF p_mode = 4 AND p_insdel = 1
      THEN
         DELETE FROM   link
               WHERE   ITEM_ID = p_itemid;

         DELETE FROM   item
               WHERE   ITEM_ID = p_itemid;   -- AND RELATEDITEMS_ID = v_value;



         SELECT   COUNT( * )
           INTO   v_itemcount
           FROM   item
          WHERE   RELATEDITEMS_ID = (SELECT   RELATEDITEMS_ID
                                       FROM   relateditems
                                      WHERE   AWARD_ID = v_fundingbodyid);

         IF v_itemcount = 0
         THEN
            DELETE FROM   relateditems
                  WHERE   AWARD_ID = v_fundingbodyid;
         END IF;
      -- *******************************************************************************
      ELSEIF p_mode = 4 AND p_insdel = 2
      THEN
         UPDATE   item
            SET   RELTYPE = p_RELTYPE,
                  DESCRIPTION = p_DESCRIPTION,
                  lang = p_lang
          WHERE   ITEM_ID = p_itemid;

         UPDATE   link
            SET   URL = p_URL, LINK_TEXT = p_urltext
          WHERE   ITEM_ID = p_itemid;
      -- *****************************************************************************
      ELSE
         ROLLBACK;
         LEAVE sp_lbl;
      END IF;

      COMMIT;


      IF p_mode = 4
      THEN
            SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.lang,
                     -- it.GEOSCOPE_ID,
                     -- it.APPINFO_ID,
                     -- it.ABOUT_ID,
                     it.RELATEDITEMS_ID id,
                     -- it.SYNOPSIS_ID,
                     ch.AWARD_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, relateditems ch, link l
             WHERE       it.RELATEDITEMS_ID = ch.RELATEDITEMS_ID
                     AND l.item_id = it.item_id
                     AND ch.AWARD_ID = v_fundingbodyid;
      END IF;
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_itemlist` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_itemlist`(
   p_workflowid       integer,
   p_mode             integer 
)
BEGIN
   DECLARE v_fundingbodyid   integer;
   DECLARE v_moduleid        integer;
 
   DECLARE EXIT HANDLER FOR SQLEXCEPTION
   BEGIN
      -- CLOSE p_mlist;
      -- CLOSE p_mRELATION;
END;
   SELECT   ID, moduleid
     INTO   v_fundingbodyid, v_moduleid
     FROM   sci_workflow
    WHERE   WORKFLOWID = p_workflowid;

--   OPEN p_mlist FOR SELECT   * FROM SCI_BINARYRELATIONTYPE;

   IF v_moduleid = 2
   THEN
      IF p_mode = 1
      THEN
   --       OPEN p_mRELATION FOR
            SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.ABOUT_ID id,
                     it.lang,
                     ch.FUNDINGBODY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, about ch, link l
             WHERE       it.item_id = l.item_id
                     AND it.about_id = ch.about_id
                     AND ch.FUNDINGBODY_ID = v_fundingbodyid;
      ELSEIF p_mode = 2
      THEN
         -- OPEN p_mRELATION FOR
            SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.APPINFO_ID id,
                     it.lang,
                     ch.FUNDINGBODY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, fundingpolicy ch, link l
             WHERE       it.item_id = l.item_id
                     AND it.FUNDINGPOLICY_ID = ch.FUNDINGPOLICY_ID
                     AND ch.FUNDINGBODY_ID = v_fundingbodyid;
      ELSEIF p_mode = 3
      THEN
        -- OPEN p_mRELATION FOR
            SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.GEOSCOPE_ID id,
                     it.lang,
                     ch.FUNDINGBODY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, geoscope ch, link l
             WHERE       it.item_id = l.item_id
                     AND it.geoscope_id = ch.geoscope_id
                     AND ch.FUNDINGBODY_ID = v_fundingbodyid;
      ELSEIF p_mode = 4
      THEN
         -- OPEN p_mRELATION FOR
            SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.RELATEDITEMS_ID id,
                     it.lang,
                     ch.FUNDINGBODY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID                    
              FROM   item it, relateditems ch, link l
             WHERE       it.item_id = l.item_id
                     AND it.RELATEDITEMS_ID = ch.RELATEDITEMS_ID
                     AND ch.FUNDINGBODY_ID = v_fundingbodyid;
                  
             ELSEIF p_mode = 7
      THEN
         -- OPEN p_mRELATION FOR
            SELECT   LANG,
                    REGION_TEXT,
                   FUNDINGBODY_ID 
              FROM   region
             WHERE     FUNDINGBODY_ID = v_fundingbodyid;  
             
              ELSEIF p_mode = 11
      THEN
         -- OPEN p_mRELATION FOR
            SELECT   LANG,
                    subregion_TEXT,
                   FUNDINGBODY_ID 
              FROM   subregion
             WHERE     FUNDINGBODY_ID = v_fundingbodyid; 
             
              ELSEIF p_mode = 12
      THEN
         -- OPEN p_mRELATION FOR
            SELECT   LANG,
                    fundergroup_TEXT,
                   FUNDINGBODY_ID 
              FROM   fundergroup
             WHERE     FUNDINGBODY_ID = v_fundingbodyid; 
                     
      END IF;
   ELSEIF v_moduleid = 3
   THEN
      IF p_mode = 2
      THEN
         -- OPEN p_mRELATION FOR
            SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.APPINFO_ID id,
                     it.lang,
                     ch.OPPORTUNITY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, appinfo ch, link l
             WHERE       it.item_id = l.item_id
                     AND it.APPINFO_ID = ch.APPINFO_ID
                     AND ch.OPPORTUNITY_ID = v_fundingbodyid;
      ELSEIF p_mode = 4
      THEN
         -- OPEN p_mRELATION FOR
            SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.RELATEDITEMS_ID id,
                     it.lang,
                     ch.OPPORTUNITY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, relateditems ch, link l
             WHERE       it.item_id = l.item_id
                     AND it.RELATEDITEMS_ID = ch.RELATEDITEMS_ID
                     AND ch.OPPORTUNITY_ID = v_fundingbodyid;
      ELSEIF p_mode = 5
      THEN
         -- OPEN p_mRELATION FOR
            SELECT   it.RELTYPE,
                     it.description,  
                     it.ITEM_ID,
                     it.RELATEDITEMS_ID id,
                     it.lang,
                     ch.OPPORTUNITY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, synopsis ch, link l
             WHERE       it.item_id = l.item_id
                     AND it.SYNOPSIS_ID = ch.SYNOPSIS_ID
                     AND ch.OPPORTUNITY_ID = v_fundingbodyid;
           
         ELSEIF p_mode = 6
      THEN
         -- OPEN p_mRELATION FOR
            SELECT   it.RELTYPE,
                     it.description,  
                     it.ITEM_ID,
                     it.SUBJECTMATTER_ID id,
                     it.lang,
                     ch.OPPORTUNITY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, opp_subjectmatter ch, link l
             WHERE       it.item_id = l.item_id
                     AND it.SUBJECTMATTER_ID = ch.SUBJECTMATTER_ID
                     AND ch.OPPORTUNITY_ID = v_fundingbodyid;
                     
           ELSEIF p_mode = 8
      THEN
         -- OPEN p_mRELATION FOR
            SELECT   description,
                     it.item_id,it.lang,
                     opportunity_id,
                     url,
                     link_text ,
                     reltype
              FROM   eligibilitydescription ED, ITEM IT, LINK LI
             WHERE   OPPORTUNITY_ID = v_fundingbodyid
                     AND ed.eligibilitydescription_id =
                           it.eligibilitydescription_id
                     AND it.item_id = li.item_id;
      ELSEIF p_mode = 9
      THEN
         -- OPEN p_mRELATION FOR
            SELECT   description,
                     it.item_id,
                     it.lang,
                     opportunity_id,
                     url,
                     link_text,
                      reltype
              FROM   LIMITEDSUBMISSIONDESCRIPTION ED, ITEM IT, LINK LI
             WHERE   OPPORTUNITY_ID = v_fundingbodyid
                     AND ed.limitedsubmissiondesc_id =
                           it.limitedsubmissiondesc_id
                     AND it.item_id = li.item_id;
                     
                     ELSEIF p_mode = 10
      THEN
         -- OPEN p_mRELATION FOR
            SELECT   description,
                     it.item_id,
                     it.lang,
                     opportunity_id,
                     url,
                     link_text,
                     reltype
              FROM   estimatedAmountDescription ED, ITEM IT, LINK LI
             WHERE   OPPORTUNITY_ID = v_fundingbodyid
                     AND ed.estimatedAmountDescription_id =
                           it.estimatedAmountDescription_id
                     AND it.item_id = li.item_id;
                     
                     
                     
      END IF;
   ELSEIF v_moduleid = 4
   THEN
      IF p_mode = 4
      THEN
         -- OPEN p_mRELATION FOR
            SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.RELATEDITEMS_ID id,
                     it.LANG,
                     ch.AWARD_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, relateditems ch, link l
             WHERE       it.item_id = l.item_id
                     AND it.RELATEDITEMS_ID = ch.RELATEDITEMS_ID
                     AND ch.AWARD_ID = v_fundingbodyid;
      END IF;
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_itemlist5` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_itemlist5`(
	p_workflowid       integer,
   p_mode             integer -- 1 * about,2 * appinfo,3 * geoscope,4 * relateditems,5 * synopsis 6* subjectmatter 7* for region8* eligibility description*9 limitedsubmissiondescription
)
BEGIN
   DECLARE v_fundingbodyid   bigint;
   DECLARE v_moduleid        integer;
 
   SELECT   ID, moduleid
     INTO   v_fundingbodyid, v_moduleid
     FROM   sci_workflow
    WHERE   WORKFLOWID = p_workflowid;

   SELECT   * FROM SCI_BINARYRELATIONTYPE;

   IF v_moduleid = 2
   THEN
      IF p_mode = 1
      THEN
         SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.ABOUT_ID id,
                     it.lang,
                     ch.FUNDINGBODY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, about ch, link l
             WHERE       it.item_id = l.item_id
                     AND it.about_id = ch.about_id
                     AND ch.FUNDINGBODY_ID = v_fundingbodyid;
      ELSEIF p_mode = 2
      THEN
         SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.APPINFO_ID id,
                     it.lang,
                     ch.FUNDINGBODY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, fundingpolicy ch, link l
             WHERE       it.item_id = l.item_id
                     AND it.FUNDINGPOLICY_ID = ch.FUNDINGPOLICY_ID
                     AND ch.FUNDINGBODY_ID = v_fundingbodyid;
      ELSEIF p_mode = 3
      THEN           
                     Select Null RELTYPE,DESCRIPTION,FUNDINGDESCRIPTION_ID Item_id,LANG,FUNDINGBODY_ID,SOURCE URL,NULL LINK_TEXT  from FUNDINGDESCRIPTION where  FUNDINGBODY_ID=v_fundingbodyid;   
      ELSEIF p_mode = 4
      THEN        
                      Select Null RELTYPE,DESCRIPTION,AWARDSUCCESSRATE_ID Item_id,LANG,FUNDINGBODY_ID,SOURCE URL,NULL LINK_TEXT  from AWARDSUCCESSRATEDESC where  FUNDINGBODY_ID=v_fundingbodyid;   
                  
             ELSEIF p_mode = 7
      THEN         
              Select Type RELTYPE,Type DESCRIPTION,identifier_id Item_id,'en' LANG,FUNDINGBODY_ID,null URL,value LINK_TEXT 
             from identifier where  FUNDINGBODY_ID=v_fundingbodyid; 
             
              ELSEIF p_mode = 11
      THEN
         SELECT   LANG,
                    subregion_TEXT,
                   FUNDINGBODY_ID 
              FROM   subregion
             WHERE     FUNDINGBODY_ID = v_fundingbodyid; 
             
              ELSEIF p_mode = 12
      THEN
           SELECT   LANG,
                    fundergroup_TEXT,
                   FUNDINGBODY_ID 
              FROM   fundergroup
             WHERE     FUNDINGBODY_ID = v_fundingbodyid; 
                     
      END IF;
   ELSEIF v_moduleid = 3
   THEN
      IF p_mode = 2
      THEN
            SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.APPINFO_ID id,
                     it.lang,
                     ch.OPPORTUNITY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, appinfo ch, link l
             WHERE       it.item_id = l.item_id
                     AND it.APPINFO_ID = ch.APPINFO_ID
                     AND ch.OPPORTUNITY_ID = v_fundingbodyid;
      ELSEIF p_mode = 4
      THEN
            SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.RELATEDITEMS_ID id,
                     it.lang,
                     ch.OPPORTUNITY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, relateditems ch, link l
             WHERE       it.item_id = l.item_id
                     AND it.RELATEDITEMS_ID = ch.RELATEDITEMS_ID
                     AND ch.OPPORTUNITY_ID = v_fundingbodyid;
      ELSEIF p_mode = 5
      THEN
            SELECT   it.RELTYPE,
                     it.description,  
                     it.ITEM_ID,
                     it.RELATEDITEMS_ID id,
                     it.lang,
                     ch.OPPORTUNITY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, synopsis ch, link l
             WHERE       it.item_id = l.item_id
                     AND it.SYNOPSIS_ID = ch.SYNOPSIS_ID
                     AND ch.OPPORTUNITY_ID = v_fundingbodyid;
           
         ELSEIF p_mode = 6
      THEN
            SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.SUBJECTMATTER_ID id,
                     it.lang,
                     ch.OPPORTUNITY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, opp_subjectmatter ch, link l
             WHERE       it.item_id = l.item_id
                     AND it.SUBJECTMATTER_ID = ch.SUBJECTMATTER_ID
                     AND ch.OPPORTUNITY_ID = v_fundingbodyid;
                     
           ELSEIF p_mode = 8
      THEN
            SELECT   description,
                     it.item_id,it.lang,
                     opportunity_id,
                     url,
                     link_text ,
                     reltype
              FROM   eligibilitydescription ED, ITEM IT, LINK LI
             WHERE   OPPORTUNITY_ID = v_fundingbodyid
                     AND ed.eligibilitydescription_id =
                           it.eligibilitydescription_id
                     AND it.item_id = li.item_id;
      ELSEIF p_mode = 9
      THEN
            SELECT   description,
                     it.item_id,
                     it.lang,
                     opportunity_id,
                     url,
                     link_text,
                      reltype
              FROM   LIMITEDSUBMISSIONDESCRIPTION ED, ITEM IT, LINK LI
             WHERE   OPPORTUNITY_ID = v_fundingbodyid
                     AND ed.limitedsubmissiondesc_id =
                           it.limitedsubmissiondesc_id
                     AND it.item_id = li.item_id;
                     
                     ELSEIF p_mode = 10
      THEN
            SELECT   description,
                     it.item_id,
                     it.lang,
                     opportunity_id,
                     url,
                     link_text,
                     reltype
              FROM   estimatedAmountDescription ED, ITEM IT, LINK LI
             WHERE   OPPORTUNITY_ID = v_fundingbodyid
                     AND ed.estimatedAmountDescription_id =
                           it.estimatedAmountDescription_id
                     AND it.item_id = li.item_id;
                     
                     
       ELSEIF p_mode = 13
      THEN
           SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.lang,
                     it.RELATEDITEMS_ID id,
                     it.duration_id,
                     d.OPPORTUNITY_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID,
                     o.DURATION
              FROM   item it,
                     duration d,
                     link l,
                     OPPORTUNITY o
             WHERE       it.duration_ID = d.duration_ID
                     AND d.OPPORTUNITY_ID = o.OPPORTUNITY_ID
                     AND l.item_id = it.item_id
                     AND d.OPPORTUNITY_ID = v_fundingbodyid;
                     
                        ELSEIF p_mode = 14
      THEN
            SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.lang,
                     it.RELATEDITEMS_ID id,
                     it.instruction_id,
                     i.OPPORTUNITY_ID,
                     l.URL,
                     l.LINK_TEXT
                    
                     
              FROM   item it,
                     instruction i,
                     link l,
                     OPPORTUNITY o
             WHERE   it.instruction_ID = i.instruction_ID
                     AND i.OPPORTUNITY_ID = o.OPPORTUNITY_ID
                     AND l.item_id = it.item_id
                     AND i.OPPORTUNITY_ID = v_fundingbodyid;
                     
                      ELSEIF p_mode = 15
      THEN
            SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     it.lang,
                     it.RELATEDITEMS_ID id,
                     it.licenseInformation_id,
                     i.OPPORTUNITY_ID,
                     l.URL,
                     l.LINK_TEXT
                    
                     
              FROM   item it,
                     licenseInformation i,
                     link l,
                     OPPORTUNITY o
             WHERE   it.licenseInformation_ID = i.licenseInformation_ID
                     AND i.OPPORTUNITY_ID = o.OPPORTUNITY_ID
                     AND l.item_id = it.item_id
                     AND i.OPPORTUNITY_ID = v_fundingbodyid;
      END IF;
   ELSEIF v_moduleid = 4
   THEN
      IF p_mode = 4
      THEN
           SELECT   it.RELTYPE,
                     it.description,
                     it.ITEM_ID,
                     -- it.GEOSCOPE_ID,
                     -- it.APPINFO_ID,
                     -- it.ABOUT_ID,
                     it.RELATEDITEMS_ID id,
                     it.LANG,
                     -- it.SYNOPSIS_ID,
                     ch.AWARD_ID,
                     l.URL,
                     l.LINK_TEXT,
                     AWARDSTATISTICS_ID
              FROM   item it, relateditems ch, link l
             WHERE       it.item_id = l.item_id
                     AND it.RELATEDITEMS_ID = ch.RELATEDITEMS_ID
                     AND ch.AWARD_ID = v_fundingbodyid;
      END IF;
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_language_detail_dml_prc` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_language_detail_dml_prc`(
    tran_id_in           integer,  /* Use -meta option sci_language_detail.tran_id%TYPE */
    scival_id_in         bigint,  /* Use -meta option sci_language_detail.scival_id%TYPE */
    column_desc_in       VARCHAR(4000),        /* Use -meta option sci_language_detail.column_desc%TYPE */
    column_id_in         integer,  /* Use -meta option sci_language_detail.column_id%TYPE */
    moduleid_in          VARCHAR(4000),           /* Use -meta option sci_language_detail.moduleid%TYPE */
    language_id_in       integer,  /* Use -meta option sci_language_detail.language_id%TYPE */
    tran_type_id_in      integer,  /* Use -meta option sci_language_detail.tran_type_id%TYPE */
    flag_in               INTEGER
)
BEGIN
   DECLARE l_tran_id integer;    /* Use -meta option sci_language_detail.tran_id%TYPE */
   DECLARE v_count     INTEGER;
   DECLARE lastrow     INTEGER;
   SET v_count=0;
   BEGIN
     
      IF CHAR_LENGTH(COLUMN_DESC_IN) < 4000 THEN
       SELECT COUNT(*) INTO V_COUNT FROM SCI_LANGUAGE_DETAIL WHERE RTRIM(LTRIM(CHAR(COLUMN_DESC)))= RTRIM(LTRIM(CHAR(COLUMN_DESC_IN)))
          AND SCIVAL_ID= scival_id_in AND COLUMN_ID=column_id_in AND LANGUAGE_ID=language_id_in;   
      END IF;
     END;
    

   IF flag_in = 1
   THEN
      IF column_id_in IN (2)
      THEN
         INSERT INTO fundingbody_main (FUNDINGBODY_ID, ORGID) VALUES (scival_id_in, language_id_in); 
         SELECT   COUNT(tran_id_in)
           INTO   v_count
           FROM   SCI_LANGUAGE_DETAIL
          WHERE   COLUMN_ID = column_id_in
                  AND SCIVAL_ID = scival_id_in
                  AND LANGUAGE_ID = language_id_in;
		
      END IF;

       -- SET l_tran_id = sci_language_dtl_tran_id_seq.NEXTVAL;
       -- select tran_id+1 into l_tran_id from sci_language_detail;
	   select tran_id+1 into l_tran_id from sci_language_detail order by tran_id desc limit 0,1;
      
      INSERT INTO scival.sci_language_detail (tran_id,
                                              scival_id,
                                              column_desc,
                                              column_id,
                                              moduleid,
                                              language_id,
                                              tran_type_id)
        VALUES   (ifnull(l_tran_id,0),
                  scival_id_in,
                  column_desc_in,
                  column_id_in,
                  moduleid_in,
                  language_id_in,
                  tran_type_id_in);
   ELSEIF flag_in = 2
   THEN
      UPDATE   sci_language_detail
         SET   column_desc = column_desc_in,
               language_id = IFNULL (language_id_in, language_id),
               tran_type_id = IFNULL (tran_type_id_in, tran_type_id)
       WHERE   tran_id = tran_id_in;
   ELSEIF flag_in = 3
   THEN
      DELETE FROM   sci_language_detail
            WHERE   tran_id = tran_id_in;
   END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_LIMITEDSUBMISSION_DML_PRC` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_LIMITEDSUBMISSION_DML_PRC`(
P_WORKFLOWID                         INTEGER,
   P_NOT_SPECIFIED                      VARCHAR(4000) /* DEFAULT NULL */ ,
   P_DISABILITIES                       VARCHAR(4000) /* DEFAULT NULL */ ,
   P_INVITATIONONLY                     VARCHAR(4000) /* DEFAULT NULL */ ,
   P_MEMBERONLY                         VARCHAR(4000) /* DEFAULT NULL */ ,
   P_NOMINATIONONLY                     VARCHAR(4000) /* DEFAULT NULL */ ,
   P_MINORTIES                          VARCHAR(4000) /* DEFAULT NULL */ ,
   P_WOMEN                              VARCHAR(4000) /* DEFAULT NULL */ ,
   P_NUMBEROFAPPLICANTSALLOWED          INTEGER /* DEFAULT NULL */ ,
   P_LIMITEDSUBMISSION_TEXT             VARCHAR(4000) /* DEFAULT NULL */ ,
   P_ELIGIBILITYCLASSIFICATION_ID       INTEGER /* DEFAULT NULL */ ,
   P_RESTRICTIONS_ID                    INTEGER /* DEFAULT NULL */ ,
   p_lang                               VARCHAR(4000) /* DEFAULT NULL */ ,
   P_MODE                               INTEGER             -- -*0 FOR INSERT
)
BEGIN
   DECLARE V_ID                             INTEGER;
   DECLARE V_TRANSITIONALID                 INTEGER;
   DECLARE V_MODULEID                       INTEGER;
   DECLARE V_TASKID                         INTEGER;
   DECLARE V_CYCLE                          INTEGER;
   DECLARE V_FUNDINGBODY_ID                 INTEGER;
   DECLARE V_COUNT                          INTEGER;
   DECLARE L_ELIGCLASSIFICATION_SEQ         INTEGER;
   DECLARE L_COUNT                          INTEGER;
   DECLARE L_RESTRICTIONS_ID_SEQ            INTEGER;
   DECLARE L_ELIGIBILITYCLASSIFICATION_ID   INTEGER;
   DECLARE L_RESTRICTIONS_CNT               INTEGER  DEFAULT  0;
   DECLARE L_RESTRICTIONS_ID                INTEGER;
   DECLARE L_SUBMISSION_CNT                 INTEGER;

   SELECT   ID,
            MODULEID,
            TASKID,
            CYCLE
     INTO   V_ID,
            V_MODULEID,
            V_TASKID,
            V_CYCLE
     FROM   SCI_WORKFLOW
    WHERE   WORKFLOWID = P_WORKFLOWID;

   IF V_MODULEID = 3 AND P_MODE = 0
   THEN
      SELECT   ELIGIBILITYCLASSIFICATION_SEQ.NEXTVAL
        INTO   L_ELIGCLASSIFICATION_SEQ
        FROM   DUAL;

      INSERT INTO ELIGIBILITYCLASSIFICATION (
                                                ELIGIBILITYCLASSIFICATION_ID,
                                                OPPORTUNITY_ID,lang
                 )
        VALUES   (L_ELIGCLASSIFICATION_SEQ, V_ID,p_lang);

      SELECT   RESTRICTIONS_ID_SEQ.NEXTVAL INTO L_RESTRICTIONS_ID_SEQ FROM DUAL;

      INSERT INTO RESTRICTIONS (NOT_SPECIFIED,
                                DISABILITIES,
                                INVITATIONONLY,
                                MEMBERONLY,
                                NOMINATIONONLY,
                                MINORTIES,
                                WOMEN,
                                RESTRICTIONS_ID,
                                ELIGIBILITYCLASSIFICATION_ID)
        VALUES   (P_NOT_SPECIFIED,
                  P_DISABILITIES,
                  P_INVITATIONONLY,
                  P_MEMBERONLY,
                  P_NOMINATIONONLY,
                  P_MINORTIES,
                  P_WOMEN,
                  L_RESTRICTIONS_ID_SEQ,
                  L_ELIGCLASSIFICATION_SEQ);


      INSERT INTO LIMITEDSUBMISSION (
                                        NUMBEROFAPPLICANTSALLOWED,
                                        LIMITEDSUBMISSION_TEXT,
                                        RESTRICTION_ID
                 )
        VALUES   (
                     P_NUMBEROFAPPLICANTSALLOWED,
                     P_LIMITEDSUBMISSION_TEXT,
                     L_RESTRICTIONS_ID_SEQ
                 );

   ELSEIF V_MODULEID = 3 AND P_MODE = 1                               -- -UPDATE
   THEN
      UPDATE   RESTRICTIONS
         SET   NOT_SPECIFIED = P_NOT_SPECIFIED,
               DISABILITIES = P_DISABILITIES,
               INVITATIONONLY = P_INVITATIONONLY,
               MEMBERONLY = P_MEMBERONLY,
               NOMINATIONONLY = P_NOMINATIONONLY,
               MINORTIES = P_MINORTIES,
               WOMEN = P_WOMEN
       WHERE   ELIGIBILITYCLASSIFICATION_ID = P_ELIGIBILITYCLASSIFICATION_ID
               AND RESTRICTIONS_ID = P_RESTRICTIONS_ID;


      SELECT   COUNT( * )
        INTO   L_SUBMISSION_CNT
        FROM   LIMITEDSUBMISSION
       WHERE   RESTRICTION_ID = P_RESTRICTIONS_ID;


      UPDATE   LIMITEDSUBMISSION
         SET   NUMBEROFAPPLICANTSALLOWED = P_NUMBEROFAPPLICANTSALLOWED,
               LIMITEDSUBMISSION_TEXT = P_LIMITEDSUBMISSION_TEXT
       WHERE   RESTRICTION_ID = P_RESTRICTIONS_ID;
              
   ELSEIF V_MODULEID = 3 AND P_MODE = 2                               -- -DELETE
   THEN
      DELETE FROM  LIMITEDSUBMISSION
       WHERE   RESTRICTION_ID = P_RESTRICTIONS_ID;

      DELETE FROM  RESTRICTIONS
       WHERE   ELIGIBILITYCLASSIFICATION_ID = P_ELIGIBILITYCLASSIFICATION_ID
               AND RESTRICTIONS_ID = P_RESTRICTIONS_ID;


      DELETE FROM  ELIGIBILITYCLASSIFICATION
       WHERE   ELIGIBILITYCLASSIFICATION_ID = P_ELIGIBILITYCLASSIFICATION_ID;
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_managerinsdel_1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_managerinsdel_1`(
   p_workflowid         INTEGER,
   p_insdel             INTEGER,
   p_contactid          INTEGER,
   p_type               VARCHAR(4000),
   p_title              VARCHAR(4000),
   p_telephone          VARCHAR(4000),
   p_fax                VARCHAR(4000),
   p_email              VARCHAR(4000),
   p_url                VARCHAR(4000),
   p_website_text       VARCHAR(4000),
   p_MANAGERID          integer,
   p_country            VARCHAR(4000),
   p_room               VARCHAR(4000),
   p_street             VARCHAR(4000),
   p_state              VARCHAR(4000),
   p_city               VARCHAR(4000),
   p_postalcode         VARCHAR(4000),
   p_prefix             VARCHAR(4000),
   p_givenname          VARCHAR(4000),
   p_middlename         VARCHAR(4000),
   p_surname            VARCHAR(4000),
   p_suffix             VARCHAR(4000)
  
)
BEGIN
   DECLARE v_id             INTEGER;
   DECLARE v_value          INTEGER;
   DECLARE v_MANAGERSID     integer;
   DECLARE v_MANAGERID      integer;
   DECLARE v_contact        INTEGER;
   DECLARE v_count          INTEGER;
   DECLARE v_contactcount   INTEGER;
   DECLARE v_count1         INTEGER;
   DECLARE v_moduleid       integer;
 
   SELECT   ID, moduleid
     INTO   v_id, v_moduleid
     FROM   sci_workflow
    WHERE   workflowid = p_workflowid;


   IF p_insdel = 0
   THEN
      SELECT   COUNT(*)
        INTO   v_count
        FROM   Awardmanagers
       WHERE   AWARD_ID = v_id;

      IF v_count = 0
      THEN
         SELECT   AWARDMANAGERSID_SEQ.NEXTVAL INTO v_MANAGERSID FROM DUAL;

         INSERT INTO Awardmanagers (AWARDMANAGERS_ID, AWARD_ID)
           VALUES   (v_MANAGERSID, v_id);
      ELSE
         SELECT   AWARDMANAGERS_ID
           INTO   v_MANAGERSID
           FROM   Awardmanagers
          WHERE   AWARD_ID = v_id;
      END IF;

      SELECT   AWARDMANAGERID_SEQ.NEXTVAL INTO v_MANAGERID FROM DUAL;

      INSERT INTO Awardmanager (TYPE,
                                TITLE,
                                TELEPHONE,
                                FAX,
                                EMAIL,
                                AWARDMANAGER_ID,
                                AWARDMANAGERS_ID)
        VALUES   (p_TYPE,
                  p_TITLE,
                  p_TELEPHONE,
                  p_FAX,
                  p_EMAIL,
                  v_MANAGERID,
                  v_MANAGERSID);

      IF p_url IS NOT NULL
      THEN
         INSERT INTO awardwebsite (url, website_text, AWARDMANAGER_ID)
           VALUES   (p_url, p_website_text, v_contact);
      END IF;

      IF p_COUNTRY IS NOT NULL
      THEN
         INSERT INTO address (COUNTRY,
                              ROOM,
                              STREET,
                              CITY,
                              STATE,
                              POSTALCODE,
                              AWARDMANAGER_ID)
           VALUES   (p_COUNTRY,
                     p_ROOM,
                     p_STREET,
                     p_CITY,
                     p_STATE,
                     p_POSTALCODE,
                     v_MANAGERID);
      END IF;

      IF p_givenname IS NOT NULL AND p_surname IS NOT NULL
      THEN
         INSERT INTO AWARDCONTACTNAME (PREFIX,
                                       GIVENNAME,
                                       MIDDLENAME,
                                       SURNAME,
                                       SUFFIX,
                                       AWARDMANAGER_ID)
           VALUES   (p_PREFIX,
                     p_GIVENNAME,
                     p_MIDDLENAME,
                     p_SURNAME,
                     p_SUFFIX,
                     v_MANAGERID);
      END IF;

      IF p_url IS NOT NULL
      THEN
         INSERT INTO AWARDWEBSITE (URL, WEBSITE_TEXT, AWARDMANAGER_ID)
           VALUES   (p_url, p_WEBSITE_TEXT, v_MANAGERID);
      END IF;
   -- ***********************************************************************

   ELSEIF p_insdel = 1
   THEN
      select AWARDMANAGERS_ID into v_MANAGERSID from Awardmanager
            WHERE   AWARDMANAGER_ID = p_MANAGERID;
            
      DELETE FROM   AWARDWEBSITE
            WHERE   AWARDMANAGER_ID = p_MANAGERID;

      DELETE FROM   AWARDCONTACTNAME
            WHERE   AWARDMANAGER_ID = p_MANAGERID;

      DELETE FROM   address
            WHERE   AWARDMANAGER_ID = p_MANAGERID;

      DELETE FROM   Awardmanager
            WHERE   AWARDMANAGER_ID = p_MANAGERID;

      SELECT   COUNT(*)
        INTO   v_contactcount
        FROM   Awardmanager
       WHERE   AWARDMANAGERS_ID = v_MANAGERSID;

      IF v_contactcount = 0
      THEN
         DELETE FROM   Awardmanagers
               WHERE   AWARDMANAGERS_ID = v_MANAGERSID;
      END IF;

   ELSEIF p_insdel = 2
   THEN
      SELECT   COUNT(*)
        INTO   v_count1
        FROM   awardwebsite
       WHERE   AWARDMANAGER_ID = p_contactid;

      IF v_count1 = 0 AND p_url IS NOT NULL
      THEN
         INSERT INTO awardwebsite (url, website_text, AWARDMANAGER_ID)
           VALUES   (p_url, p_website_text, p_contactid);
      END IF;


      UPDATE   awardwebsite
         SET   url = p_url, website_text = p_website_text
       WHERE   AWARDMANAGER_ID = p_contactid;


      SELECT   COUNT(*)
        INTO   v_count1
        FROM   address
       WHERE   AWARDMANAGER_ID = p_contactid;

      IF v_count1 = 0 AND p_country IS NOT NULL
      THEN
         INSERT INTO address (country,
                              room,
                              street,
                              city,
                              state,
                              postalcode,
                              AWARDMANAGER_ID)
           VALUES   (p_country,
                     p_room,
                     p_street,
                     p_city,
                     p_state,
                     p_postalcode,
                     p_contactid);
      END IF;

      IF p_country IS NOT NULL
      THEN
         UPDATE   address
            SET   country = p_country,
                  room = p_room,
                  street = p_street,
                  city = p_city,
                  state = p_state,
                  postalcode = p_postalcode
          WHERE   AWARDMANAGER_ID = p_contactid;
      END IF;

      SELECT   COUNT(*)
        INTO   v_count1
        FROM   awardcontactname
       WHERE   AWARDMANAGER_ID = p_contactid;

      IF v_count1 = 0
         AND (   p_prefix IS NOT NULL
              OR p_givenname IS NOT NULL
              OR p_middlename IS NOT NULL
              OR p_surname IS NOT NULL
              OR p_suffix IS NOT NULL)
      THEN
         INSERT INTO awardcontactname (prefix,
                                       givenname,
                                       middlename,
                                       surname,
                                       suffix,
                                       AWARDMANAGER_ID)
           VALUES   (p_prefix,
                     p_givenname,
                     p_middlename,
                     p_surname,
                     p_suffix,
                     p_contactid);
      END IF;

      UPDATE   awardcontactname
         SET   prefix = p_prefix,
               givenname = p_givenname,
               middlename = p_middlename,
               surname = p_surname,
               suffix = p_suffix
       WHERE   AWARDMANAGER_ID = p_contactid;

      UPDATE   awardmanager
         SET   TYPE = p_type,
               title = p_title,
               telephone = p_telephone,
               fax = p_fax,
               email = p_email
       WHERE   AWARDMANAGER_ID = p_contactid;
   END IF;

   -- ********************************************************
   DELETE FROM   awardcontactname
         WHERE       prefix IS NULL
                 AND givenname IS NULL
                 AND middlename IS NULL
                 AND surname IS NULL
                 AND suffix IS NULL;

   -- ----******************************************************************

   -- OPEN p_awmanager FOR
      SELECT   b.TYPE,
               b.TITLE,
               b.TELEPHONE,
               b.FAX,
               b.EMAIL,
               b.AWARDMANAGER_ID contact_id,
               c.country countrycode,
               cc.name countryname,
               c.ROOM,
               c.STREET,
               c.CITY,
               IFNULL (c.state, c.state) statecode,
               IFNULL (sc.name, c.state) statename,
               c.POSTALCODE,
               d.PREFIX,
               d.GIVENNAME,
               d.MIDDLENAME,
               d.SURNAME,
               d.SUFFIX,
               e.URL,
               e.WEBSITE_TEXT
        FROM   Awardmanagers a,
               Awardmanager b,
               address c,
               AWARDCONTACTNAME d,
               AWARDWEBSITE e,
               SCI_COUNTRYCODES cc,
               SCI_STATECODES sc
       WHERE       a.AWARDMANAGERS_ID = b.AWARDMANAGERS_ID
               AND sc.code = c.STATE
               AND cc.LCODE = c.COUNTRY
               AND b.AWARDMANAGER_ID = c.AWARDMANAGER_ID
               AND b.AWARDMANAGER_ID = d.AWARDMANAGER_ID
               AND b.AWARDMANAGER_ID = e.AWARDMANAGER_ID
               AND AWARD_ID = v_id;   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_mandatory_section` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_mandatory_section`(
   p_workflowid       INTEGER
)
BEGIN
   DECLARE v_id         INTEGER;
   DECLARE v_moduleid   INTEGER;
   DECLARE v_name       VARCHAR (2000);
   DECLARE v_count      INTEGER;
   DECLARE NOT_FOUND INT DEFAULT 0;
 
 
   SELECT   ID, moduleid
     INTO   v_id, v_moduleid
     FROM   sci_workflow
    WHERE   workflowid = p_workflowid;

   IF v_moduleid = 2
   THEN
    --     DECLARE fb CURSOR
      --   FOR
            SELECT   NAME
              FROM   fundingbodytables
             WHERE   flag = 1;
      -- BEGIN
        -- OPEN fb;

         -- loop_label:
         -- LOOP
       --     FETCH fb INTO   v_name;

         --   IF NOT_FOUND = 1 THEN LEAVE loop_label; END IF;

           -- EXECUTE IMMEDIATE   'select count(*) from '
             --                or concat(ifnull(v_name, '')
               --              , ' where fundingbody_id= '
                 --            , ifnull(v_id, ''))
               -- INTO   v_count;

            
         -- CLOSE fb;
      -- END;
   ELSEIF v_moduleid = 3
   THEN
         -- DECLARE op CURSOR
         -- FOR
            SELECT   MAPTABLE
	         FROM   opportunity_tables
            WHERE   flag = 1;
     -- BEGIN
       --  SET NOT_FOUND = 0;
        -- OPEN op;

        -- loop_label2:
        -- LOOP
          --  FETCH op INTO   v_name;

            -- IF NOT_FOUND = 1 THEN LEAVE loop_label2; END IF;

            -- EXECUTE IMMEDIATE   'select count(*) from '
               --              or concat(ifnull(v_name, '')
                 --            , ' where opportunity_id= '
                   --          , ifnull(v_id, ''))
               -- INTO   v_count;
	
   ELSEIF v_moduleid = 4
   THEN
--         DECLARE aw CURSOR
  --       FOR
            SELECT   MAPTABLE
              FROM   award_tables
             WHERE   flag = 1;
      
-- DECLARE CONTINUE HANDLER FOR NOT FOUND SET NOT_FOUND = 1;BEGIN
   --      SET NOT_FOUND = 0;
     --    OPEN aw;

       --  loop_label3:
         -- LOOP
            -- FETCH aw INTO   v_name;

            -- IF NOT_FOUND = 1 THEN LEAVE loop_label3; END IF;

            -- EXECUTE IMMEDIATE   'select count(*) from '
               --              or concat(ifnull(v_name, '')
                 --            , ' where award_id= '
                   --          , ifnull(v_id, ''))
               -- INTO   v_count;

   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_opaw_tasklist` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_opaw_tasklist`(
	IN pUserId		BIGINT,
    IN pModuleId	BIGINT,
    IN pTaskId		BIGINT,
    IN pAllocation	BIGINT
)
BEGIN
	DECLARE	userAssignmentCount INT DEFAULT 0;    
    SELECT COUNT(1) INTO userAssignmentCount FROM userassignment WHERE userid = pUserId AND moduleid = pModuleId;

	IF pAllocation = 1 AND pModuleId = 4
    THEN
		IF userAssignmentCount = 0
        THEN
			SELECT DISTINCT fm.fundingbody_id, fm.fundingbodyname, fm.duedate
            FROM ( 
				SELECT moduleid, id, cycle, taskid FROM sci_workflow sw
				WHERE taskid = pTaskId AND moduleid = pModuleId AND assignby IS NULL
                AND completeddate IS NULL AND cycle = 0 AND IFNULL(sw.statusid, 0) NOT IN(7, 9, 11)
                AND NOT EXISTS(
					SELECT 1 FROM sci_workflow 
                    WHERE id = sw.id AND cycle = sq.cycle AND sequence < sw.sequence AND completeddate IS NULL
			)) ma,
            sci_modules sm, sci_tasks st, fundingbody_master fm, award aw
            WHERE ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND IFNULL(fm.statuscode, 0) != 4
            AND fm.fundingbody_id = aw.fundingbody_id AND hidden_flag = 0 AND aw.award_id = ma.id
            ORDER BY duedate, fundingbodyname;
		ELSE
			SELECT DISTINCT fm.fundingbody_id, fm.fundingbodyname, fm.duedate
            FROM fundingbody_master fm, award_master am, userassignment ua
            WHERE fm.fundingbody_id = am.fundingbodyid AND hidden_flag = 0 AND aw.awardid = ua.awardid
            AND ua.userid = pUserId AND aw.cycle = 0 AND aw.taskid = pTaskId
            ORDER BY duedate, fundingbodyname;
        END IF;
	ELSEIF pAllocation = 1 AND pModuleId = 3
    THEN
		IF userAssignmentCount = 0
        THEN
			SELECT DISTINCT fm.fundingbody_id, fm.fundingbodyname, fm.duedate
            FROM ( 
				SELECT moduleid, id, cycle, taskid FROM sci_workflow sw
				WHERE taskid = pTaskId AND moduleid = pModuleId AND assignby IS NULL
                AND completeddate IS NULL AND cycle = 0 AND IFNULL(sw.statusid, 0) NOT IN (7, 9)
                AND NOT EXISTS(
					SELECT 1 FROM sci_workflow 
                    WHERE id = sw.id AND cycle = sq.cycle AND sequence < sw.sequence AND completeddate IS NULL
			)) ma,
            sci_modules sm, sci_tasks st, fundingbody_master fm, opportunity op
            WHERE ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND IFNULL(fm.statuscode, 0) != 4
            AND fm.fundingbody_id = op.fundingbody_id AND hidden_flag = 0 AND op.opportunity_id = ma.id
            ORDER BY duedate, fundingbodyname;
		ELSE
			SELECT DISTINCT fm.fundingbody_id, fm.fundingbodyname, fm.duedate
            FROM fundingbody_master fm, opportunity_master om, userassignment ua
            WHERE fm.fundingbody_id = om.fundingbodyid AND hidden_flag = 0 AND om.opportunityid = ua.awardid
            AND ua.userid = pUserId AND aw.cycle = 0 AND aw.taskid = pTaskId
            ORDER BY duedate, fundingbodyname;
		END IF;    
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_op_changehistoryins` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_op_changehistoryins`(
	p_workflowid           INTEGER /* DEFAULT NULL */ ,
   p_opportunity_id       INTEGER /* DEFAULT NULL */ ,
   p_TYPE                 VARCHAR(4000) /* DEFAULT NULL */ ,
   p_POSTDATE             DATETIME /* DEFAULT NULL */ ,
   p_CHANGE_TEXT          VARCHAR(4000) /* DEFAULT NULL */ ,
   p_mode                 INTEGER, -- 0 = insert, 1 = insert with condition, 2 = update 3 delete
   p_change_id            INTEGER /* DEFAULT NULL */
)
BEGIN
	DECLARE v_moduleid          INTEGER;
	DECLARE v_id                INTEGER;
	DECLARE v_count             INTEGER;
	DECLARE v_value             INTEGER;
	DECLARE v_x                 INTEGER;
	DECLARE l_count             INTEGER;
	DECLARE l_version           INTEGER;
	DECLARE l_change_hist_cnt   INTEGER;
    
    IF p_workflowid IS NOT NULL
   THEN
      SELECT   moduleid, id
        INTO   v_moduleid, v_id
        FROM   sci_workflow
       WHERE   workflowid = p_workflowid;
   END IF;

   IF p_opportunity_id IS NOT NULL
   THEN
      SET v_id = p_opportunity_id;
      SET v_moduleid = 3;
   END IF;
   
   SELECT   COUNT( * )
     INTO   V_COUNT
     FROM   changehistory
    WHERE   OPPORTUNITY_ID = v_id;

IF V_COUNT = 0
   THEN
      SET V_VALUE = NULL;
   ELSE
      SELECT   CHANGEHISTORY_ID
        INTO   V_VALUE
        FROM   changehistory
       WHERE   OPPORTUNITY_ID = v_id;
   END IF;
   
   IF v_moduleid = 3
   THEN
      IF p_mode = 0
      THEN
         SELECT   COUNT( * )
           INTO   v_count
           FROM   changehistory
          WHERE   OPPORTUNITY_ID = v_id;



         IF v_count = 0
         THEN
            SELECT   changehistory_SEQ.NEXTVAL INTO v_value FROM DUAL;

            INSERT INTO CHANGEHISTORY (CHANGEHISTORY_ID, OPPORTUNITY_ID)
              VALUES   (v_value, V_ID);

            INSERT INTO `change` (TYPE,
                                POSTDATE,
                                VERSION,
                                CHANGE_TEXT,
                                CHANGEHISTORY_ID,
                                POSTDATE_IS_SAVE,
                                change_id)
              VALUES   (p_TYPE,
                        STR_TO_DATE (p_POSTDATE, '%d/%m/%Y'),
                        1,
                        p_CHANGE_TEXT,
                        v_value,
                        1,
                        change_id_SEQ.NEXTVAL);
         END IF;
      ELSEIF p_mode = 1
      THEN
         SELECT   COUNT( * )
           INTO   V_COUNT
           FROM   changehistory
          WHERE   OPPORTUNITY_ID = v_id;


         IF V_COUNT > 0
         THEN
            SELECT   COUNT( * )
              INTO   l_count
              FROM   `CHANGE`
             WHERE   CHANGEHISTORY_ID = (SELECT   CHANGEHISTORY_ID
                                           FROM   changehistory
                                          WHERE   OPPORTUNITY_ID = v_id)
                     AND TYPE = 'New';


            IF l_count > 0
            THEN
               SELECT   MAX (version)
                 INTO   l_version
                 FROM   `CHANGE`
                WHERE   CHANGEHISTORY_ID IN (SELECT   CHANGEHISTORY_ID
                                               FROM   changehistory
                                              WHERE   OPPORTUNITY_ID = v_id);

               INSERT INTO `change` (TYPE,
                                   POSTDATE,
                                   VERSION,
                                   CHANGE_TEXT,
                                   CHANGEHISTORY_ID,
                                   POSTDATE_IS_SAVE,
                                   change_id)
                  SELECT   'Update' TYPE,
                           POSTDATE,
                           l_version + 1,
                           CHANGE_TEXT,
                           CHANGEHISTORY_ID,
                           0 POSTDATE_IS_SAVE,
                           change_id_SEQ.NEXTVAL
                    FROM   `CHANGE`
                   WHERE   CHANGEHISTORY_ID =
                              (SELECT   CHANGEHISTORY_ID
                                 FROM   changehistory
                                WHERE   OPPORTUNITY_ID = v_id)
                           AND TYPE = 'New';
            ELSE
               SELECT   MAX(version)
                 INTO   l_version
                 FROM   `CHANGE`
                WHERE   CHANGEHISTORY_ID IN (SELECT   CHANGEHISTORY_ID
                                               FROM   changehistory
                                              WHERE   OPPORTUNITY_ID = v_id);

               INSERT INTO `change` (TYPE,
                                   POSTDATE,
                                   VERSION,
                                   CHANGE_TEXT,
                                   CHANGEHISTORY_ID,
                                   POSTDATE_IS_SAVE,
                                   change_id)
                  SELECT 'Update' TYPE,
                           POSTDATE,
                           l_version + 1,
                           CHANGE_TEXT,
                           CHANGEHISTORY_ID,
                           0 POSTDATE_IS_SAVE,
                           change_id_SEQ.NEXTVAL
                    FROM   `CHANGE`
                   WHERE   CHANGEHISTORY_ID =
                              (SELECT   CHANGEHISTORY_ID
                                 FROM   changehistory
                                WHERE   OPPORTUNITY_ID = v_id)
                           AND
                  ROWNUM <= 1;
            END IF;
         ELSE
            SELECT   changehistory_SEQ.NEXTVAL INTO v_value FROM DUAL;

            INSERT INTO CHANGEHISTORY (CHANGEHISTORY_ID, OPPORTUNITY_ID)
              VALUES   (v_value, V_ID);


            SELECT   MAX (version)
              INTO   l_version
              FROM   `CHANGE`
             WHERE   CHANGEHISTORY_ID IN (SELECT   CHANGEHISTORY_ID
                                            FROM   changehistory
                                           WHERE   OPPORTUNITY_ID = v_id);

            INSERT INTO `change` (TYPE,
                                POSTDATE,
                                VERSION,
                                CHANGE_TEXT,
                                CHANGEHISTORY_ID,
                                POSTDATE_IS_SAVE,
                                change_id)
              VALUES   ('Update',
                        NULL,
                        l_version + 1,
                        NULL,
                        v_value,
                        0,
                        change_id_SEQ.NEXTVAL);
         END IF;
      -- END IF;
      ELSEIF p_mode = 2
      THEN
         UPDATE   `change`
            SET   POSTDATE = STR_TO_DATE (p_POSTDATE, '%d-MON-%Y'),
                  CHANGE_TEXT = p_CHANGE_TEXT,
                  POSTDATE_IS_SAVE = 1
          WHERE   CHANGE_ID = p_change_id;

      ELSEIF p_mode = 3
      THEN
         SELECT   COUNT(CHANGEHISTORY_ID)
           INTO   l_change_hist_cnt
           FROM   `change`
          WHERE   CHANGEHISTORY_ID IN (SELECT   CHANGEHISTORY_ID
                                         FROM   `change`
                                        WHERE   CHANGE_ID = p_change_id);

         IF l_change_hist_cnt = 1
         THEN
            DELETE FROM   changehistory
                  WHERE   CHANGEHISTORY_ID IN
                                (SELECT   CHANGEHISTORY_ID
                                   FROM   `change`
                                  WHERE   CHANGE_ID = p_change_id);

            DELETE FROM   `change`
                  WHERE   CHANGE_ID = p_change_id;
                  
         ELSE
            DELETE FROM   `change`
                  WHERE   CHANGE_ID = p_change_id;
         END IF;
      END IF;

         SELECT   *
           FROM   `change`
          WHERE   CHANGEHISTORY_ID = v_value
                  AND version = (SELECT   MIN (version)
                                   FROM   `change`
                                  WHERE   CHANGEHISTORY_ID = v_value)
         UNION
         SELECT  *
           FROM   `change`
          WHERE   CHANGEHISTORY_ID = v_value
                  AND version = (SELECT   MAX (version)
                                   FROM   `change`
                                  WHERE   CHANGEHISTORY_ID = v_value);
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_op_changehistorylist` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_op_changehistorylist`(
	p_workflowid       INTEGER
)
BEGIN
	DECLARE v_id                 INTEGER;
	DECLARE v_moduleid           INTEGER;
	DECLARE v_CHANGEHISTORY_ID   INTEGER;
	DECLARE l_status_code        INTEGER;
	DECLARE v_count              INTEGER;
    
    SELECT   id, moduleid INTO  v_id, v_moduleid FROM   sci_workflow WHERE   workflowid = p_workflowid;

	SELECT   IFNULL(STATUSCODE, 0) INTO   l_status_code FROM   opportunity_master WHERE   OPPORTUNITYID = v_id;
    
    IF l_status_code = 1
	THEN
		UPDATE   createddate SET   CREATEDDATE_TEXT = SYSDATE() WHERE REVISIONHISTORY_ID=(select max(REVISIONHISTORY_ID) from revisionhistory   where  OPPORTUNITY_ID = v_id);
	END IF;
    
    IF v_moduleid = 3
	THEN
		SELECT   COUNT(CHANGEHISTORY_ID) INTO   v_count FROM   changehistory WHERE   OPPORTUNITY_ID = v_id;

		IF v_count = 0
		THEN
			SET v_CHANGEHISTORY_ID = NULL;
		ELSE
			SELECT   CHANGEHISTORY_ID 
			INTO   v_CHANGEHISTORY_ID
			FROM   changehistory
			WHERE   OPPORTUNITY_ID = v_id;
		END IF;

        SELECT  *
		FROM   `CHANGE` WHERE   CHANGEHISTORY_ID = v_CHANGEHISTORY_ID AND version = (SELECT  MIN(version) FROM   `CHANGE` WHERE   CHANGEHISTORY_ID = v_CHANGEHISTORY_ID)
		UNION
		SELECT *
        FROM   `CHANGE` WHERE   CHANGEHISTORY_ID = v_CHANGEHISTORY_ID AND version = (SELECT   MAX(version) FROM   `CHANGE` WHERE   CHANGEHISTORY_ID = v_CHANGEHISTORY_ID);

		SELECT   POSTDATE_IS_SAVE 
		FROM   `CHANGE` WHERE   CHANGEHISTORY_ID = v_CHANGEHISTORY_ID AND version = (SELECT   MAX(version) FROM   `CHANGE` WHERE   CHANGEHISTORY_ID = v_CHANGEHISTORY_ID);
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_op_delete_date_prc` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_op_delete_date_prc`(
	P_WORKFLOWID        INTEGER,
	p_date_type         INTEGER,
	p_sequence_id       INTEGER,
	p_mode              INTEGER                    
)
BEGIN
   
	DECLARE V_MODULEID               INTEGER;
	DECLARE V_ID                     INTEGER;
	DECLARE V_CYCLE                  INTEGER;
	DECLARE V_FUNDINGBODYID          INTEGER;
	DECLARE v_value                  VARCHAR (2000);   
	DECLARE v_RELATEDORGS_ID         INTEGER;
	DECLARE v_cnt                    INTEGER;
	DECLARE l_count 		INTEGER;
	BEGIN
		SELECT   MODULEID, ID, CYCLE INTO   V_MODULEID, V_ID, V_CYCLE FROM   SCI_WORKFLOW WHERE   WORKFLOWID = P_WORKFLOWID;

		IF V_MODULEID = 3
		THEN
			SELECT   FUNDINGBODYID INTO   V_FUNDINGBODYID FROM   OPPORTUNITY_MASTER WHERE   OPPORTUNITYID = V_ID;
		END IF;

		IF p_mode = 0
		THEN
			SELECT  COUNT(*) INTO   l_count FROM   sci_opp_loi_duedate_detail 
            WHERE OPPORTUNITY_ID = V_ID AND DATE_TYPE = p_date_type AND SEQUENCE_ID = p_sequence_id;

		IF l_count > 0
		THEN
			DELETE FROM   sci_opp_loi_duedate_detail WHERE OPPORTUNITY_ID = V_ID AND DATE_TYPE = p_date_type
            AND SEQUENCE_ID = p_sequence_id;
		 -- RETURNING p_sequence_id INTO l_sequence_id;

			UPDATE sci_opp_loi_duedate_detail SET   sequence_id = sequence_id - 1
			WHERE opportunity_id = v_id AND date_type = p_date_type AND sequence_id > l_sequence_id;
		END IF;
	END IF;

	IF p_date_type = 1
	THEN      
		SELECT   opportunity_id,
                   DATE_FORMAT (loi_due_date, '%d-%m-%Y') loi_DATE,
                  sequence_id,
                  DATE_REMARKS
        FROM   sci_opp_loi_duedate_detail
        WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 1;
	ELSEIF p_date_type = 2
	THEN      
		SELECT   opportunity_id,
                  DATE_FORMAT (loi_due_date, '%d-%m-%Y') DUE_DATE,
                  sequence_id,
                  DATE_REMARKS
        FROM   sci_opp_loi_duedate_detail
        WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 2;
	ELSEIF p_date_type = 3
	THEN    
        SELECT   opportunity_id,
                    DATE_FORMAT (loi_due_date, '%d-%m-%Y') expiration_date,
                  sequence_id,
                  DATE_REMARKS
        FROM   sci_opp_loi_duedate_detail
        WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 3;
	ELSEIF p_date_type = 4
	THEN    
        SELECT   opportunity_id,
                   DATE_FORMAT (loi_due_date, '%d-%m-%Y') firstpost_date,
                  sequence_id,
                  DATE_REMARKS
        FROM   sci_opp_loi_duedate_detail
        WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 4;
	ELSEIF p_date_type = 5
	THEN      
        SELECT   opportunity_id,
                    DATE_FORMAT (loi_due_date, '%d-%m-%Y') lastmodifedpost_date,
                  sequence_id,
                  DATE_REMARKS
        FROM   sci_opp_loi_duedate_detail
        WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 5;
	ELSEIF p_date_type = 6
	THEN
		SELECT   opportunity_id,
                  DATE_FORMAT (loi_due_date, '%d-%m-%Y') open_date,
                  sequence_id,
                  DATE_REMARKS
        FROM   sci_opp_loi_duedate_detail
        WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 6;
	END IF;	
   END;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_OP_ECLASSIFICATIONLIST` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_OP_ECLASSIFICATIONLIST`(
   P_WORKFLOWID       INTEGER
)
BEGIN
   DECLARE V_ID         INTEGER;
   DECLARE V_MODULEID   INTEGER;
   
   SELECT   ID, MODULEID
     INTO   V_ID, V_MODULEID
     FROM   SCI_WORKFLOW
    WHERE   WORKFLOWID = P_WORKFLOWID;

   IF V_MODULEID = 3
   THEN
        SELECT   sty.TYPE display,
                  el.ID,
                  ELIGIBILITYCLASSIFICATION_TEXT,
                  OPPORTUNITY_ID,
                  el.TYPE TYPE,
                  COUNTRY_CODE,
                  STATE,
                  CITY,
                  ers.ID REGION_SPECIFIC_ID
           FROM   ELIGIBILITYCLASSIFICATION el,
                  SCI_TYPEIDVALUES sty,
                  elgcls_regionspecific ers
          WHERE       el.TYPE = sty.VALUE
                  AND OPPORTUNITY_ID = V_ID
                  AND IFNULL(ers.ID,0) = IFNULL(el.REGION_SPECIFIC_ID,0);

         SELECT   a.VALUE,
                  a.TYPE,
                  a.ELIGIBILITYCLASSIFICATION,
                  b.TYPE display
           FROM   SCI_CLASSIFICATIONTYPEIDVALUES a, SCI_TYPEIDVALUES b
          WHERE   A.TYPE = b.VALUE
         UNION
         SELECT   lcode AS VALUE,
                  'citizenship' AS TYPE,
                  name AS ELIGIBILITYCLASSIFICATION,
                  'Citizenship/Residency Requirements' AS display
           FROM   sci_countrycodes
         ORDER BY   ELIGIBILITYCLASSIFICATION;

     SELECT   * FROM SCI_TYPEIDVALUES;

          SELECT   COUNTRYID,
                    NAME,
                    LCODE,
                    SCODE
             FROM   SCI_COUNTRYCODES
         ORDER BY   NAME;
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_op_eligibilitylist` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_op_eligibilitylist`(
	p_workflowid              INTEGER
)
BEGIN
   DECLARE v_OPPORTUNITYID   INTEGER;
   DECLARE v_moduleid        INTEGER;
 
   SELECT   ID, moduleid
     INTO   v_OPPORTUNITYID, v_moduleid
     FROM   sci_workflow
    WHERE   WORKFLOWID = p_workflowid;

   IF v_moduleid = 3
   THEN
         SELECT   ec.eligibilityclassification_id,
                  ec.opportunity_id,
                  ie.individualeligibility_ID,
                  ie.degree,
                  ie.graduate,
                  ie.newfaculty,
                  ie.not_specified,
                  ie.undergraduate,
                  cs.citizenship_text,
                  s.name country,
                  cs.norestriction,
                  Case  when ec.LANG is null then 'en' 
                  else ec.Lang End LANG
           FROM   eligibilityclassification ec,
                  individualeligibility ie,
                  citizenship cs,
                  SCI_COUNTRYCODES s
          WHERE   ec.opportunity_id = v_OPPORTUNITYID
                  AND ec.eligibilityclassification_id =
                        ie.eligibilityclassification_id
                  AND ie.individualeligibility_id =
                        cs.individualeligibility_id
                        AND lower(S.LCODE)=lower(cs.country);

         SELECT   ec.eligibilityclassification_id,
                  ec.opportunity_id,
                  oe.organizationeligibility_id,
                  oe.academic,
                  oe.commercial,
                  oe.government,
                  oe.nonprofit,
                  oe.not_specified,
                  oe.sme,
                  rs.city,
                  s.name country,
                  rs.norestriction,
                  rs.regionspecific_text,
                  rs.state,
                  Case  when ec.LANG is null then 'en' 
                  else ec.Lang End LANG
           FROM   eligibilityclassification ec,
                  organizationeligibility oe,
                  regionspecific rs,
                  SCI_COUNTRYCODES s
          WHERE   ec.opportunity_id = v_opportunityid
                  AND ec.eligibilityclassification_id =
                        oe.eligibilityclassification_id
                  AND oe.organizationeligibility_id =
                        rs.organizationeligibility_id
                         AND lower(S.LCODE)=lower(cs.country);

        SELECT   ec.eligibilityclassification_id,
                  ec.opportunity_id,                 
                  rt.disabilities,
                  rt.invitationonly,
                  rt.memberonly,
                  rt.nominationonly,
                  rt.minorties,
                  rt.women,
                  rt.restrictions_id,
                  rt.not_specified,
                  ls.numberofapplicantsallowed,
                  Case  when ec.LANG is null then 'en' 
                  else ec.Lang End LANG
           FROM   eligibilityclassification ec,
                  restrictions rt,
                  limitedsubmission ls
          WHERE   ec.opportunity_id = v_opportunityid
                  AND ec.eligibilityclassification_id =
                        RT.ELIGIBILITYCLASSIFICATION_ID
                  AND RT.RESTRICTIONS_ID = LS.RESTRICTION_ID;
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_OP_estfundingins` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_OP_estfundingins`(
 p_workflowid               INTEGER,
   p_currency                 VARCHAR(4000),
   p_amount                   VARCHAR(4000),
   p_amount_description       VARCHAR(4000) /* DEFAULT NULL */ ,
   p_total_amount             DOUBLE /* DEFAULT NULL */ ,
   p_startdate                DATETIME /* DEFAULT NULL */ ,
   p_enddate                  DATETIME /* DEFAULT NULL */ ,
   p_url                      VARCHAR(4000) /* DEFAULT NULL */ ,
   p_url_text                 VARCHAR(4000) /* DEFAULT NULL */ ,
   p_mode                     INTEGER,     -- 0 = insert, 1 = update 2 = delete
   PAGE_MODE                  INTEGER,
   p_SEQUENCE_ID              INTEGER    -- 1 = awardceiling, 2 = awardflooring, 3 = estimatefunding, 4 = amount 5* installmentamount
)
sp_lbl:

BEGIN
   DECLARE v_moduleid                    INTEGER;
   DECLARE v_id                          INTEGER;
   DECLARE v_count                       INTEGER;
   DECLARE l_inst_Amount_Id_seq          INTEGER;
   DECLARE l_count                       INTEGER;
   DECLARE l_installmentandamount_id     INTEGER;
   DECLARE v_itemid                      INTEGER;
   DECLARE l_estimatedamountdesc_id      INTEGER;
   DECLARE l_limitedsubmissiondesc_id    INTEGER;
   DECLARE l_eligibilitydescription_id   INTEGER;
   DECLARE l_INST_AMOUNT_l_SEQUENCE_ID   INTEGER;

   -- ---- p_amount has been replaced with lv_amount by Julfcar Ali on dt- 20130422 -------
   DECLARE lv_amount                     INTEGER;
 
   IF LOCATE ('.', p_amount, 1) > 0
   THEN
        LEAVE sp_lbl;
   ELSE
      SET lv_amount = TO_NUMBER (TRIM (p_amount));
   END IF;

   SELECT   moduleid, id
     INTO   v_moduleid, v_id
     FROM   sci_workflow
    WHERE   workflowid = p_workflowid;

   IF v_moduleid = 3
   THEN
      IF PAGE_MODE = 3                                  -- 0 = estimatefunding,
      THEN
         IF p_mode = 0
         THEN
            SELECT   COUNT( * )
              INTO   v_count
              FROM   ESTIMATEDFUNDING
             WHERE   OPPORTUNITY_ID = v_id;

            IF v_count = 0
            THEN
               INSERT INTO ESTIMATEDFUNDING (CURRENCY,
                                             ESTIMATEDFUNDING_TEXT,
                                             OPPORTUNITY_ID,
                                             amount_description)
                 VALUES   (p_CURRENCY,
                           lv_amount,
                           v_id,
                           p_amount_description);

               SELECT   item_SEQ.NEXTVAL INTO v_itemid FROM DUAL;



               SELECT   estimatedamountdesc_id_SEQ.NEXTVAL
                 INTO   l_estimatedamountdesc_id
                 FROM   DUAL;
            ELSE
               UPDATE   ESTIMATEDFUNDING
                  SET   CURRENCY = p_CURRENCY,
                        ESTIMATEDFUNDING_TEXT = lv_amount,
                        amount_description = p_amount_description
                WHERE   OPPORTUNITY_ID = v_id;
            END IF;
         ELSEIF p_mode = 1
         THEN
         
              SELECT   COUNT( * )
              INTO   v_count
              FROM   ESTIMATEDFUNDING
              WHERE   OPPORTUNITY_ID = v_id;

            IF v_count = 0
            THEN
               INSERT INTO ESTIMATEDFUNDING (CURRENCY,
                                             ESTIMATEDFUNDING_TEXT,
                                             OPPORTUNITY_ID,
                                             amount_description)
                 VALUES   (p_CURRENCY,
                           lv_amount,
                           v_id,
                           p_amount_description);
            else
            
              UPDATE   ESTIMATEDFUNDING
                 SET   CURRENCY = p_CURRENCY,
                     ESTIMATEDFUNDING_TEXT = lv_amount,
                     amount_description = p_amount_description
               WHERE   OPPORTUNITY_ID = v_id;
            end if; 
                  ELSEIF p_mode = 2
         THEN
            DELETE FROM   ESTIMATEDFUNDING
                  WHERE       CURRENCY = p_CURRENCY
                          AND ESTIMATEDFUNDING_TEXT = lv_amount
                          AND amount_description = p_amount_description
                          AND OPPORTUNITY_ID = v_ID;
         END IF;


            SELECT   *
              FROM   ESTIMATEDFUNDING
             WHERE   OPPORTUNITY_ID = V_ID;


            SELECT   li.URL, li.LINK_TEXT
              FROM   estimatedAmountDescription ead, item it, link li
             WHERE   OPPORTUNITY_ID = V_ID
                     AND EAD.ESTIMATEDAMOUNTDESCRIPTION_ID =
                           IT.ESTIMATEDAMOUNTDESCRIPTION_ID
                     AND IT.ITEM_ID = LI.ITEM_ID;
      ELSEIF page_mode = 2                                  -- 1 = awardflooring
      THEN
         IF p_mode = 0
         THEN
            SELECT   COUNT( * )
              INTO   v_count
              FROM   awardfloor
             WHERE   OPPORTUNITY_ID = v_id;

            IF v_count = 0
            THEN
               INSERT INTO awardfloor (
                                          CURRENCY,
                                          ESTIMATEDFUNDING_TEXT,
                                          OPPORTUNITY_ID
                          )
                 VALUES   (p_CURRENCY, lv_amount, v_id);

            ELSE
               UPDATE   awardfloor
                  SET   CURRENCY = p_CURRENCY,
                        ESTIMATEDFUNDING_TEXT = lv_amount
                WHERE   OPPORTUNITY_ID = v_id;

            END IF;
         ELSEIF p_mode = 1
         THEN
            UPDATE   awardfloor
               SET   CURRENCY = p_CURRENCY, ESTIMATEDFUNDING_TEXT = lv_amount
             WHERE   OPPORTUNITY_ID = v_id;

         ELSEIF p_mode = 2
         THEN
            DELETE FROM   awardfloor
                  WHERE       CURRENCY = p_CURRENCY
                          AND ESTIMATEDFUNDING_TEXT = lv_amount
                          AND OPPORTUNITY_ID = v_ID;

           
         END IF;



            SELECT   *
              FROM   awardfloor
             WHERE   OPPORTUNITY_ID = V_ID;

        SELECT   NULL URL, NULL LINK_TEXT FROM DUAL;
      ELSEIF page_mode = 1                                   -- 2 = awardceiling
      THEN
         IF p_mode = 0
         THEN
            SELECT   COUNT( * )
              INTO   v_count
              FROM   AWARDCEILING
             WHERE   OPPORTUNITY_ID = v_id;

            IF v_count = 0
            THEN
               INSERT INTO AWARDCEILING (
                                            CURRENCY,
                                            AWARDCEILING_TEXT,
                                            OPPORTUNITY_ID
                          )
                 VALUES   (p_CURRENCY, lv_amount, v_id);

            ELSE
               UPDATE   AWARDCEILING
                  SET   CURRENCY = p_CURRENCY, AWARDCEILING_TEXT = lv_amount
                WHERE   OPPORTUNITY_ID = v_id;

            END IF;
         ELSEIF p_mode = 1
         THEN
            UPDATE   AWARDCEILING
               SET   CURRENCY = p_CURRENCY, AWARDCEILING_TEXT = lv_amount
             WHERE   OPPORTUNITY_ID = v_id;

         ELSEIF p_mode = 2
         THEN
            DELETE FROM   AWARDCEILING
                  WHERE       CURRENCY = p_CURRENCY
                          AND AWARDCEILING_TEXT = lv_amount
                          AND OPPORTUNITY_ID = v_ID;

         END IF;



           SELECT   CURRENCY,
                     AWARDCEILING_TEXT ESTIMATEDFUNDING_TEXT,
                     OPPORTUNITY_ID
              FROM   AWARDCEILING
             WHERE   OPPORTUNITY_ID = V_ID;

        SELECT   NULL URL, NULL LINK_TEXT FROM DUAL;
      END IF;
   ELSEIF v_moduleid = 4
   THEN
      IF page_mode = 4
      THEN
         IF p_mode = 0
         THEN
            SELECT   COUNT( * )
              INTO   v_count
              FROM   amount
             WHERE   AWARD_ID = v_id;

            IF v_count = 0
            THEN
               INSERT INTO amount (CURRENCY, AMOUNT_TEXT, AWARD_ID)
                 VALUES   (p_CURRENCY, lv_amount, v_id);

            ELSE
               UPDATE   amount
                  SET   CURRENCY = p_CURRENCY, AMOUNT_TEXT = lv_amount
                WHERE   AWARD_ID = v_id;

            END IF;
         ELSEIF p_mode = 1
         THEN
            UPDATE   amount
               SET   CURRENCY = p_CURRENCY, AMOUNT_TEXT = lv_amount
             WHERE   AWARD_ID = v_id;

         ELSEIF p_mode = 2
         THEN
            DELETE FROM   amount
                  WHERE       CURRENCY = p_CURRENCY
                          AND AMOUNT_TEXT = lv_amount
                          AND AWARD_ID = v_ID;

         END IF;


            SELECT   *
              FROM   amount
             WHERE   award_ID = V_ID;

        SELECT   NULL URL, NULL LINK_TEXT FROM DUAL;
      ELSEIF PAGE_MODE = 5
      -- - started on 4 jun-2018 by avinash  for installment and amount
      THEN
         IF p_mode = 0
         THEN
            SELECT   COUNT( * )
              INTO   v_count
              FROM   amount
             WHERE   AWARD_ID = v_id AND AWARDEE_ID IS NULL;

            IF v_count = 0
            THEN
               INSERT INTO amount (CURRENCY, AMOUNT_TEXT, AWARD_ID)
                 VALUES   (p_CURRENCY, p_total_amount, v_id);

            ELSE
               UPDATE   amount
                  SET   CURRENCY = p_CURRENCY, AMOUNT_TEXT = p_total_amount
                WHERE   AWARD_ID = v_id AND AWARDEE_ID IS NULL;
            END IF;



            SELECT   COUNT( * )
              INTO   l_count
              FROM   instalmentAndAmount
             WHERE   award_id = v_id;


            SELECT   INST_AMOUNT_l_SEQUENCE_ID.NEXTVAL
              INTO   l_INST_AMOUNT_l_SEQUENCE_ID
              FROM   DUAL;


            IF l_count = 0
            THEN
               SELECT   INST_AMOUNT_ID_SEQ.NEXTVAL
                 INTO   l_inst_Amount_Id_seq
                 FROM   DUAL;


               INSERT INTO instalmentAndAmount (
                                                   INSTALLMENTANDAMOUNT_ID,
                                                   award_id
                          )
                 VALUES   (l_inst_Amount_Id_seq, v_id);

               INSERT INTO installment (INSTALLMENTANDAMOUNT_ID,
                                        INSTALLMENTSTART_DATE,
                                        INSTALLMENTEND_DATE,
                                        AMOUNT,
                                        CURRENCY,
                                        SEQUENCE_ID)
                 VALUES   (l_inst_Amount_Id_seq,
                           p_startdate,
                           p_enddate,
                           p_amount,
                           p_currency,
                           l_INST_AMOUNT_l_SEQUENCE_ID);

               INSERT INTO totalAmount (
                                           INSTALLMENTANDAMOUNT_ID,
                                           AMOUNT,
                                           CURRENCY
                          )
                 VALUES   (l_inst_Amount_Id_seq, p_total_amount, p_currency);

            ELSE
            SELECT   INSTALLMENTANDAMOUNT_ID
                 INTO   l_installmentandamount_id
                 FROM   instalmentAndAmount
                WHERE   award_id = v_id;
                
               INSERT INTO installment (INSTALLMENTANDAMOUNT_ID,
                                        INSTALLMENTSTART_DATE,
                                        INSTALLMENTEND_DATE,
                                        AMOUNT,
                                        CURRENCY,
                                        SEQUENCE_ID)
                 VALUES   (l_installmentandamount_id,
                           p_startdate,
                           p_enddate,
                           p_amount,
                           p_currency,
                           l_INST_AMOUNT_l_SEQUENCE_ID);
     
            END IF;
         ELSEIF p_mode = 1
         THEN
            SELECT   COUNT( * )
              INTO   v_count
              FROM   amount
             WHERE   AWARD_ID = v_id AND AWARDEE_ID IS NULL;

            IF v_count = 0
            THEN
               INSERT INTO amount (CURRENCY, AMOUNT_TEXT, AWARD_ID)
                 VALUES   (p_CURRENCY, p_total_amount, v_id);

            ELSE
               UPDATE   amount
                  SET   CURRENCY = p_CURRENCY, AMOUNT_TEXT = p_total_amount
                WHERE   AWARD_ID = v_id AND AWARDEE_ID IS NULL;

            END IF;



            SELECT   COUNT( * )
              INTO   l_count
              FROM   instalmentAndAmount
             WHERE   award_id = v_id;

            SELECT   INST_AMOUNT_l_SEQUENCE_ID.NEXTVAL
              INTO   l_INST_AMOUNT_l_SEQUENCE_ID
              FROM   DUAL;

            IF l_count = 0
            THEN
               SELECT   INST_AMOUNT_ID_SEQ.NEXTVAL
                 INTO   l_inst_Amount_Id_seq
                 FROM   DUAL;


               INSERT INTO instalmentAndAmount (
                                                   INSTALLMENTANDAMOUNT_ID,
                                                   award_id
                          )
                 VALUES   (l_inst_Amount_Id_seq, v_id);

               IF (p_SEQUENCE_ID = 0)
               THEN
                  INSERT INTO installment (INSTALLMENTANDAMOUNT_ID,
                                           INSTALLMENTSTART_DATE,
                                           INSTALLMENTEND_DATE,
                                           AMOUNT,
                                           CURRENCY,
                                           SEQUENCE_ID)
                    VALUES   (l_inst_Amount_Id_seq,
                              p_startdate,
                              p_enddate,
                              p_amount,
                              p_currency,
                              l_INST_AMOUNT_l_SEQUENCE_ID);
               END IF;

               INSERT INTO totalAmount (
                                           INSTALLMENTANDAMOUNT_ID,
                                           AMOUNT,
                                           CURRENCY
                          )
                 VALUES   (l_inst_Amount_Id_seq, p_total_amount, p_currency);

            ELSE
               SELECT   INSTALLMENTANDAMOUNT_ID
                 INTO   l_installmentandamount_id
                 FROM   instalmentAndAmount
                WHERE   award_id = v_id;

               IF (p_SEQUENCE_ID = 0)
               THEN
                  INSERT INTO installment (INSTALLMENTANDAMOUNT_ID,
                                           INSTALLMENTSTART_DATE,
                                           INSTALLMENTEND_DATE,
                                           AMOUNT,
                                           CURRENCY,
                                           SEQUENCE_ID)
                    VALUES   (l_installmentandamount_id,
                              p_startdate,
                              p_enddate,
                              p_amount,
                              p_currency,
                              l_INST_AMOUNT_l_SEQUENCE_ID);
               ELSE
                  UPDATE   installment
                     SET   INSTALLMENTSTART_DATE = p_startdate,
                           INSTALLMENTEND_DATE = p_enddate,
                           AMOUNT = p_amount,
                           CURRENCY = p_currency
                   WHERE   INSTALLMENTANDAMOUNT_ID =
                              l_INSTALLMENTANDAMOUNT_ID
                           AND SEQUENCE_ID = p_SEQUENCE_ID;
               END IF;

               UPDATE   totalAmount
                  SET   AMOUNT = p_total_amount, CURRENCY = p_currency
                WHERE   INSTALLMENTANDAMOUNT_ID = l_INSTALLMENTANDAMOUNT_ID;

               UPDATE   amount
                  SET   CURRENCY = p_CURRENCY, AMOUNT_TEXT = p_total_amount
                WHERE   AWARD_ID = v_id AND AWARDEE_ID IS NULL; -- added 27-jn-18

            END IF;
         ELSEIF p_mode = 3 AND p_SEQUENCE_ID > 0
         THEN
            DELETE from  installment
             WHERE   SEQUENCE_ID = p_SEQUENCE_ID;

         END IF;
      END IF;

          SELECT   SEQUENCE_ID,
                  i.INSTALLMENTANDAMOUNT_ID,
                  INSTALLMENTSTART_DATE,
                  INSTALLMENTEND_DATE,
                  AMOUNT,
                  CURRENCY
           FROM   installment i, INSTALMENTANDAMOUNT im
          WHERE   i.INSTALLMENTANDAMOUNT_ID = im.INSTALLMENTANDAMOUNT_ID
                  AND award_id = v_id;
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_OP_ESTFUNDINGINS_y` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_OP_ESTFUNDINGINS_y`(
   p_workflowid               INTEGER,
   p_currency                 VARCHAR(4000),
   p_amount                   VARCHAR(4000),
   p_amount_description       VARCHAR(4000) ,
   p_total_amount             DOUBLE ,
   p_startdate                DATETIME ,
   p_enddate                  DATETIME ,
   p_url                      VARCHAR(4000),
   p_url_text                 VARCHAR(4000),
   p_mode                     INTEGER,     
   PAGE_MODE                  INTEGER,
   p_SEQUENCE_ID              integer
)
BEGIN
DECLARE v_moduleid                    INTEGER;
DECLARE v_id                          INTEGER;
DECLARE v_count                       INTEGER;
DECLARE l_inst_Amount_Id_seq          INTEGER;
DECLARE l_count                       INTEGER;
DECLARE l_installmentandamount_id     INTEGER;
DECLARE v_itemid                      INTEGER;
DECLARE l_estimatedamountdesc_id      INTEGER;
DECLARE l_limitedsubmissiondesc_id    INTEGER;
DECLARE l_eligibilitydescription_id   INTEGER;
DECLARE l_INST_AMOUNT_l_SEQUENCE_ID   integer;
DECLARE lv_amount                     INTEGER;
DECLARE v_aggregate_amount            INTEGER;
DECLARE v_lead_amount                 INTEGER;

 
   DECLARE EXIT HANDLER FOR SQLEXCEPTION
   /*BEGIN
      INSERT INTO frog (VALUE, ENTRYDATE)
        VALUES   (p_o_error, SYSDATE());
      COMMIT;
   END;
   IF LOCATE ('.', p_amount, 1) > 0
   THEN
      SET p_o_status = 1;
      SET p_o_error = CONCAT('Amount can not be decimal - ' , ifnull(p_amount, ''));
      LEAVE sp_lbl;
   ELSE */
      SET lv_amount = TO_NUMBER (TRIM (p_amount));
   /*END IF;*/

   SELECT   moduleid, id  INTO   v_moduleid, v_id FROM   sci_workflow WHERE   workflowid = p_workflowid;

   IF v_moduleid = 3
   THEN
      IF PAGE_MODE = 3                                  -- 0 = estimatefunding,
      THEN
         IF p_mode = 0
         THEN
            SELECT  COUNT(*)  INTO   v_count FROM   ESTIMATEDFUNDING WHERE   OPPORTUNITY_ID = v_id;
            IF v_count = 0
            THEN
               INSERT INTO ESTIMATEDFUNDING (CURRENCY,ESTIMATEDFUNDING_TEXT, OPPORTUNITY_ID,amount_description)
                 VALUES   (p_CURRENCY,lv_amount,v_id,p_amount_description);

               SELECT   item_SEQ.NEXTVAL INTO v_itemid FROM DUAL;
               SELECT   estimatedamountdesc_id_SEQ.NEXTVAL INTO   l_estimatedamountdesc_id FROM   DUAL;               
            ELSE
               UPDATE   ESTIMATEDFUNDING SET   CURRENCY = p_CURRENCY,ESTIMATEDFUNDING_TEXT = lv_amount,amount_description = p_amount_description
                WHERE   OPPORTUNITY_ID = v_id;
            END IF;
         ELSEIF p_mode = 1
         THEN
            UPDATE   ESTIMATEDFUNDING SET   CURRENCY = p_CURRENCY,ESTIMATEDFUNDING_TEXT = lv_amount,amount_description = p_amount_description
             WHERE   OPPORTUNITY_ID = v_id;
         ELSEIF p_mode = 2
         THEN
            DELETE FROM   ESTIMATEDFUNDING WHERE CURRENCY = p_CURRENCY  AND ESTIMATEDFUNDING_TEXT = lv_amount AND amount_description = p_amount_description
                          AND OPPORTUNITY_ID = v_ID;         
         END IF;
            SELECT   * FROM   ESTIMATEDFUNDING WHERE   OPPORTUNITY_ID = V_ID;
            SELECT   li.URL, li.LINK_TEXT FROM   estimatedAmountDescription ead, item it, link li
             WHERE   OPPORTUNITY_ID = V_ID AND EAD.ESTIMATEDAMOUNTDESCRIPTION_ID = IT.ESTIMATEDAMOUNTDESCRIPTION_ID
                     AND IT.ITEM_ID = LI.ITEM_ID;
      ELSEIF page_mode = 2                                  -- 1 = awardflooring
      THEN
         IF p_mode = 0
         THEN
            SELECT   COUNT(*) INTO   v_count FROM   awardfloor WHERE   OPPORTUNITY_ID = v_id;
            IF v_count = 0
            THEN
               INSERT INTO awardfloor (CURRENCY,ESTIMATEDFUNDING_TEXT,OPPORTUNITY_ID)
                 VALUES   (p_CURRENCY, lv_amount, v_id);
            ELSE
               UPDATE   awardfloor  SET   CURRENCY = p_CURRENCY, ESTIMATEDFUNDING_TEXT = lv_amount
                WHERE   OPPORTUNITY_ID = v_id;
            END IF;
         ELSEIF p_mode = 1
         THEN
            UPDATE   awardfloor
               SET   CURRENCY = p_CURRENCY, ESTIMATEDFUNDING_TEXT = lv_amount
             WHERE   OPPORTUNITY_ID = v_id;
         ELSEIF p_mode = 2
         THEN
            DELETE FROM   awardfloor WHERE CURRENCY = p_CURRENCY AND ESTIMATEDFUNDING_TEXT = lv_amount AND OPPORTUNITY_ID = v_ID;
         END IF;
            SELECT   *  FROM   awardfloor WHERE   OPPORTUNITY_ID = V_ID;
			SELECT   NULL URL, NULL LINK_TEXT FROM DUAL;
      ELSEIF page_mode = 1                                   -- 2 = awardceiling
      THEN
         IF p_mode = 0
         THEN
            SELECT   COUNT(*) INTO   v_count FROM   AWARDCEILING WHERE   OPPORTUNITY_ID = v_id;
            IF v_count = 0
            THEN
               INSERT INTO AWARDCEILING (CURRENCY, AWARDCEILING_TEXT,OPPORTUNITY_ID)
                 VALUES   (p_CURRENCY, lv_amount, v_id);
			ELSE
               UPDATE   AWARDCEILING
                  SET   CURRENCY = p_CURRENCY, AWARDCEILING_TEXT = lv_amount
                WHERE   OPPORTUNITY_ID = v_id;
            END IF;
         ELSEIF p_mode = 1
         THEN
            UPDATE   AWARDCEILING SET   CURRENCY = p_CURRENCY, AWARDCEILING_TEXT = lv_amount
             WHERE   OPPORTUNITY_ID = v_id;
         ELSEIF p_mode = 2
         THEN
            DELETE FROM  AWARDCEILING WHERE CURRENCY = p_CURRENCY  AND AWARDCEILING_TEXT = lv_amount AND OPPORTUNITY_ID = v_ID;
         END IF;
            SELECT   CURRENCY,AWARDCEILING_TEXT ESTIMATEDFUNDING_TEXT, OPPORTUNITY_ID FROM   AWARDCEILING WHERE   OPPORTUNITY_ID = V_ID;
             SELECT   NULL URL, NULL LINK_TEXT FROM DUAL;
      END IF;
      ELSEIF v_moduleid = 4 THEN
      IF page_mode = 4              -- - Modify amount only
      THEN
         IF p_mode = 0
         THEN
            SELECT   COUNT(*) INTO   v_count FROM amount WHERE   AWARD_ID = v_id;
            IF v_count = 0
            THEN
               INSERT INTO amount (CURRENCY, AMOUNT_TEXT, AWARD_ID) VALUES   (p_CURRENCY, lv_amount, v_id);
            ELSE
               UPDATE   amount SET   CURRENCY = p_CURRENCY, AMOUNT_TEXT = lv_amount WHERE   AWARD_ID = v_id;
            END IF;
         ELSEIF p_mode = 1
         THEN
            UPDATE amount SET   CURRENCY = p_CURRENCY, AMOUNT_TEXT = lv_amount WHERE   AWARD_ID = v_id;
         ELSEIF p_mode = 2
         THEN
            DELETE FROM amount WHERE CURRENCY = p_CURRENCY AND AMOUNT_TEXT = lv_amount AND AWARD_ID = v_ID;
	     END IF;
            SELECT   * FROM   amount WHERE   award_ID = V_ID;
      ELSEIF PAGE_MODE = 5
      THEN
         IF p_mode = 0          -- 0 = insert, 1 = update 2 = delete
         THEN
            SELECT COUNT(*) INTO v_count FROM   amount WHERE   AWARD_ID = v_id AND AWARDEE_ID IS NULL;
            IF v_count = 0
            THEN
               INSERT INTO amount (CURRENCY, AMOUNT_TEXT, AWARD_ID) VALUES   (p_CURRENCY, p_total_amount, v_id);
            ELSE
               UPDATE  amount SET   CURRENCY = p_CURRENCY, AMOUNT_TEXT = p_total_amount WHERE   AWARD_ID = v_id AND AWARDEE_ID IS NULL;
            END IF;
            SELECT   COUNT(*) INTO   l_count FROM   instalmentAndAmount WHERE   award_id = v_id;
            SELECT   INST_AMOUNT_l_SEQUENCE_ID.NEXTVAL INTO   l_INST_AMOUNT_l_SEQUENCE_ID FROM   DUAL;
            IF l_count = 0
            THEN
               SELECT   INST_AMOUNT_ID_SEQ.NEXTVAL
                 INTO   l_inst_Amount_Id_seq
                 FROM   DUAL;
               INSERT INTO instalmentAndAmount (INSTALLMENTANDAMOUNT_ID,award_id) VALUES   (l_inst_Amount_Id_seq, v_id);

               INSERT INTO installment (INSTALLMENTANDAMOUNT_ID,INSTALLMENTSTART_DATE, INSTALLMENTEND_DATE,AMOUNT,CURRENCY, SEQUENCE_ID)
                 VALUES   (l_inst_Amount_Id_seq,p_startdate,p_enddate,p_amount,p_currency,
                           l_INST_AMOUNT_l_SEQUENCE_ID);

               INSERT INTO totalAmount (INSTALLMENTANDAMOUNT_ID,AMOUNT, CURRENCY)
                 VALUES   (l_inst_Amount_Id_seq, p_total_amount, p_currency);
            ELSE
            SELECT   INSTALLMENTANDAMOUNT_ID INTO   l_installmentandamount_id FROM   instalmentAndAmount WHERE   award_id = v_id;

               INSERT INTO installment (INSTALLMENTANDAMOUNT_ID, INSTALLMENTSTART_DATE, INSTALLMENTEND_DATE, AMOUNT, CURRENCY,SEQUENCE_ID)
                 VALUES   (l_installmentandamount_id, p_startdate, p_enddate, p_amount, p_currency, l_INST_AMOUNT_l_SEQUENCE_ID);
                /*sci_Lead_Amount_Update(v_id,p_total_amount,p_currency,p_o_status, p_o_error); */
                 -- ------------------------------------------ End -----------------------------------------------
            END IF;
         ELSEIF p_mode = 1      -- Update Total Amount
         THEN
             -- ---- Below section added on 24 Jan 2019 by S.S.Shah to tackle auto reducing  LEAD amount ------
             SELECT SUM(Amount) INTO v_aggregate_amount FROM fundingbodyamount fba LEFT JOIN relatedfundingbodies rfb ON 
             FBA.RELEATEDFUNDINGBODIES_ID=RFB.RELEATEDFUNDINGBODIES_ID WHERE RFB.HIERARCHY<>'lead' AND  RFB.AWARD_ID = v_id;
             
             Select count(*) INTO v_lead_amount from FundingBodyAmount where RELEATEDFUNDINGBODIES_ID=(Select RELEATEDFUNDINGBODIES_ID from relatedfundingbodies where HIERARCHY='lead' and AWARD_ID=v_id);
             IF v_lead_amount > 0 THEN
               Select Amount INTO v_lead_amount from FundingBodyAmount where RELEATEDFUNDINGBODIES_ID= (Select RELEATEDFUNDINGBODIES_ID from relatedfundingbodies where HIERARCHY='lead' and AWARD_ID=v_id);
             END IF;
             
            SELECT   COUNT(*) INTO   v_count FROM   amount WHERE   AWARD_ID = v_id AND AWARDEE_ID IS NULL;
            IF v_count = 0
            THEN
               INSERT INTO amount (CURRENCY, AMOUNT_TEXT, AWARD_ID) VALUES (p_CURRENCY, p_total_amount, v_id);
            ELSE
               UPDATE   amount SET   CURRENCY = p_CURRENCY, AMOUNT_TEXT = p_total_amount WHERE   AWARD_ID = v_id AND AWARDEE_ID IS NULL;
            END IF;
            SELECT   COUNT(*) INTO l_count FROM   instalmentAndAmount  WHERE   award_id = v_id;

			SELECT   INST_AMOUNT_l_SEQUENCE_ID.NEXTVAL INTO   l_INST_AMOUNT_l_SEQUENCE_ID FROM   DUAL;

            IF l_count = 0
            THEN 
            SELECT   INST_AMOUNT_ID_SEQ.NEXTVAL INTO   l_inst_Amount_Id_seq FROM   DUAL;
            
            INSERT INTO instalmentAndAmount ( INSTALLMENTANDAMOUNT_ID, award_id ) VALUES (l_inst_Amount_Id_seq, v_id);
			if(p_SEQUENCE_ID=0)
             then
               INSERT INTO installment (INSTALLMENTANDAMOUNT_ID,INSTALLMENTSTART_DATE,INSTALLMENTEND_DATE,AMOUNT,CURRENCY,SEQUENCE_ID)
                 VALUES   (l_inst_Amount_Id_seq, p_startdate,p_enddate, p_amount, p_currency, l_INST_AMOUNT_l_SEQUENCE_ID);
			end if;
               INSERT INTO totalAmount (INSTALLMENTANDAMOUNT_ID,AMOUNT, CURRENCY )VALUES (l_inst_Amount_Id_seq, p_total_amount, p_currency);
            ELSE
               SELECT   INSTALLMENTANDAMOUNT_ID INTO   l_installmentandamount_id FROM   instalmentAndAmount WHERE   award_id = v_id;

               if(p_SEQUENCE_ID=0) then
                 INSERT INTO installment (INSTALLMENTANDAMOUNT_ID, INSTALLMENTSTART_DATE, INSTALLMENTEND_DATE, AMOUNT, CURRENCY, SEQUENCE_ID)
                 VALUES   (l_installmentandamount_id, p_startdate, p_enddate, p_amount, p_currency, l_INST_AMOUNT_l_SEQUENCE_ID);
               else
                 UPDATE   installment  SET   INSTALLMENTSTART_DATE = p_startdate,  INSTALLMENTEND_DATE = p_enddate, AMOUNT = p_amount, CURRENCY = p_currency
                 WHERE   INSTALLMENTANDAMOUNT_ID = l_INSTALLMENTANDAMOUNT_ID  AND SEQUENCE_ID = p_SEQUENCE_ID;
               end if;

               UPDATE   totalAmount SET   AMOUNT = p_total_amount, CURRENCY = p_currency  WHERE   INSTALLMENTANDAMOUNT_ID = l_INSTALLMENTANDAMOUNT_ID;

               UPDATE   amount SET   CURRENCY = p_CURRENCY, AMOUNT_TEXT = p_total_amount WHERE   AWARD_ID = v_id AND AWARDEE_ID IS NULL;
       -- ----------------------------------------------------------------------------------------------
               --           Below section added by S.S.Shah on 15 Jan 2019 to update FundingBodyAmount
               --                         when total amount is updated for an award
               --   Updated on 24 Jan 2019 to incorporate auto reducing LEAD amount functionality.
               -- ------------------------------------------ Start ---------------------------------------------
              /* sci_Lead_Amount_Update(v_id,(p_total_amount-v_aggregate_amount),p_currency,p_o_status, p_o_error); */
               -- ------------------------------------------- End ----------------------------------------------
            END IF;
            ELSEIF p_mode = 3 and p_SEQUENCE_ID>0
         THEN
           delete from installment where SEQUENCE_ID=p_SEQUENCE_ID;
		END IF;
      END IF;
         SELECT   SEQUENCE_ID, i.INSTALLMENTANDAMOUNT_ID, INSTALLMENTSTART_DATE, INSTALLMENTEND_DATE, AMOUNT, CURRENCY
           FROM   installment i, INSTALMENTANDAMOUNT im  WHERE   i.INSTALLMENTANDAMOUNT_ID = im.INSTALLMENTANDAMOUNT_ID AND award_id = v_id;
   END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_op_estfundinglist` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_op_estfundinglist`(
	p_workflowid       INTEGER,
	page_mode          INTEGER   -- 1 = awardceiling, 2 = awardflooring, 3 = estimatefunding, 4 = amount
)
BEGIN
   DECLARE v_id         INTEGER;
   DECLARE v_moduleid   INTEGER;
   DECLARE v_INSTALLMENTANDAMOUNT_ID   INTEGER;
 
   SELECT   ID, moduleid
     INTO   v_id, v_moduleid
     FROM   sci_workflow
    WHERE   workflowid = p_workflowid;

   IF v_moduleid = 3
   THEN
        SELECT   code, CONCAT(IFNULL(VALUE, '') , ' (' , ifnull(code, '') , ')') AS VALUE
           FROM   sci_currencytype;

      IF page_mode = 3
      THEN
           SELECT   *
              FROM   estimatedfunding
             WHERE   opportunity_id = v_id;
             
            SELECT   li.URL,li.LINK_TEXT
              FROM   estimatedAmountDescription ead, item it, link li 
             WHERE   OPPORTUNITY_ID = V_ID
             and EAD.ESTIMATEDAMOUNTDESCRIPTION_ID=IT.ESTIMATEDAMOUNTDESCRIPTION_ID
             and IT.ITEM_ID=LI.ITEM_ID;

      ELSEIF page_mode = 2
      THEN
           SELECT   *
              FROM   awardfloor
             WHERE   opportunity_id = v_id;
             
            SELECT   null URL,null LINK_TEXT
              FROM   dual;
      ELSEIF page_mode = 1
      THEN
            SELECT   currency,
                     awardceiling_text estimatedfunding_text,
                     opportunity_id
              FROM   awardceiling
             WHERE   opportunity_id = v_id;
             
           SELECT   null URL,null LINK_TEXT
              FROM   dual;
      END IF;
   ELSEIF v_moduleid = 4
   THEN
        SELECT   code, CONCAT(IFNULL(VALUE, '') , ' (' , ifnull(code, '') , ')') AS VALUE
           FROM   sci_currencytype;
           
            SELECT   null URL,null LINK_TEXT
              FROM   dual;

      IF page_mode = 4
      THEN
         -- OPEN p_result1 FOR
         
         Select INSTALLMENTANDAMOUNT_ID into 
           v_INSTALLMENTANDAMOUNT_ID from  totalAmount
            where INSTALLMENTANDAMOUNT_ID in 
             (Select INSTALLMENTANDAMOUNT_ID from INSTALMENTANDAMOUNT where award_id=v_id);
         
         IF v_INSTALLMENTANDAMOUNT_ID IS NOT NULL THEN
            SELECT   ta.CURRENCY,
                      ta.AMOUNT AS AMOUNT_TEXT,
                    -- null INSTALLMENTSTART_DATE,
                     -- null INSTALLMENTEND_DATE,
                     ta.AMOUNT AS total_amount
              FROM   -- amount am,
                     -- installment inst,
                     totalAmount ta,
                     instalmentAndAmount iaa
             WHERE   
             iaa.award_id = v_id 
            -- AND am.award_id = iaa.award_id
                     -- AND INST.INSTALLMENTANDAMOUNT_ID = TA.INSTALLMENTANDAMOUNT_ID
                     -- AND IAA.INSTALLMENTANDAMOUNT_ID =  INST.INSTALLMENTANDAMOUNT_ID 
                     AND IAA.INSTALLMENTANDAMOUNT_ID = ta.INSTALLMENTANDAMOUNT_ID;
                    -- and AWARDEE_ID is null
          ELSE          
                    SELECT   am.CURRENCY,
                    0 AMOUNT_TEXT,
                    -- null INSTALLMENTSTART_DATE,
                    -- null INSTALLMENTEND_DATE,
                     am.AMOUNT_TEXT AS total_amount
              FROM   amount am     
             WHERE   am.award_id = v_id;         
          END IF;                 

               SELECT   SEQUENCE_ID,
                  i.INSTALLMENTANDAMOUNT_ID,
            --   TO_CHAR (INSTALLMENTSTART_DATE, 'rrrr') INSTALLMENTSTART_DATE,
              -- TO_CHAR (INSTALLMENTEND_DATE, 'rrrr') INSTALLMENTEND_DATE,
                  INSTALLMENTSTART_DATE,
                  INSTALLMENTEND_DATE,
                  AMOUNT,
                  CURRENCY
           FROM   installment i, INSTALMENTANDAMOUNT im
          WHERE   i.INSTALLMENTANDAMOUNT_ID = im.INSTALLMENTANDAMOUNT_ID
                  AND award_id = v_id;
      END IF;
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_op_opexist` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_op_opexist`(
	P_FUNDINGBODYID       INTEGER,
	p_taskid              INTEGER,
	p_updateflag          INTEGER,
	p_userid              INTEGER
)
BEGIN
	DECLARE v_cycle 			INTEGER;
    DECLARE L_OPPORTUNITYID   	INTEGER;

	SELECT count(OPPORTUNITYID) INTO L_OPPORTUNITYID FROM USERASSIGNMENT WHERE USERID = p_userid AND MODULEID = 3 AND ROWNUM = 1;
    
    IF p_updateflag = 0
    THEN
		IF L_OPPORTUNITYID = 0
        THEN
			SELECT WORKFLOWID, OPPORTUNITY_ID, FUNDINGBODYOPPORTUNITYID, OM.opportunityname name, op.id
            FROM OPPORTUNITY op, Opportunity_Master om, sci_workflow sw
            WHERE FUNDINGBODY_ID = P_FUNDINGBODYID AND op.OPPORTUNITY_ID = sw.id AND OM.OPPORTUNITYID= op.OPPORTUNITY_ID AND MODULEID = 3
            AND taskid = p_taskid AND sw.cycle = 0 AND Upper(trim(OPPORTUNITYSTATUS))=Upper(trim('Active')) AND IFNULL(STATUSID, 0) NOT IN (8, 7, 45)
            AND OM.STATUSCODE NOT IN (45) AND NOT EXISTS
				(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
            UNION ALL
            SELECT WORKFLOWID, OPPORTUNITYID, NULL FUNDINGBODYOPPORTUNITYID, OPPORTUNITYNAME name, null id
            FROM OPPORTUNITY_master om, sci_workflow sw,OPPORTUNITY o 
            WHERE OM.OPPORTUNITYID = sw.id AND OM.OPPORTUNITYID=o.OPPORTUNITY_ID AND OM.CYCLE = sw.cycle AND sw.taskid = p_taskid 
            AND sw.MODULEID = 3 AND FUNDINGBODYID = P_FUNDINGBODYID AND isautomated = 1 AND om.cycle = 0 AND Upper(trim(o.OPPORTUNITYSTATUS))=Upper(trim('Active'))
            AND statuscode = 1 AND IFNULL(STATUSID, 0) NOT IN (7, 8, 45) AND COMPLETEDDATE IS NULL AND NOT EXISTS
				(SELECT 1 FROM OPPORTUNITY WHERE OPPORTUNITY_ID = om.OPPORTUNITYID)
			AND NOT EXISTS
				(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
            ORDER BY   name;
        ELSE
			SELECT WORKFLOWID, OPPORTUNITY_ID, FUNDINGBODYOPPORTUNITYID, OM.opportunityname name, op.id
            FROM OPPORTUNITY op, Opportunity_Master om, sci_workflow sw 
            WHERE FUNDINGBODY_ID = P_FUNDINGBODYID AND op.OPPORTUNITY_ID = sw.id AND OM.OPPORTUNITYID= op.OPPORTUNITY_ID AND MODULEID = 3
            AND taskid = p_taskid AND sw.cycle = 0 AND Upper(trim(OPPORTUNITYSTATUS))=Upper(trim('Active')) AND op.OPPORTUNITY_ID IN 
				(SELECT OPPORTUNITYID FROM USERASSIGNMENT WHERE USERID = p_userid AND MODULEID = 3)
			AND IFNULL(STATUSID, 0) NOT IN (8, 7, 45) AND OM.STATUSCODE NOT IN (45) AND NOT EXISTS
				(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
            UNION ALL
            SELECT WORKFLOWID, OPPORTUNITYID, NULL FUNDINGBODYOPPORTUNITYID, OPPORTUNITYNAME name, null id 
            FROM OPPORTUNITY_master om, sci_workflow sw, OPPORTUNITY o 
            WHERE OM.OPPORTUNITYID = sw.id AND OM.OPPORTUNITYID = o.OPPORTUNITY_ID AND OM.CYCLE = sw.cycle AND sw.taskid = p_taskid AND sw.MODULEID = 3 
            AND FUNDINGBODYID = P_FUNDINGBODYID AND isautomated = 1 AND om.cycle = 0 AND statuscode = 1 AND Upper(trim(o.OPPORTUNITYSTATUS))=Upper(trim('Active'))
            AND OM.OPPORTUNITYID IN 
				(SELECT OPPORTUNITYID FROM USERASSIGNMENT WHERE USERID = p_userid AND MODULEID = 3)
			AND IFNULL(STATUSID, 0) NOT IN (7, 8, 45) AND COMPLETEDDATE IS NULL AND NOT EXISTS
				(SELECT 1 FROM OPPORTUNITY WHERE OPPORTUNITY_ID = om.OPPORTUNITYID)
			AND NOT EXISTS 
				(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
			ORDER BY name;
        END IF;
	END IF;
    
    IF p_updateflag = 1
    THEN
		IF L_OPPORTUNITYID = 0
        THEN
			SELECT WORKFLOWID, OPPORTUNITY_ID, FUNDINGBODYOPPORTUNITYID, OM.opportunityname name, op.id
            FROM OPPORTUNITY op, OPPORTUNITY_MASTER OM, sci_workflow sw 
            WHERE FUNDINGBODY_ID = P_FUNDINGBODYID AND op.OPPORTUNITY_ID = sw.id AND OM.OPPORTUNITYID = OP.OPPORTUNITY_ID AND MODULEID = 3 AND taskid = p_taskid AND sw.cycle > 0
            AND IFNULL(STATUSID, 0) NOT IN (8, 7, 45) AND OM.STATUSCODE NOT IN (45) AND NOT EXISTS
				(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
			ORDER BY name;
        ELSE
			SELECT WORKFLOWID, OPPORTUNITY_ID, FUNDINGBODYOPPORTUNITYID, OM.opportunityname name, op.id
            FROM OPPORTUNITY op, OPPORTUNITY_MASTER OM, sci_workflow sw
            WHERE FUNDINGBODY_ID = P_FUNDINGBODYID AND op.OPPORTUNITY_ID = sw.id AND OM.OPPORTUNITYID= OP.OPPORTUNITY_ID AND MODULEID = 3 AND taskid = p_taskid  AND op.OPPORTUNITY_ID IN
				(SELECT OPPORTUNITYID FROM USERASSIGNMENT WHERE USERID = p_userid AND MODULEID = 3)
			AND sw.cycle > 0 AND IFNULL(STATUSID, 0) NOT IN (8, 7, 45) AND OM.STATUSCODE NOT IN (45) AND NOT EXISTS
				(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
			ORDER BY name;
        END IF;
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_OP_OPNEW` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_OP_OPNEW`(P_FUNDINGBODYID INTEGER, P_USERID INTEGER,out x_WORKFLOWID     INTEGER)
BEGIN
   DECLARE V_NULLCOUNT       INTEGER;
   DECLARE V_OPPORTUNITYID   INTEGER;
   DECLARE V_WORKFLOWID      INTEGER;
  -- x_WORKFLOWID      INTEGER;
   DECLARE V_TEMPLATEID      INTEGER;
   
   DECLARE V_SEQSTEP  INTEGER;
   
   SELECT   COUNT( * )
     INTO   V_NULLCOUNT
     FROM   OPPORTUNITY_MASTER OM, SCI_WORKFLOW SW
    WHERE       FUNDINGBODYID = P_FUNDINGBODYID
            AND OM.OPPORTUNITYID = SW.ID
            AND OPPORTUNITYNAME IS NULL
            AND SW.TASKID = 1
            AND STATUSID IS NULL;

   IF V_NULLCOUNT > 0
   THEN
      SELECT   OPPORTUNITYID, WORKFLOWID
        INTO   V_OPPORTUNITYID, x_WORKFLOWID
        FROM   OPPORTUNITY_MASTER OM, SCI_WORKFLOW SW
       WHERE       FUNDINGBODYID = P_FUNDINGBODYID
               AND OM.OPPORTUNITYID = SW.ID
               AND OPPORTUNITYNAME IS NULL
               AND STATUSID IS NULL
               AND SW.TASKID = 1
      LIMIT 1;

      UPDATE   SCI_WORKFLOW
         SET   STARTDATE = SYSDATE(), STARTBY = P_USERID, STATUSID = 7
       WHERE   WORKFLOWID = x_WORKFLOWID AND STATUSID IS NULL;
   ELSEIF V_NULLCOUNT = 0
   THEN
      
      SELECT   OPPORTUNITYID_SEQ.NEXTVAL INTO V_OPPORTUNITYID FROM DUAL;

      SELECT   TEMPLATEID
        INTO   V_TEMPLATEID
        FROM   SCI_DEFAULTTEMPLATE
       WHERE   ACTIVE = 1 AND MODULEID = 3;

      INSERT INTO OPPORTUNITY_MASTER (OPPORTUNITYID,
                                      FUNDINGBODYID,
                                      CREATEDBY,
                                      CYCLE,
                                      STATUSCODE)
        VALUES   (V_OPPORTUNITYID,
                  P_FUNDINGBODYID,
                  P_USERID,
                  0,
                  1);

/*
      DECLARE I CURSOR FOR SELECT   *
                  FROM   SCI_WORKFLOWTEMPLATE
                 WHERE   TEMPLATEID = (SELECT   TEMPLATEID
                                         FROM   SCI_DEFAULTTEMPLATE
                                        WHERE   ACTIVE = 1 AND MODULEID = 3);
      OPEN I;
      FETCH I INTO;
      WHILE NOT_FOUND=0
      DO
         SELECT   WORKFLOW_SEQ.NEXTVAL INTO V_WORKFLOWID FROM DUAL;

         IF I.TASKID = 1
         THEN
         
          SET x_WORKFLOWID= V_WORKFLOWID;
            INSERT INTO SCI_WORKFLOW (WORKFLOWID,
                                      MODULEID,
                                      ID,
                                      CYCLE,
                                      TEMPLATEID,
                                      TASKID,
                                      SEQUENCE,
                                      STARTDATE,
                                      STARTBY,
                                      STATUSID)
              VALUES   (V_WORKFLOWID,
                        3,
                        V_OPPORTUNITYID,
                        0,
                        V_TEMPLATEID,
                        I.TASKID,
                        I.SEQUENCE,
                        SYSDATE(),
                        P_USERID,
                        7);
                        ELSE
                         INSERT INTO SCI_WORKFLOW (WORKFLOWID,
                                      MODULEID,
                                      ID,
                                      CYCLE,
                                      TEMPLATEID,
                                      TASKID,
                                      SEQUENCE
                                      -- STARTDATE,
                                      -- STARTBY,
                                     -- STATUSID
                                      )
              VALUES   (V_WORKFLOWID,
                        3,
                        V_OPPORTUNITYID,
                        0,
                        V_TEMPLATEID,
                        I.TASKID,
                        I.SEQUENCE
                        -- SYSDATE,
                       -- P_USERID,
                       -- 7
                        );

         END IF;
      FETCH  INTO;
      END WHILE;
      CLOSE ;
      */
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_OP_OPPORTUNITYINS` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_OP_OPPORTUNITYINS`(
P_WORKFLOWID                         INTEGER,
   P_FUNDINGBODYOPPORTUNITYID           VARCHAR(4000),
   P_LIMITEDSUBMISSION                  VARCHAR(4000),
   P_TRUSTING                           VARCHAR(4000),
   P_COLLECTIONCODE                     VARCHAR(4000),
   P_HIDDEN                             VARCHAR(4000),
   P_NAME                               VARCHAR(4000),
   P_DUEDATEDESCRIPTION                 LONGTEXT,
   P_ELIGIBILITYDESCRIPTION             LONGTEXT,
   P_ELIGIBILITYCATEGORY                VARCHAR(4000),
   P_LINKTOFULLTEXT                     VARCHAR(4000),
   P_OPPORTUNITYSTATUS                  VARCHAR(4000),
   P_NUMBEROFAWARDS                     INTEGER,
   P_DURATION                           VARCHAR(4000),
   P_LIMITEDSUBMISSIONDESCRIPTION       VARCHAR(4000),
   P_RAWTEXT                            LONGTEXT, 
   p_id                                 VARCHAR(4000),
   p_url                                VARCHAR(4000),
   p_mode                               INTEGER, -- 0 for insert ,1 for update
   p_recordsource VARCHAR(4000)                       /* Use -meta option opportunity.recordsource%TYPE */ , -- -- Added by Julfcar on dt- 20130218
   p_loi_mandatory VARCHAR(4000)                       /* Use -meta option opportunity.LOI_MANDATORY %TYPE */ , 
    p_preProposalMandatory              VARCHAR(4000),-- -- Added by avinash on dt- 220180619
   p_repeatingOpportunity               VARCHAR(4000),
   p_langRSource                        VARCHAR(4000)
)
BEGIN
   DECLARE V_MODULEID               INTEGER;
   DECLARE Pv_RAWTEXT               VARCHAR (100);
   DECLARE v_subtype                INTEGER;
   DECLARE V_ID                     INTEGER;
   DECLARE V_CYCLE                  INTEGER;
   DECLARE V_FUNDINGBODYID          INTEGER;
   DECLARE v_value                  VARCHAR (2000);
   DECLARE v_REVISIONHISTORYID      INTEGER;
   DECLARE V_TRUSTING               VARCHAR (200);
   DECLARE v_preferedorgname        LONGTEXT;
   DECLARE v_type                   VARCHAR (2000);
   DECLARE v_RELATEDORGS_ID         INTEGER;
   DECLARE v_cnt                    INTEGER;  
   DECLARE l_opportunity_name_chk   INTEGER;
   DECLARE l_count  INTEGER;
   DECLARE l_o_id   INTEGER;
   
   SET Pv_RAWTEXT = SUBSTR (P_RAWTEXT, 1, 50);

   SELECT   MODULEID, ID, CYCLE
     INTO   V_MODULEID, V_ID, V_CYCLE
     FROM   SCI_WORKFLOW
    WHERE   WORKFLOWID = P_WORKFLOWID;

   IF V_MODULEID = 3
   THEN
      SELECT   FUNDINGBODYID
        INTO   V_FUNDINGBODYID
        FROM   OPPORTUNITY_MASTER
       WHERE   OPPORTUNITYID = V_ID;

      SELECT   TRUSTING, PREFERREDORGNAME, TYPE
        INTO   V_TRUSTING, v_preferedorgname, v_type
        FROM   FUNDINGBODY
       WHERE   FUNDINGBODY_ID = V_FUNDINGBODYID;

      SELECT   COUNT (1)
        INTO   v_subtype
        FROM   SUBTYPE
       WHERE   SUBTYPE_TEXT IN ('federal', 'Federal/National Government')
               AND FUNDINGBODY_ID = V_FUNDINGBODYID;
   END IF;

   IF p_mode = 0
   THEN
      SELECT   COUNT( * )
        INTO   l_opportunity_name_chk
        FROM   sci_language_detail sl_dtl
       WHERE   EXISTS
                  (SELECT   1
                     FROM   opportunity
                    WHERE   fundingbody_id = v_fundingbodyid
                            AND opportunity_id = sl_dtl.scival_id)
               AND sl_dtl.moduleid = 3
               AND column_id = 5
               and dbms_lob.instr(column_desc, to_clob(p_name))>=1;
      IF l_opportunity_name_chk > 0
      THEN
         ROLLBACK;
      END IF;

      INSERT INTO OPPORTUNITY (FUNDINGBODY_ID,
                               FUNDINGBODYOPPORTUNITYID,
                               LIMITEDSUBMISSION,
                               TRUSTING,
                               COLLECTIONCODE,
                               HIDDEN,
                             DUEDATEDESCRIPTION,
                               ELIGIBILITYDESCRIPTION,
                               ELIGIBILITYCATEGORY,
                               LINKTOFULLTEXT,
                              OPPORTUNITYSTATUS,
                               NUMBEROFAWARDS,
                               DURATION,
                               LIMITEDSUBMISSIONDESCRIPTION,
                               OPPORTUNITY_ID,                           -- ,ID
                               RECORDSOURCE,
                               loi_mandatory,
                               REPEATINGOPPORTUNITY,
                               PREPROPOSALMANDATORY,
                               Lang
                               )
        VALUES   (V_FUNDINGBODYID,
                  P_FUNDINGBODYOPPORTUNITYID,
                  P_LIMITEDSUBMISSION,
                  V_TRUSTING,
                  P_COLLECTIONCODE,
                  P_HIDDEN,
                  P_DUEDATEDESCRIPTION,
                  P_ELIGIBILITYDESCRIPTION,
                  P_ELIGIBILITYCATEGORY,
                  P_LINKTOFULLTEXT,
                  P_OPPORTUNITYSTATUS,
                  P_NUMBEROFAWARDS,
                  P_DURATION,
                  P_LIMITEDSUBMISSIONDESCRIPTION,
                  V_ID,
                  P_RECORDSOURCE,
                  p_loi_mandatory,
                  p_repeatingOpportunity,
                  p_preProposalMandatory,
                  p_langRSource
                                  );

      -- -------------------------------------------------------------------------------------------------------------------------
      IF p_id IS NOT NULL
      THEN
         SELECT   TYPE
           INTO   v_value
           FROM   SCI_FUNDINGTYPEIDSTYPE
          WHERE   VALUE = p_id;

         INSERT INTO TYPE (ID, TYPE_TEXT, OPPORTUNITY_ID)
           VALUES   (p_id, v_value, V_ID);
      END IF;

      UPDATE   OPPORTUNITY_master
         SET   OPPORTUNITYNAME = P_NAME, URL = p_url, CREATEDDATE = SYSDATE()
       WHERE   OPPORTUNITYID = V_ID;

      SELECT   REVISIONHISTORYID_SEQ.NEXTVAL INTO v_REVISIONHISTORYID FROM DUAL;

      INSERT INTO REVISIONHISTORY (
                                      STATUS,
                                      REVISIONHISTORY_ID,
                                      OPPORTUNITY_ID
                 )
        VALUES   ('new', v_REVISIONHISTORYID, V_ID);

      INSERT INTO CREATEDDATE (VERSION, CREATEDDATE_TEXT, REVISIONHISTORY_ID)
        VALUES   (0, SYSDATE(), v_REVISIONHISTORYID);
     
   ELSEIF p_mode = 1
   THEN
      -- v.0.2 modification start
      SELECT   COUNT( * )
        INTO   l_opportunity_name_chk
        FROM   sci_language_detail sl_dtl
       WHERE   EXISTS
                  (SELECT   1
                     FROM   opportunity
                    WHERE   fundingbody_id = v_fundingbodyid
                            AND opportunity_id = sl_dtl.scival_id)
               AND sl_dtl.moduleid = 3
               AND column_id = 5
               AND sl_dtl.scival_id <> v_id
             AND TO_CHAR (column_desc) = p_name;

      IF l_opportunity_name_chk > 0
      THEN
         ROLLBACK;
      END IF;

      UPDATE   OPPORTUNITY
         SET   FUNDINGBODYOPPORTUNITYID = P_FUNDINGBODYOPPORTUNITYID,
               LIMITEDSUBMISSION = P_LIMITEDSUBMISSION,
               COLLECTIONCODE = P_COLLECTIONCODE,
               HIDDEN = P_HIDDEN,
                 DUEDATEDESCRIPTION = P_DUEDATEDESCRIPTION,
               ELIGIBILITYDESCRIPTION = P_ELIGIBILITYDESCRIPTION,
               ELIGIBILITYCATEGORY = P_ELIGIBILITYCATEGORY,
               LINKTOFULLTEXT = P_LINKTOFULLTEXT,
                 OPPORTUNITYSTATUS = P_OPPORTUNITYSTATUS,
               NUMBEROFAWARDS = P_NUMBEROFAWARDS,
               DURATION = P_DURATION,
               LIMITEDSUBMISSIONDESCRIPTION = P_LIMITEDSUBMISSIONDESCRIPTION,
               RECORDSOURCE = P_RECORDSOURCE,
               loi_mandatory=p_loi_mandatory,
               REPEATINGOPPORTUNITY= p_repeatingOpportunity,
                PREPROPOSALMANDATORY=  p_preProposalMandatory,
                Lang=p_langRSource
       WHERE   OPPORTUNITY_ID = V_ID;

      -- -------------------------------------------------------------------------------------------------------------------------
      UPDATE   OPPORTUNITY_master
         SET   OPPORTUNITYNAME = P_NAME
       WHERE   OPPORTUNITYID = V_ID;


      IF p_id IS NOT NULL
      THEN
         SELECT   TYPE
           INTO   v_value
           FROM   SCI_FUNDINGTYPEIDSTYPE
          WHERE   VALUE = p_id;

         SELECT   COUNT (1)
           INTO   v_cnt
           FROM   TYPE
          WHERE   OPPORTUNITY_ID = V_ID;

         IF v_cnt = 0
         THEN
            INSERT INTO TYPE
              VALUES   (p_id, v_value, v_id);
         ELSE
            UPDATE   TYPE
               SET   ID = p_id, TYPE_TEXT = v_value
             WHERE   OPPORTUNITY_ID = V_ID;
         END IF;
      END IF;
      
   END IF;

      SELECT   fundingbody_id,
               fundingbodyopportunityid,
               limitedsubmission,
               trusting,
               collectioncode,
               hidden,
               eligibilitycategory,
               linktofulltext,
               firstpostdate,
               lastmodifiedpostdate,
               opportunitystatus,
               numberofawards,
               duration,
               limitedsubmissiondescription,
               opportunity_id,
               eligibilitydescription,
               duedatedescription,
               id,
               recordsource,
               expirationdate,
               loi_mandatory,
               REPEATINGOPPORTUNITY,
               PREPROPOSALMANDATORY,
               (CASE
                   WHEN lang IS NULL THEN 'en'
                   ELSE lang
                END) Lang
        FROM   OPPORTUNITY
       WHERE   OPPORTUNITY_ID = V_ID;

      SELECT   *
        FROM   TYPE
       WHERE   OPPORTUNITY_ID = V_ID;

      SELECT   opportunity_id,
               date_format(loi_due_date,'%m-%d-%Y') loi_DATE,
               sequence_id
           FROM   sci_opp_loi_duedate_detail
       WHERE   OPPORTUNITY_ID = V_ID
        AND DATE_TYPE=1;
        
      SELECT   opportunity_id,
                (CASE WHEN loi_due_date IS NULL THEN DATE_REMARKS ELSE to_clob(DATE_FORMAT(loi_due_date,'%m-%d-%Y')) END) DUE_DATE,
               sequence_id
           FROM   sci_opp_loi_duedate_detail
       WHERE   OPPORTUNITY_ID = V_ID
        AND DATE_TYPE=2;

         SELECT   *
           FROM   OPPORTUNITY
          WHERE   OPPORTUNITY_ID = V_ID;

         SELECT   *
           FROM   TYPE
          WHERE   OPPORTUNITY_ID = V_ID;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_op_opportunity_dateins_50` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_op_opportunity_dateins_50`(
   P_WORKFLOWID                     INTEGER,
   P_date                           DATETIME /* DEFAULT NULL */ ,
   P_date_type                      INTEGER /* DEFAULT NULL */ ,
   P_date_sequence                  INTEGER /* DEFAULT NULL */ ,
   p_date_remarks                   LONGTEXT /* DEFAULT NULL */ ,
   p_date_Lang                   VARCHAR(4000) /* DEFAULT NULL */ ,
    p_URL                       VARCHAR(4000) /* DEFAULT NULL */ 
)
BEGIN
	DECLARE V_MODULEID               INTEGER;
	DECLARE Pv_RAWTEXT               VARCHAR (100);
	DECLARE v_subtype                INTEGER;
	DECLARE V_ID                     INTEGER;
	DECLARE V_CYCLE                  INTEGER;
	DECLARE V_FUNDINGBODYID          INTEGER;
	DECLARE v_value                  VARCHAR (2000);
	DECLARE v_REVISIONHISTORYID      INTEGER;
	DECLARE V_TRUSTING               VARCHAR (200);
	DECLARE v_preferedorgname        LONGTEXT;
	DECLARE v_type                   VARCHAR (2000);
	DECLARE v_RELATEDORGS_ID         INTEGER;
	DECLARE v_cnt                    INTEGER;	
	DECLARE l_opportunity_name_chk   INTEGER;
	DECLARE l_count                  INTEGER;
	DECLARE l_o_id                   INTEGER;

	SELECT   MODULEID, ID, CYCLE INTO   V_MODULEID, V_ID, V_CYCLE FROM   SCI_WORKFLOW
	WHERE   WORKFLOWID = P_WORKFLOWID;    

	IF V_MODULEID = 3
	THEN		
		SELECT   FUNDINGBODYID INTO   V_FUNDINGBODYID FROM   OPPORTUNITY_MASTER WHERE   OPPORTUNITYID = V_ID;

		SELECT   TRUSTING, PREFERREDORGNAME, TYPE INTO   V_TRUSTING, v_preferedorgname, v_type
		FROM   FUNDINGBODY WHERE   FUNDINGBODY_ID = V_FUNDINGBODYID;
		
		SELECT   COUNT (1) INTO   v_subtype FROM   SUBTYPE 
        WHERE   SUBTYPE_TEXT IN ('federal', 'Federal/National Government') AND FUNDINGBODY_ID = V_FUNDINGBODYID;
	END IF;

	SELECT COUNT(*) INTO V_CNT FROM sci_opp_loi_duedate_detail WHERE OPPORTUNITY_ID=v_id 
    AND DATE_TYPE=P_date_type AND SEQUENCE_ID=P_date_sequence AND LANG=p_date_Lang;
	IF v_cnt > 0 
    THEN
		UPDATE sci_opp_loi_duedate_detail SET DATE_REMARKS=p_date_remarks, LOI_DUE_DATE= p_date_Lang,URL=p_URL
		WHERE OPPORTUNITY_ID=v_id AND DATE_TYPE=P_date_type AND SEQUENCE_ID=P_date_sequence AND LANG=p_date_Lang;
           
		IF P_date_type = 2
		THEN
			UPDATE   OPPORTUNITY SET   DATE_FLAG = 1 WHERE   OPPORTUNITY_ID = v_id;
		END IF;      	
	END IF;  

	SELECT   IFNULL (MAX (O_ID), 0) + 1 INTO   l_o_id
	FROM   sci_opp_loi_duedate_detail;		
   
	INSERT INTO sci_opp_loi_duedate_detail (o_id,
                                           opportunity_id,
                                           loi_due_date,
                                           date_type,
                                           sequence_id,
                                           date_remarks,
                                           lang,
                                           URL)
	VALUES   (l_o_id,
               v_id,
               P_date,
               P_date_type,
               P_date_sequence,
               p_date_remarks,
               p_date_Lang,
               p_URL);

	IF P_date_type = 2
	THEN
		UPDATE   OPPORTUNITY  SET   DATE_FLAG = 1 WHERE   OPPORTUNITY_ID = v_id;
	END IF;	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_OP_OPPORTUNITY_date_del` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_OP_OPPORTUNITY_date_del`(
   P_WORKFLOWID       INTEGER
)
sp_lbl:

BEGIN
	DECLARE l_count      INTEGER;
	DECLARE V_ID         INTEGER;
	DECLARE V_MODULEID   INTEGER;
	DECLARE V_CYCLE      INTEGER;
    
	SELECT   MODULEID, ID, CYCLE INTO   V_MODULEID, V_ID, V_CYCLE FROM   SCI_WORKFLOW WHERE   WORKFLOWID = P_WORKFLOWID;     

	SELECT   COUNT(*) INTO   l_count FROM   sci_opp_loi_duedate_detail	WHERE   OPPORTUNITY_ID = V_ID;

	IF l_count > 0
	THEN
		DELETE FROM   sci_opp_loi_duedate_detail WHERE   OPPORTUNITY_ID = V_ID;				
	END IF;      
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_op_QCcheck_final_S50_Final` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_op_QCcheck_final_S50_Final`(
   p_tran_type_id                       INTEGER,
   p_workflowid                         INTEGER
)
BEGIN
   DECLARE v_id           INTEGER;
   DECLARE v_moduleid     INTEGER;
   DECLARE l_count        INTEGER;
   DECLARE v_count2       INTEGER;
   DECLARE v_statuscode   INTEGER;
   DECLARE v_desc         LONGTEXT;
   DECLARE v_lsub         VARCHAR (100);
   DECLARE v_ldecid       INTEGER;
   DECLARE v_count3       INTEGER;
   DECLARE v_reltype      VARCHAR (2000);
   DECLARE V_TF           VARCHAR (50);
   DECLARE v_ppf          VARCHAR (50);
 
   SELECT   ID, MODULEID
     INTO   v_id, v_moduleid
     FROM   sci_workflow
    WHERE   WORKFLOWID = p_workflowid;
  IF v_moduleid = 3 AND v_id IS NOT NULL
   THEN
      SELECT   statuscode
        INTO   v_statuscode
        FROM   opportunity_master
       WHERE   opportunityid = v_id;
      IF v_statuscode IN (1, 2)
      THEN
         SELECT   COUNT(1)
           INTO   v_count2
           FROM   x  -- change
          WHERE   CHANGEHISTORY_ID = (SELECT   CHANGEHISTORY_ID
                                        FROM   changehistory
                                       WHERE   opportunity_id = v_id);

         IF v_count2 < 1
         THEN
            SELECT   COUNT(1)
              INTO   l_count
              FROM   sci_opp_loi_duedate_detail
             WHERE   OPPORTUNITY_ID = v_id AND date_type IN (4, 5);
         END IF;
      END IF;
   END IF;
 
 SELECT   COUNT(*)
     INTO   v_count2
     FROM   Opp_SubjectMatter
    WHERE   opportunity_id = v_id;
 
 SELECT   COUNT(*)
     INTO   v_count2
     FROM   item
    WHERE   SUBJECTMATTER_ID IN (SELECT   SUBJECTMATTER_ID
                                   FROM   Opp_SubjectMatter
                                  WHERE   opportunity_id = v_id);

   IF v_count2 > 1
   THEN      
      SELECT   DESCRIPTION
        INTO   v_desc
        FROM   item
       WHERE   SUBJECTMATTER_ID IN (SELECT   SUBJECTMATTER_ID
                                      FROM   Opp_SubjectMatter
                                     WHERE   opportunity_id = v_id)
               LIMIT 1;     
   END IF;
   
SELECT   IFNULL (LIMITEDSUBMISSION, 'false')
     INTO   v_lsub
     FROM   OPPORTUNITY
    WHERE   opportunity_id = v_id;
   
   IF v_lsub = 'true'
   THEN
      SELECT   COUNT(*)
        INTO   v_count2
        FROM   LIMITEDSUBMISSIONDESCRIPTION
       WHERE   OPPORTUNITY_ID = v_id;
       
      IF v_count2 > 1
      THEN       
         SELECT   LIMITEDSUBMISSIONDESC_ID
           INTO   v_ldecid
           FROM   LIMITEDSUBMISSIONDESCRIPTION
          WHERE   OPPORTUNITY_ID = v_id 
         LIMIT 1;

         SELECT   COUNT(*)
           INTO   v_count2
           FROM   item
          WHERE   LIMITEDSUBMISSIONDESC_ID = v_ldecid;

         IF v_count3 > 1
         THEN
            SELECT   reltype
              INTO   v_reltype
              FROM   item
             WHERE   LIMITEDSUBMISSIONDESC_ID = v_ldecid
            LIMIT 1;
		 END IF;
      END IF;
   END IF;
SELECT   COUNT(1)
     INTO   v_count2
     FROM   SCI_OPP_LOI_DUEDATE_DETAIL
    WHERE       DATE_TYPE = (SELECT   TYPE_ID
                               FROM   MST_DATE_TYPE
                              WHERE   name = 'DueDate')
            AND LOI_DUE_DATE IS NOT NULL
            AND opportunity_id = v_id;           
      SELECT   ID,
               CASE
                  WHEN FUNDINGBODYOPPORTUNITYID = 'Not Available'
                  THEN
                     'NAOPP'
                  ELSE
                     FUNDINGBODYOPPORTUNITYID
               END
                  FUNDINGBODYOPPORTUNITYID,
               LIMITEDSUBMISSION,
               TRUSTING,
               COLLECTIONCODE,
               HIDDEN,
               RECORDSOURCE,
               LOI_MANDATORY LOIMANDATORY,
               ELIGIBILITYCATEGORY,
               LINKTOFULLTEXT,
               LOWER (OPPORTUNITYSTATUS) OPPORTUNITYSTATUS,
               NUMBEROFAWARDS,
               DURATION,
               o.OPPORTUNITY_ID,
               REPEATINGOPPORTUNITY,
               PREPROPOSALMANDATORY
        FROM   opportunity o, ESTIMATEDFUNDING esf
       WHERE   o.OPPORTUNITY_ID = esf.opportunity_id
               AND o.opportunity_id = v_id;

      SELECT   sl_mast.language_code lang,
               sl_dtl.column_desc name_text,
               sl_dtl.scival_id opportunity_id
        FROM   sci_language_detail sl_dtl, sci_language_master sl_mast
       WHERE       sl_dtl.language_id = sl_mast.language_id
               AND sl_dtl.moduleid = 3
               AND sl_dtl.column_id = 5
               AND sl_dtl.scival_id = v_id;

      SELECT   STATUS, REVISIONHISTORY_ID, OPPORTUNITY_ID
        FROM   revisionhistory
       WHERE   opportunity_id = v_id;


      SELECT   VERSION,
                  CONCAT(IFNULL(DATE_FORMAT (reviseddate_text, '%Y-%m-%d'), '')
               , 'T'
               , IFNULL(DATE_FORMAT (reviseddate_text, '%H:%i:%s'), ''))
                  reviseddate_text,
               revisionhistory_id
        FROM   reviseddate
       WHERE   revisionhistory_id IN (SELECT   revisionhistory_id
                                        FROM   revisionhistory
                                       WHERE   OPPORTUNITY_ID = v_id);

      SELECT   VERSION,
                  CONCAT(IFNULL(DATE_FORMAT (createddate_text, '%Y-%m-%d'), '')
               , 'T'
               , IFNULL(DATE_FORMAT (createddate_text, '%H:%i:%s'), ''))
                  createddate_text,
               revisionhistory_id
        FROM   createddate
       WHERE   revisionhistory_id IN (SELECT   revisionhistory_id
                                        FROM   revisionhistory
                                       WHERE   OPPORTUNITY_ID = v_id);

   
      SELECT   ID, TYPE_TEXT, OPPORTUNITY_ID
        FROM   TYPE
       WHERE   opportunity_id = v_id;

     SELECT   ELIGIBILITYCLASSIFICATION_ID, OPPORTUNITY_ID
        FROM   eligibilityclassification ecls, elgcls_regionspecific eclsrs
       WHERE       ecls.REGION_SPECIFIC_ID = eclsrs.ID
               AND ELIGIBILITYCLASSIFICATION_ID IS NOT NULL
               AND opportunity_id = v_id;

    SELECT   CURRENCY, ESTIMATEDFUNDING_TEXT, OPPORTUNITY_ID
        FROM   estimatedfunding
       WHERE   opportunity_id = v_id and ESTIMATEDFUNDING_TEXT <> '0';

   SELECT   CURRENCY, AWARDCEILING_TEXT, OPPORTUNITY_ID
        FROM   awardceiling
       WHERE   opportunity_id = v_id and AWARDCEILING_TEXT > 0;

   SELECT   lnk.url,
               CASE WHEN item.LANG IS NULL THEN 'en' ELSE lang END lang,
               item.ITEM_ID,
               item.RELATEDITEMS_ID,
               item.SYNOPSIS_ID,
               item.DESCRIPTION
   FROM      item
               LEFT JOIN
                  link lnk
               ON lnk.item_id = item.item_id
       WHERE   SYNOPSIS_ID IN (SELECT   SYNOPSIS_ID
                                 FROM   synopsis
                                WHERE   opportunity_id = v_id);

      SELECT   currency,
               estimatedfunding_text awardfloor_text,
               opportunity_id
        FROM   awardfloor
       WHERE   opportunity_id = v_id and estimatedfunding_text <>'0';

      SELECT   *
        FROM   relateditems
       WHERE   opportunity_id = v_id;

      SELECT   *
        FROM   classificationgroup
       WHERE   opportunity_id = v_id;

      SELECT   *
        FROM   keywords
       WHERE   opportunity_id = v_id;

      SELECT   ID AS relatedOpportunities_Id,
               OPPORTUNITY_ID AS opportunity_Id
        FROM   sci_related_opportunity
       WHERE   OPPORTUNITY_ID = v_id;

      SELECT   *
        FROM   relatedprograms
       WHERE   opportunity_id = v_id;

   SELECT   COUNT(*)
     INTO   l_count
     FROM   relatedorgs
    WHERE   opportunity_id = v_id AND HIERARCHY = 'lead';

   IF l_count > 0
   THEN
      SELECT   HIERARCHY,
                  relatedorgs_id relatedfundingbodies_id,
                  opportunity_id,
                  (SELECT   FUNDINGBODY_ID
                     FROM   opportunity
                    WHERE   opportunity_id = v_id) as
                     FUNDINGBODY_ID
           FROM   relatedorgs
          WHERE   opportunity_id = v_id;
   END IF;
        SELECT   *
        FROM   changehistory
       WHERE   opportunity_id = v_id;

      SELECT   NULL RELTYPE,
               CASE WHEN LANG IS NULL THEN 'en' ELSE lang END lang,
               ITEM_ID,
               RELATEDITEMS_ID,
               SYNOPSIS_ID,
               DESCRIPTION,
               SUBJECTMATTER_ID,
               ELIGIBILITYDESCRIPTION_ID,
               ESTIMATEDAMOUNTDESCRIPTION_ID,
               LIMITEDSUBMISSIONDESC_ID          -- added by avi on14-JUNt-2018
        FROM   item
       WHERE   RELATEDITEMS_ID IN (SELECT   RELATEDITEMS_ID
                                     FROM   relateditems
                                    WHERE   opportunity_id = v_id)
      UNION ALL      
      SELECT   NULL RELTYPE,
               CASE WHEN LANG IS NULL THEN 'en' ELSE lang END lang,
               ITEM_ID,
               RELATEDITEMS_ID,
               SYNOPSIS_ID,
               DESCRIPTION,
               SUBJECTMATTER_ID,
               ELIGIBILITYDESCRIPTION_ID,
               ESTIMATEDAMOUNTDESCRIPTION_ID,
               LIMITEDSUBMISSIONDESC_ID
        FROM   item
       WHERE   SYNOPSIS_ID IN (SELECT   SYNOPSIS_ID
                                 FROM   synopsis
                                WHERE   opportunity_id = v_id)
      UNION ALL
      SELECT   RELTYPE,
               CASE WHEN LANG IS NULL THEN 'en' ELSE lang END lang,
               ITEM_ID,
               RELATEDITEMS_ID,
               SYNOPSIS_ID,
               DESCRIPTION,
               SUBJECTMATTER_ID,
               ELIGIBILITYDESCRIPTION_ID,
               ESTIMATEDAMOUNTDESCRIPTION_ID,
               LIMITEDSUBMISSIONDESC_ID
        FROM   item
       WHERE   SUBJECTMATTER_ID IN (SELECT   SUBJECTMATTER_ID
                                      FROM   OPP_SUBJECTMATTER
                                     WHERE   opportunity_id = v_id)
      UNION ALL
      SELECT   RELTYPE,
               CASE WHEN LANG IS NULL THEN 'en' ELSE lang END lang,
               ITEM_ID,
               RELATEDITEMS_ID,
               SYNOPSIS_ID,
               DESCRIPTION,
               SUBJECTMATTER_ID,
               ELIGIBILITYDESCRIPTION_ID,
               ESTIMATEDAMOUNTDESCRIPTION_ID,
               LIMITEDSUBMISSIONDESC_ID
        FROM   item
       WHERE   ELIGIBILITYDESCRIPTION_ID IN
                     (SELECT   ELIGIBILITYDESCRIPTION_ID
                        FROM   ELIGIBILITYDESCRIPTION
                       WHERE   OPPORTUNITY_ID = v_id)
      UNION ALL
      SELECT   RELTYPE,
               CASE WHEN LANG IS NULL THEN 'en' ELSE lang END lang,
               ITEM_ID,
               RELATEDITEMS_ID,
               SYNOPSIS_ID,
               DESCRIPTION,
               SUBJECTMATTER_ID,
               ELIGIBILITYDESCRIPTION_ID,
               ESTIMATEDAMOUNTDESCRIPTION_ID,
               LIMITEDSUBMISSIONDESC_ID
        FROM   item
       WHERE   ESTIMATEDAMOUNTDESCRIPTION_ID IN
                     (SELECT   ESTIMATEDAMOUNTDESCRIPTION_ID
                        FROM   ESTIMATEDAMOUNTDESCRIPTION
                       WHERE   OPPORTUNITY_ID = v_id)
      UNION ALL
      SELECT   RELTYPE,
               CASE WHEN LANG IS NULL THEN 'en' ELSE lang END lang,
               ITEM_ID,
               RELATEDITEMS_ID,
               SYNOPSIS_ID,
               DESCRIPTION,
               SUBJECTMATTER_ID,
               ELIGIBILITYDESCRIPTION_ID,
               ESTIMATEDAMOUNTDESCRIPTION_ID,
               LIMITEDSUBMISSIONDESC_ID
        FROM   item
       WHERE   LIMITEDSUBMISSIONDESC_ID IN
                     (SELECT   LIMITEDSUBMISSIONDESC_ID
                        FROM   LIMITEDSUBMISSIONDESCRIPTION
                       WHERE   OPPORTUNITY_ID = v_id);

      SELECT   url, link_text, item_id
        FROM   LINK
       WHERE   item_id IN
                     (SELECT   ITEM_ID
                        FROM   (SELECT   *
                                  FROM   item
                                 WHERE   RELATEDITEMS_ID IN
                                               (SELECT   RELATEDITEMS_ID
                                                  FROM   relateditems
                                                 WHERE   opportunity_id =
                                                            v_id)
                                UNION ALL
                                SELECT   *
                                  FROM   item
                                 WHERE   SYNOPSIS_ID IN
                                               (SELECT   SYNOPSIS_ID
                                                  FROM   synopsis
                                                 WHERE   opportunity_id =
                                                            v_id)
                                UNION ALL
                                  SELECT   *
                                  FROM   item
                                 WHERE   ESTIMATEDAMOUNTDESCRIPTION_ID IN
                                               (SELECT   ESTIMATEDAMOUNTDESCRIPTION_ID
                                                  FROM   ESTIMATEDAMOUNTDESCRIPTION
                                                 WHERE   opportunity_id =
                                                            v_id)
                                UNION ALL
                                 SELECT   *
                                  FROM   item
                                 WHERE   ELIGIBILITYDESCRIPTION_ID IN
                                               (SELECT   ELIGIBILITYDESCRIPTION_ID
                                                  FROM   ELIGIBILITYDESCRIPTION
                                                 WHERE   opportunity_id =
                                                            v_id)
                                UNION ALL
                                SELECT   *
                                  FROM   item
                                 WHERE   LIMITEDSUBMISSIONDESC_ID IN
                                               (SELECT   LIMITEDSUBMISSIONDESC_ID
                                                  FROM   LIMITEDSUBMISSIONDESCRIPTION
                                                 WHERE   opportunity_id =
                                                            v_id)
                                UNION ALL
                                SELECT   *
                                  FROM   item
                                 WHERE   SUBJECTMATTER_ID IN
                                               (SELECT   SUBJECTMATTER_ID
                                                  FROM   OPP_SUBJECTMATTER
                                                 WHERE   opportunity_id =
                                                            v_id)) T );

    SELECT   *
        FROM   classifications
       WHERE   classificationgroup_id IN (SELECT   classificationgroup_id
                                            FROM   classificationgroup
                                           WHERE   opportunity_id = v_id);
     SELECT   *
        FROM   classification
       WHERE   classifications_id IN
                     (SELECT   classifications_id
                        FROM   classifications
                       WHERE   classificationgroup_id IN
                                     (SELECT   classificationgroup_id
                                        FROM   classificationgroup
                                       WHERE   opportunity_id = v_id));

      SELECT   KEYWORD_COLUMN,
               CASE WHEN LANG IS NULL THEN 'en' ELSE lang END LANG
        FROM   keyword
       WHERE   keywords_id IN (SELECT   keywords_id
                                 FROM   keywords
                                WHERE   opportunity_id = v_id);

     SELECT   *
        FROM   relatedprogram
       WHERE   relatedprograms_id IN (SELECT   relatedprograms_id
                                        FROM   relatedprograms
                                       WHERE   opportunity_id = v_id);

    SELECT   RELATED_OPP_ID AS ID,
               RELAION_NAME AS relType,
               OPPORTUNITYNAME AS relatedOpportunity_text,
               ID AS relatedOpportunities_Id
        FROM   sci_related_opportunity
       WHERE   OPPORTUNITY_ID = v_id;

   SELECT   orgdbid,
               reltype,
               org_text,
               relatedorgs_id relatedfundingbodies_id
        FROM   org
       WHERE   relatedorgs_id IN (SELECT   relatedorgs_id
                                    FROM   relatedorgs
                                   WHERE   opportunity_id = v_id);

   SELECT   TYPE ,
               DATE_FORMAT (STR_TO_DATE (POSTDATE, '%d-%m-%Y'), '%d-%m-%Y')
                  POSTDATE,
               VERSION,
               CHANGE_TEXT,
               CHANGEHISTORY_ID
                FROM   X -- change by neha
       WHERE   CHANGEHISTORY_ID IN (SELECT   changehistory_id
                                      FROM   changehistory
                                     WHERE   opportunity_id = v_id)
               AND version =
                     (SELECT   MIN (version)
                        FROM   X -- change by neha
                       WHERE   CHANGEHISTORY_ID IN
                                     (SELECT   changehistory_id
                                        FROM   changehistory
                                       WHERE   opportunity_id = v_id))
      UNION
      SELECT   TYPE,
               DATE_FORMAT (STR_TO_DATE (POSTDATE, '%d-%m-%Y'), '%d-%m-%Y')
                  POSTDATE,
               VERSION,
               CHANGE_TEXT,
               CHANGEHISTORY_ID
          FROM   X -- change by neha
       WHERE   CHANGEHISTORY_ID IN (SELECT   changehistory_id
                                      FROM   changehistory
                                     WHERE   opportunity_id = v_id)
               AND version =
                     (SELECT   MAX (version)
                        FROM   X -- change by neha
                       WHERE   CHANGEHISTORY_ID IN
                                     (SELECT   changehistory_id
                                        FROM   changehistory
                                       WHERE   opportunity_id = v_id));
 --  below line commented by neha
/* OPEN p_contactinfo FOR
     SELECT   *
        FROM   contactinfo
       WHERE   opportunity_id = v_id;

   OPEN p_contact FOR
      SELECT   *
        FROM   contact
       WHERE   contactinfo_id IN (SELECT   contactinfo_id
                                    FROM   contactinfo
                                   WHERE   opportunity_id = v_id); 

   OPEN p_contactname FOR
      SELECT   cn.CONTACT_ID,
               cn.prefix,
               cn.givenname,
               cn.middlename,
               cn.surname,
               cn.suffix,
               c.email
        FROM      contactname cn
               LEFT JOIN
                  contact c
               ON c.contact_id = cn.contact_id
       WHERE   cn.contact_id IN
                     (SELECT   contact_id
                        FROM   contact
                       WHERE   contactinfo_id IN
                                     (SELECT   contactinfo_id
                                        FROM   contactinfo
                                       WHERE   opportunity_id = v_id));


   OPEN p_website FOR
      SELECT   url, website_text, contact_id
        FROM   website
       WHERE   contact_id IN
                     (SELECT   contact_id
                        FROM   contact
                       WHERE   contactinfo_id IN
                                     (SELECT   contactinfo_id
                                        FROM   contactinfo
                                       WHERE   opportunity_id = v_id));

   OPEN p_address FOR
      SELECT   countrytest country,
               room,
               street,
               city,
               state,
               postalcode,
               countrytest,
               contact_id
        FROM   address
       WHERE   contact_id IN
                     (SELECT   contact_id
                        FROM   contact
                       WHERE   contactinfo_id IN
                                     (SELECT   contactinfo_id
                                        FROM   contactinfo
                                       WHERE   opportunity_id = v_id));

   OPEN p_opportunityDates FOR
        SELECT   0 opportunityDates_Id, OPPORTUNITY_ID
          FROM   SCI_OPP_LOI_DUEDATE_DETAIL
         WHERE   opportunity_id = v_id
      ORDER BY   SEQUENCE_ID;


   OPEN p_opportunityDate FOR
        SELECT   DATE_REMARKS description,
                 O_ID opportunityDate_Id,
                 0 opportunityDates_Id
          FROM   SCI_OPP_LOI_DUEDATE_DETAIL
         WHERE   opportunity_id = v_id
      ORDER BY   SEQUENCE_ID;

   OPEN p_date FOR
        SELECT   sci_get_date_name (DATE_TYPE) TYPE,
                 DATE_FORMAT (LOI_DUE_DATE, '%Y-%m-%d') date_text,
                 O_ID opportunityDate_Id
          FROM   SCI_OPP_LOI_DUEDATE_DETAIL
         WHERE   opportunity_id = v_id
      ORDER BY   SEQUENCE_ID;

   OPEN p_opportunityLocation FOR
      SELECT   country countrytest,
               room,
               street,
               city,
               state,
               postalcode,
               country,
               opportunity_id
        FROM   opportunity_location
       WHERE   opportunity_id = v_id;


   OPEN p_subjectMatter FOR
      SELECT   lnk.url,
               CASE WHEN item.LANG IS NULL THEN 'en' ELSE lang END lang,
               item.ITEM_ID,
			   item.RELATEDITEMS_ID,
               item.DESCRIPTION,
               SUBJECTMATTER_ID
        FROM      item
               LEFT JOIN
                  link lnk
               ON lnk.item_id = item.item_id
       WHERE   SUBJECTMATTER_ID IN (SELECT   SUBJECTMATTER_ID
                                      FROM   OPP_SUBJECTMATTER
                                     WHERE   opportunity_id = v_id);

   OPEN p_eligibility_desc FOR
      SELECT   lnk.url,
               CASE WHEN item.LANG IS NULL THEN 'en' ELSE lang END lang,
               item.ITEM_ID,
               item.RELATEDITEMS_ID,
               item.DESCRIPTION,
               ELIGIBILITYDESCRIPTION_ID
        FROM      item
               LEFT JOIN
                  link lnk
               ON lnk.item_id = item.item_id
       WHERE   ELIGIBILITYDESCRIPTION_ID IN
                     (SELECT   ELIGIBILITYDESCRIPTION_ID
                        FROM   ELIGIBILITYDESCRIPTION
                       WHERE   opportunity_id = v_id);

   OPEN P_individualEligibility FOR
      SELECT   
      (case when lower(not_specified) ='true' then 'LIMITED' else 'NOTSPECIFIED' end) limitation,
               degree degreeRequirement,
               graduate applicantType,
               individualeligibility_id,
               ec.eligibilityclassification_id
        FROM   individualEligibility IE, ELIGIBILITYCLASSIFICATION EC
       WHERE   ec.eligibilityclassification_id =
                  ie.eligibilityclassification_id
               AND EC.OPPORTUNITY_ID = v_id;

   OPEN P_citizenship FOR
      SELECT   CASE
                  WHEN norestriction IS NULL THEN 'NOTSPECIFIED'
                  WHEN lower(norestriction) ='false' THEN 'NOTSPECIFIED'
                  WHEN country is null THEN 'NOTSPECIFIED'
                  WHEN lower(norestriction) ='true' THEN 'LIMITED'
                  ELSE norestriction
               END
                  limitation,
               CASE
                  WHEN country IS NULL THEN null
                  ELSE country
               END
                  country,
               cz.individualeligibility_id
        FROM   citizenship CZ,
               individualEligibility IE,
               ELIGIBILITYCLASSIFICATION EC
       WHERE   ec.eligibilityclassification_id =
                  ie.eligibilityclassification_id
               AND ie.individualeligibility_id = cz.individualeligibility_id
               AND EC.OPPORTUNITY_ID = v_id;

   OPEN P_organizationEligibility FOR
      SELECT   not_specified limitation,
               academic applicantType,
               organizationeligibility_id,
               EC.eligibilityclassification_id
        FROM   organizationEligibility OE, ELIGIBILITYCLASSIFICATION EC
       WHERE   ec.eligibilityclassification_id =
                  oe.eligibilityclassification_id
               AND ec.opportunity_id = v_id;

   OPEN P_regionspecific FOR
      SELECT 
      case when country is not null then 'LIMITED'
      else 'NOTSPECIFIED' end  limitation,
               city,
               state,
               country,
               OE.organizationeligibility_id
        FROM   regionspecific RS,
               organizationEligibility OE,
               ELIGIBILITYCLASSIFICATION EC
       WHERE   ec.eligibilityclassification_id =
                  oe.eligibilityclassification_id
               AND ec.opportunity_id = v_id
               AND OE.ORGANIZATIONELIGIBILITY_ID =
                     RS.ORGANIZATIONELIGIBILITY_ID;

   OPEN P_restrictions FOR
      SELECT   not_specified limitation,
               disabilities restriction,
               restrictions_id,
               ec.eligibilityclassification_id
        FROM   restrictions RS, ELIGIBILITYCLASSIFICATION EC
       WHERE   ec.eligibilityclassification_id =
                  RS.eligibilityclassification_id
               AND EC.OPPORTUNITY_ID = V_ID;

   OPEN P_limitedsubmission FOR
      SELECT   numberofapplicantsallowed numberOfApplications,
               'Limited' limitation,
               CASE WHEN LD.description IS NULL THEN 'Not Available_X' ELSE to_char(LD.description) END description,
               case when  LD.lang is null then 'Not Available_X' else  LD.lang end lang,
               case when  LD.URL is null then 'Not Available_X' else  LD.URL end URL,
               ls.restriction_id restrictions_id
        FROM   limitedsubmission LS,
               restrictions RS,
               ELIGIBILITYCLASSIFICATION EC,
               (SELECT   lsd.limitedsubmissiondesc_id,
                         opportunity_id,
                         it.description,
                         it.lang,
                         l.url
                  FROM   limitedsubmissionDescription LSD, ITEM IT, link l
                 WHERE   it.LIMITEDSUBMISSIONDESC_ID =
                            LSD.LIMITEDSUBMISSIONDESC_ID
                         AND l.item_id = it.item_id
                         AND LSD.opportunity_id = V_ID) LD
       WHERE   ec.eligibilityclassification_id =
                  RS.eligibilityclassification_id
               AND EC.OPPORTUNITY_ID = V_ID
               AND RS.RESTRICTIONS_ID = LS.RESTRICTION_ID
               AND LD.opportunity_id = EC.OPPORTUNITY_ID;

   OPEN p_estimatedamountdescription FOR
      SELECT   lnk.url,
               CASE WHEN item.LANG IS NULL THEN 'en' ELSE lang END lang,
               item.ITEM_ID,
               item.RELATEDITEMS_ID,
               item.estimatedamountdescription_id,
               item.DESCRIPTION
        FROM      item
               LEFT JOIN
                  link lnk
               ON lnk.item_id = item.item_id
       WHERE   estimatedamountdescription_id IN
                     (SELECT   estimatedamountdescription_id
                        FROM   estimatedAmountDescription
                       WHERE   opportunity_id = v_id);

   OPEN p_limitedsubmissionDescription FOR
      SELECT   lsd.limitedsubmissiondesc_id, opportunity_id
        FROM   limitedsubmissionDescription LSD, ITEM IT
       WHERE   it.LIMITEDSUBMISSIONDESC_ID = LSD.LIMITEDSUBMISSIONDESC_ID
               AND LSD.opportunity_id = v_id;

   OPEN P_Duration FOR
      SELECT   it.RELTYPE,
               it.description,
               it.ITEM_ID,
               it.lang,
               it.RELATEDITEMS_ID id,
               it.duration_id,
               d.OPPORTUNITY_ID,
               l.URL,
               l.LINK_TEXT,
               AWARDSTATISTICS_ID,
               o.DURATION
        FROM   item it,
               duration d,
               link l,
               OPPORTUNITY o
       WHERE       it.duration_ID = d.duration_ID
               AND d.OPPORTUNITY_ID = o.OPPORTUNITY_ID
               AND l.item_id = it.item_id
               AND d.OPPORTUNITY_ID = v_id;

   OPEN P_expirationDateDetail FOR
      SELECT   CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900'
                  THEN
                     'NOTSPECIFIED'
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900'
                  THEN
                     'ONGOING'
                  ELSE
                        CONCAT(IFNULL(DATE_FORMAT (LOI_DUE_DATE, '%Y-%m-%d'), '')
                     , 'T'
                     , IFNULL(DATE_FORMAT (LOI_DUE_DATE, '%H:%i:%s'), ''))
               END
                  date_text,
               URL URL_expirationDate,
               CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900'
                  THEN
                     ''
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900' THEN ''
                  WHEN to_char(Date_Remarks) is null   THEN ''
                  ELSE
                     lang
               END
               lang,
               Date_Remarks description,
               opportunity_id,
               CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900'
                  THEN
                     'NOTSPECIFIED'
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900'
                  THEN
                     'ONGOING'
                  ELSE
                     'SPECIFIED'
               END
                  limitation,
               CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900' THEN 'false'
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900' THEN 'false'
                  ELSE 'true'
               END
                  required
        FROM   SCI_OPP_LOI_DUEDATE_DETAIL
       WHERE   opportunity_id = v_id AND date_type = 3;

   OPEN P_decision FOR
      SELECT   CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900'
                  THEN
                     ''
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900'
                  THEN
                     ''
                  ELSE
                        CONCAT(IFNULL(DATE_FORMAT (LOI_DUE_DATE, '%Y-%m-%d'), '')
                     , 'T'
                     , IFNULL(DATE_FORMAT (LOI_DUE_DATE, '%H:%i:%s'), ''))
               END
                  date_text,
               URL URL_decisionDate,
                CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900'
                  THEN
                     ''
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900'
                  THEN
                     ''
                     WHEN to_char(Date_Remarks) is null   THEN ''
                  ELSE
                     lang
               END
               lang,
               Date_Remarks description,
               opportunity_id,
               CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900'
                  THEN
                     'NOTSPECIFIED'
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900'
                  THEN
                     'ONGOING'
                  ELSE
                     'SPECIFIED'
               END
                  limitation,
               CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900' THEN 'false'
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900' THEN 'false'
                  ELSE 'true'
               END
                  required
        FROM   SCI_OPP_LOI_DUEDATE_DETAIL
       WHERE   opportunity_id = v_id AND date_type = 8;


   OPEN P_letterOfIntent FOR
      SELECT   CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900'
                  THEN
                     ''
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900'
                  THEN
                     ''
                  ELSE
                        CONCAT(IFNULL(DATE_FORMAT (LOI_DUE_DATE, '%Y-%m-%d'), '')
                     , 'T'
                     , IFNULL(DATE_FORMAT (LOI_DUE_DATE, '%H:%i:%s'), ''))
               END
                  date_text,
               URL URL_LOIDATE,
                CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900'
                  THEN
                     ''
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900'
                  THEN
                     ''
                     WHEN to_char(Date_Remarks) is null   THEN ''
                  ELSE
                     lang
               END
               lang,
               Date_Remarks description,
               opportunity_id,
               CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900'
                  THEN
                     'NOTSPECIFIED'
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900'
                  THEN
                     'ONGOING'
                  ELSE
                     'SPECIFIED'
               END
                  limitation,
               CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900' THEN 'false'
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900' THEN 'false'
                  ELSE 'true'
               END
                  required
        FROM   SCI_OPP_LOI_DUEDATE_DETAIL
       WHERE   opportunity_id = v_id AND date_type = 1;

   OPEN P_preproposal FOR
      SELECT   CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900'
                  THEN
                     ''
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900'
                  THEN
                     ''
                  ELSE
                        CONCAT(IFNULL(DATE_FORMAT (LOI_DUE_DATE, '%Y-%m-%d'), '')
                     , 'T'
                     , IFNULL(DATE_FORMAT (LOI_DUE_DATE, '%H:%i:%s'), ''))
               END
                  date_text,
               URL URL_preproposalDate,
                CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900'
                  THEN
                     ''
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900'
                  THEN
                     ''
                     WHEN to_char(Date_Remarks) is null   THEN ''
                  ELSE
                     lang
               END
               lang,
               Date_Remarks description,
               opportunity_id,
               CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900'
                  THEN
                     'NOTSPECIFIED'
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900'
                  THEN
                     'ONGOING'
                  ELSE
                     'SPECIFIED'
               END
                  limitation,
               CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900' THEN 'false'
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900' THEN 'false'
                  ELSE 'true'
               END
                  required
        FROM   SCI_OPP_LOI_DUEDATE_DETAIL
       WHERE   opportunity_id = v_id AND date_type = 7;

   OPEN P_startDateDetail FOR
      SELECT   CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900'
                  THEN
                     ''
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900'
                  THEN
                     ''
                  ELSE
                        CONCAT(IFNULL(DATE_FORMAT (LOI_DUE_DATE, '%Y-%m-%d'), '')
                     , 'T'
                     , IFNULL(DATE_FORMAT (LOI_DUE_DATE, '%H:%i:%s'), ''))
               END
                  date_text,
               URL URL_startDate,
                CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900'
                  THEN
                     ''
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900'
                  THEN
                     ''
                     WHEN to_char(Date_Remarks) is null   THEN ''
                  ELSE
                     lang
               END
               lang,
               Date_Remarks description,
               opportunity_id,
               CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900'
                  THEN
                     'NOTSPECIFIED'
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900'
                  THEN
                     'ONGOING'
                  ELSE
                     'SPECIFIED'
               END
                  limitation,
                CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900' THEN 'false'
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900' THEN 'false'
                  ELSE 'true'
               END
                  required
        FROM   SCI_OPP_LOI_DUEDATE_DETAIL
       WHERE   opportunity_id = v_id AND date_type = 6;

   OPEN P_proposal FOR
      SELECT   CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900'
                  THEN
                     ''
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900'
                  THEN
                     ''
                  ELSE
                        CONCAT(IFNULL(DATE_FORMAT (LOI_DUE_DATE+3000, '%Y-%m-%d'), '')
                     , 'T'
                     , IFNULL(DATE_FORMAT (LOI_DUE_DATE, '%H:%i:%s'), ''))
               END
                  date_text,
               URL URL_proposalDate,
                CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900'
                  THEN
                     ''
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900'
                  THEN
                     ''
                     WHEN to_char(Date_Remarks) is null   THEN ''
                  ELSE
                     lang
               END
               lang,
               Date_Remarks description,
               opportunity_id,
               CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900'
                  THEN
                     'NOTSPECIFIED'
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900'
                  THEN
                     'ONGOING'
                  ELSE
                     'SPECIFIED'
               END
                  limitation,
               CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900' THEN 'false'
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900' THEN 'false'
                  ELSE 'true'
               END
                  required
        FROM   SCI_OPP_LOI_DUEDATE_DETAIL
       WHERE   opportunity_id = v_id AND date_type = 2;

   OPEN P_endDateDetail FOR
      SELECT   CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900'
                  THEN
                     ''
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900'
                  THEN
                     ''
                  ELSE
                        CONCAT(IFNULL(DATE_FORMAT (LOI_DUE_DATE, '%Y-%m-%d'), '')
                     , 'T'
                     , IFNULL(DATE_FORMAT (LOI_DUE_DATE, '%H:%i:%s'), ''))
               END
                  date_text,
               URL URL_endDate,
                CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900'
                  THEN
                     ''
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900'
                  THEN
                     ''
                     WHEN to_char(Date_Remarks) =''   THEN ''
                  ELSE
                     lang
               END
               lang,
               Date_Remarks description,
               opportunity_id,
               CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900'
                  THEN
                     'NOTSPECIFIED'
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900'
                  THEN
                     'ONGOING'
                  ELSE
                     'SPECIFIED'
               END
                  limitation,
               CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900' THEN 'false'
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900' THEN 'false'
                  ELSE 'true'
               END
                  required
        FROM   SCI_OPP_LOI_DUEDATE_DETAIL
       WHERE   opportunity_id = v_id AND date_type = 2;

   OPEN P__Cycle FOR
      SELECT   2 AS cycle,
               0 AS indexValue,
                  CONCAT(DATE_FORMAT (SYSDATE(), '%bth')
               , DATE_FORMAT (SYSDATE(), '%Y')
               , ' '
               , 'round')
                  AS label
        FROM   DUAL;

   OPEN P_homePage FOR
      SELECT   recordsource link,
               (SELECT     CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900'
                  THEN
                    null
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900'
                  THEN
                    null
                  ELSE
                        CONCAT(IFNULL(DATE_FORMAT (LOI_DUE_DATE, '%Y-%m-%d'), '')
                     , 'T'
                     , IFNULL(DATE_FORMAT (LOI_DUE_DATE, '%H:%i:%s'), ''))
               END LOI_DUE_DATE
                  FROM   SCI_OPP_LOI_DUEDATE_DETAIL DD
                 WHERE   o.opportunity_id = DD.opportunity_id
                         AND dd.date_type = 4)
                  publishedDate,
               (SELECT    CASE
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-01-1900'
                  THEN
                    null
                  WHEN date_format (LOI_DUE_DATE,'%d-%m-%Y') = '01-02-1900'
                  THEN
                    null
                  ELSE
                        CONCAT(IFNULL(DATE_FORMAT (LOI_DUE_DATE, '%Y-%m-%d'), '')
                     , 'T'
                     , IFNULL(DATE_FORMAT (LOI_DUE_DATE, '%H:%i:%s'), ''))
               END LOI_DUE_DATE
                  FROM   SCI_OPP_LOI_DUEDATE_DETAIL DD
                 WHERE   o.opportunity_id = DD.opportunity_id
                         AND dd.date_type = 5)
                  modifiedDate
        FROM   opportunity o
       WHERE   o.opportunity_id = v_id;

   OPEN p_LICENSEINFORMATION FOR
      SELECT   lnk.url,
               CASE WHEN item.LANG IS NULL THEN 'en' ELSE lang END lang,
               item.ITEM_ID,
               item.RELATEDITEMS_ID,
               item.DESCRIPTION,
               LICENSEINFORMATION_ID
        FROM      item
               LEFT JOIN
                  link lnk
               ON lnk.item_id = item.item_id
       WHERE   LICENSEINFORMATION_ID IN (SELECT   LICENSEINFORMATION_ID
                                           FROM   LICENSEINFORMATION
                                          WHERE   opportunity_id = v_id);

   OPEN p_instruction FOR
      SELECT   lnk.url,
               CASE WHEN item.LANG IS NULL THEN 'en' ELSE lang END lang,
               item.ITEM_ID,
               item.RELATEDITEMS_ID,
               item.DESCRIPTION,
               INSTRUCTION_ID
        FROM      item
               LEFT JOIN
                  link lnk
               ON lnk.item_id = item.item_id
       WHERE   INSTRUCTION_ID IN (SELECT   INSTRUCTION_ID
                                    FROM   INSTRUCTION
                                   WHERE   opportunity_id = v_id);

   OPEN p_relatedTo FOR
      SELECT   relid,
               ort.relation_name,
               RELATED_OPP_ID,
               sro.OPPORTUNITYNAME,
               sld.LANGUAGE_ID,
               slm.language_code,
               sro.description
        FROM   sci_related_opportunity sro,
               opportunity_master opm,
               SCI_OPPORTUNITY_RELATION_TYPE ort,
               sci_language_detail sld,
               sci_language_master slm
       WHERE       sro.RELATED_OPP_ID = opm.OPPORTUNITYID
               AND SRO.REL_OPP_ID = ORT.RELID
               AND REL_OPP_ID = 1
               AND sld.SCIVAL_ID = opm.OPPORTUNITYID
               AND slm.LANGUAGE_ID = sld.LANGUAGE_ID
               AND IFNULL (opm.STATUSCODE, 1) <> 3
               AND SRO.OPPORTUNITY_ID = v_id;

   OPEN p_replacedBy FOR
      SELECT   relid,
               ort.relation_name,
               RELATED_OPP_ID,
               sro.OPPORTUNITYNAME,
               sld.LANGUAGE_ID,
               slm.language_code,
               sro.description
        FROM   sci_related_opportunity sro,
               opportunity_master opm,
               SCI_OPPORTUNITY_RELATION_TYPE ort,
               sci_language_detail sld,
               sci_language_master slm
       WHERE       sro.RELATED_OPP_ID = opm.OPPORTUNITYID
               AND SRO.REL_OPP_ID = ORT.RELID
               AND REL_OPP_ID = 2
               AND sld.SCIVAL_ID = opm.OPPORTUNITYID
               AND slm.LANGUAGE_ID = sld.LANGUAGE_ID
               AND IFNULL (opm.STATUSCODE, 1) <> 3
               AND SRO.OPPORTUNITY_ID = v_id;


   OPEN p_replaces FOR
      SELECT   relid,
               ort.relation_name,
               RELATED_OPP_ID,
               sro.OPPORTUNITYNAME,
               sld.LANGUAGE_ID,
               slm.language_code,
               sro.description
        FROM   sci_related_opportunity sro,
               opportunity_master opm,
               SCI_OPPORTUNITY_RELATION_TYPE ort,
               sci_language_detail sld,
               sci_language_master slm
       WHERE       sro.RELATED_OPP_ID = opm.OPPORTUNITYID
               AND SRO.REL_OPP_ID = ORT.RELID
               AND REL_OPP_ID = 3
               AND sld.SCIVAL_ID = opm.OPPORTUNITYID
               AND slm.LANGUAGE_ID = sld.LANGUAGE_ID
               AND IFNULL (opm.STATUSCODE, 1) <> 3
               AND SRO.OPPORTUNITY_ID = v_id; */
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_op_recurringIns` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_op_recurringIns`(
   P_WORKFLOWID                 INTEGER,
   p_recurring                  VARCHAR(4000),
   P_UserID                     INTEGER
)
BEGIN
	DECLARE V_MODULEID               INTEGER;
	DECLARE Pv_RAWTEXT               VARCHAR (100);
	DECLARE v_subtype                INTEGER;
	DECLARE V_ID                     INTEGER;
	DECLARE V_CYCLE                  INTEGER;
	DECLARE V_FUNDINGBODYID          INTEGER;
	DECLARE v_value                  VARCHAR (2000);
	DECLARE v_REVISIONHISTORYID      INTEGER;
	DECLARE V_TRUSTING               VARCHAR (200);
	DECLARE v_preferedorgname        LONGTEXT;
	DECLARE v_type                   VARCHAR (2000);
	DECLARE v_RELATEDORGS_ID         INTEGER;
	DECLARE v_cnt                    INTEGER;

	DECLARE l_opportunity_name_chk   INTEGER;
	DECLARE l_count                  INTEGER;
	DECLARE l_Rec_id                   INTEGER;
	
	SELECT   MODULEID, ID, CYCLE INTO   V_MODULEID, V_ID, V_CYCLE FROM   SCI_WORKFLOW WHERE   WORKFLOWID = P_WORKFLOWID;      	

	IF V_MODULEID = 3
	THEN		
		SELECT   FUNDINGBODYID INTO   V_FUNDINGBODYID FROM   OPPORTUNITY_MASTER WHERE   OPPORTUNITYID = V_ID;

		SELECT   TRUSTING, PREFERREDORGNAME, TYPE INTO   V_TRUSTING, v_preferedorgname, v_type
		FROM   FUNDINGBODY WHERE   FUNDINGBODY_ID = V_FUNDINGBODYID;

		SELECT   COUNT (1) INTO   v_subtype FROM   SUBTYPE
		WHERE   SUBTYPE_TEXT IN ('federal', 'Federal/National Government') AND FUNDINGBODY_ID = V_FUNDINGBODYID;	
	END IF;
	
	SELECT   IFNULL (MAX (REC_ID), 0) + 1 INTO   l_Rec_id FROM   recurring;		
		
	INSERT INTO recurring (REC_ID,
						   OPPORTUNITY_ID,
						   RECURRING_STATUS,
						   USERID,
						   REC_DATE)
	VALUES   (l_Rec_id,
		   V_ID,
		   p_recurring,
		   P_UserID,
		   sysdate()
		  );
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_op_relatedopplist_prc` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_op_relatedopplist_prc`(
	p_workflowid       INTEGER
)
BEGIN
	DECLARE v_OPPORTUNITYID    INTEGER;
	DECLARE v_moduleid         INTEGER;
	DECLARE v_fundingbody_id   INTEGER;

   SELECT   ID, moduleid
     INTO   v_OPPORTUNITYID, v_moduleid
     FROM   sci_workflow
    WHERE   WORKFLOWID = p_workflowid;

	SELECT   * FROM SCI_OPPORTUNITY_RELATION_TYPE;

   IF v_moduleid = 3
   THEN
   
      SELECT   fundingbodyid
        INTO   v_fundingbody_id
        FROM   opportunity_master
       WHERE   opportunityid = v_OPPORTUNITYID;
       
        SELECT   opportunityid, opportunityname
           FROM   opportunity_master
          WHERE   --fundingbodyid = v_fundingbody_id and
                   opportunityid <> v_OPPORTUNITYID
                  AND NVL (STATUSCODE, 1) <> 3;

          SELECT   relid ,ort.relation_name,RELATED_OPP_ID, sro.OPPORTUNITYNAME,sro.description
           FROM   sci_related_opportunity sro, opportunity_master opm,SCI_OPPORTUNITY_RELATION_TYPE ort
          WHERE   sro.RELATED_OPP_ID = opm.OPPORTUNITYID
                  and SRO.REL_OPP_ID=ORT.RELID
                  AND NVL (opm.STATUSCODE, 1) <> 3
                  and SRO.OPPORTUNITY_ID = v_OPPORTUNITYID;
     
   ELSE IF v_moduleid = 4 THEN
     SELECT   fundingbodyid
        INTO   v_fundingbody_id
        FROM   award_master
       WHERE   awardid = v_OPPORTUNITYID;
       
        SELECT   opportunityid, opportunityname
           FROM   opportunity_master
          WHERE   --fundingbodyid = v_fundingbody_id and 
                  opportunityid <> v_OPPORTUNITYID
                  AND NVL (STATUSCODE, 1) <> 3;

          SELECT   relid ,ort.relation_name,RELATED_OPP_ID, sro.OPPORTUNITYNAME
           FROM   sci_related_opportunity sro, opportunity_master opm,SCI_OPPORTUNITY_RELATION_TYPE ort
          WHERE   sro.RELATED_OPP_ID = opm.OPPORTUNITYID
                  and SRO.REL_OPP_ID=ORT.RELID
                  AND NVL (opm.STATUSCODE, 1) <> 3
                  and SRO.Award_ID = v_OPPORTUNITYID;
      END IF;
     
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_OP_RELATEDORGLIST_y` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_OP_RELATEDORGLIST_y`(
	p_workflowid       integer  
)
BEGIN
	DECLARE v_OPPORTUNITYID   integer;
	DECLARE v_moduleid        integer;
	DECLARE v_fbid            integer;
	DECLARE v_count           integer;
	DECLARE v_relatedorgs_id  integer;
	DECLARE v_fbname          varchar(4000);
 
	SELECT   ID, moduleid INTO   v_OPPORTUNITYID, v_moduleid FROM   sci_workflow WHERE   WORKFLOWID = p_workflowid;

	SELECT   * FROM SCI_BINARYRELATIONTYPE;
	SELECT   * FROM sci_hierarchymaster;

	IF v_moduleid = 3
	THEN
		SELECT COUNT(*) INTO v_count FROM RELATEDORGS WHERE OPPORTUNITY_ID= v_OPPORTUNITYID and HIERARCHY='lead';
		IF v_count > 0 
        THEN
			SELECT RELATEDORGS_ID INTO v_relatedorgs_id FROM RELATEDORGS WHERE OPPORTUNITY_ID= v_OPPORTUNITYID and HIERARCHY='lead';
		ELSE
			SELECT RELATEDORGS_SEQ.NEXTVAL INTO v_relatedorgs_id FROM DUAL;
			INSERT INTO relatedorgs (HIERARCHY,RELATEDORGS_ID,OPPORTUNITY_ID)
			VALUES('lead', v_relatedorgs_id, v_OPPORTUNITYID);
		END IF;
     
		SELECT FM.FUNDINGBODY_ID,FM.FUNDINGBODYNAME INTO v_fbid, v_fbname 
        FROM OPPORTUNITY_MASTER OM, FUNDINGBODY_MASTER FM
		WHERE FM.FUNDINGBODY_ID = OM.FUNDINGBODYID AND OM.OPPORTUNITYID = v_opportunityid;

		IF v_fbid IS NOT NULL AND v_fbname IS NOT NULL 
        THEN 
			SELECT COUNT(*) INTO v_count FROM ORG WHERE RELATEDORGS_ID=v_relatedorgs_id;

			IF v_count < 1 
            THEN
				IF v_fbid IS NOT NULL 
                THEN 
					INSERT INTO ORG(orgdbid,reltype,org_text,relatedorgs_id) VALUES(v_fbid,'fundedBy',v_fbname,v_relatedorgs_id);
				END IF;
			ELSE
				UPDATE ORG SET orgdbid=v_fbid,reltype='fundedBy',org_text=v_fbname where  RELATEDORGS_ID=v_relatedorgs_id;
			END IF;
		END IF;
		
        SELECT   fb.ORGDBID, FUNDINGBODYNAME
        FROM   fundingbody fb, fundingbody_master fm
		WHERE   fb.FUNDINGBODY_ID = fm.FUNDINGBODY_ID
               AND IFNULL (STATUSCODE, 1) <> 3
               AND IFNULL (STATUSCODE, 1) <> 45
               AND NOT EXISTS
                     (SELECT   *
                        FROM   org
                       WHERE   RELATEDORGS_ID IN
                                     (SELECT   RELATEDORGS_ID
                                        FROM   relatedorgs
                                       WHERE   OPPORTUNITY_ID =
                                                  v_OPPORTUNITYID)
                               AND ORGDBID = fb.FUNDINGBODY_ID)
                               
        UNION
                               
		SELECT vendor_id ORGDBID, vendor_fundingbody_name FUNDINGBODYNAME FROM   sci_related_orgs_vendor;

		SELECT   FUNDINGBODYNAME,
               rd.HIERARCHY,
               rd.RELATEDORGS_ID,
               fm.FUNDINGBODY_ID,
               o.ORGDBID,
               o.RELTYPE,
               (CASE WHEN fm.STATUSCODE = 3 THEN 1 ELSE 0 END) flag
        FROM   relatedorgs rd,
               org o,
               fundingbody fb,
               fundingbody_master fm
		WHERE  O.RELATEDORGS_ID= RD.RELATEDORGS_ID and
              FB.FUNDINGBODY_ID=O.ORGDBID and
              FM.FUNDINGBODY_ID= FB.FUNDINGBODY_ID 
              AND IFNULL(FM.STATUSCODE, 1) <> 45
				AND FB.FUNDINGBODY_ID = fm.FUNDINGBODY_ID
               AND rd.OPPORTUNITY_ID = v_OPPORTUNITYID
               
		UNION
        
        SELECT   vendor_fundingbody_name FUNDINGBODYNAME,
                  rd.HIERARCHY,
                  rd.RELATEDORGS_ID,
                  rov.vendor_id FUNDINGBODY_ID,
                  o.ORGDBID,
                  o.RELTYPE,
                  0 flag
        FROM   relatedorgs rd,
                  org o,
                  sci_related_orgs_vendor rov
        WHERE       rd.RELATEDORGS_ID = o.RELATEDORGS_ID
                  AND O.ORGDBID = rov.vendor_id
                 AND rd.OPPORTUNITY_ID =v_OPPORTUNITYID;
             
	ELSEIF  v_moduleid = 4 
    THEN
		SELECT   fb.ORGDBID, FUNDINGBODYNAME
		FROM   fundingbody fb, fundingbody_master fm
		WHERE   fb.FUNDINGBODY_ID = fm.FUNDINGBODY_ID
               AND IFNULL (STATUSCODE, 1) <> 3
               AND IFNULL (STATUSCODE, 1) <> 45
               AND NOT EXISTS
                     (SELECT   *
                        FROM   org
                       WHERE   RELATEDORGS_ID IN
                                     (SELECT   RELATEDORGS_ID
                                        FROM   relatedorgs
                                       WHERE   AWARD_ID =
                                                  v_OPPORTUNITYID)
                               AND ORGDBID = fb.FUNDINGBODY_ID)
                               UNION
                                SELECT vendor_id ORGDBID, vendor_fundingbody_name FUNDINGBODYNAME
			FROM   sci_related_orgs_vendor;

		SELECT   FUNDINGBODYNAME,
               rd.HIERARCHY,
               rd.RELATEDORGS_ID,
               rd.FUNDINGBODY_ID,
               o.ORGDBID,
               o.RELTYPE,
                FBA.AMOUNT, 
                FBA.CURRENCY,          
               (CASE WHEN fm.STATUSCODE = 3 THEN 1 ELSE 0 END) flag
		FROM   	relatedorgs rd,
				org o,
				fundingbody fb,
				fundingbody_master fm, 
				fundingBodyAmount FBA 
                LEFT JOIN relatedFundingBodies RFB
                ON FBA.RELEATEDFUNDINGBODIES_ID=RFB.RELEATEDFUNDINGBODIES_ID
		WHERE  rd.RELATEDORGS_ID = o.RELATEDORGS_ID
               AND O.ORGDBID = fb.ORGDBID
               AND IFNULL (fm.STATUSCODE, 1) <> 45
               AND FB.FUNDINGBODY_ID = fm.FUNDINGBODY_ID
               AND RFB.RELATEDORGSSS_ID= RD.RELATEDORGS_ID
               AND rd.AWARD_ID = v_OPPORTUNITYID;	
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_op_relatedprogeam` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_op_relatedprogeam`(
p_workflowid       integer
)
BEGIN
   DECLARE v_id         integer;
   DECLARE v_moduleid   integer;
 
   SELECT   ID, moduleid
     INTO   v_id, v_moduleid
     FROM   sci_workflow
    WHERE   WORKFLOWID = p_workflowid;

--   OPEN p_mrel FOR
        SELECT   *
          FROM   SCI_BINARYRELATIONTYPE
      ORDER BY   VALUE;

  -- OPEN p_mhie FOR
        SELECT   *
          FROM   sci_hierarchymaster
      ORDER BY   HIERARCHY;

   IF v_moduleid = 3
   THEN
    --  OPEN mlist FOR
         SELECT   *
           FROM   relatedprograms
          WHERE   OPPORTUNITY_ID = v_id;

      -- OPEN mdata FOR
         SELECT   rs.HIERARCHY,
                  rs.RELATEDPROGRAMS_ID,
                  rm.id,
                  rm.RELTYPE,
                  rm.RELATEDPROGRAM_TEXT
           FROM   relatedprograms rs, relatedprogram rm
          WHERE   rs.RELATEDPROGRAMS_ID = rm.RELATEDPROGRAMS_ID
                  AND OPPORTUNITY_ID = v_id;

      elseif v_moduleid=4
      then
--      OPEN mlist FOR
         SELECT   *
           FROM   relatedprograms
          WHERE   AWARD_ID = v_id;

  --    OPEN mdata FOR
         SELECT   rs.HIERARCHY,
                  rs.RELATEDPROGRAMS_ID,
                  rm.id,
                  rm.RELTYPE,
                  rm.RELATEDPROGRAM_TEXT
           FROM   relatedprograms rs, relatedprogram rm
          WHERE   rs.RELATEDPROGRAMS_ID = rm.RELATEDPROGRAMS_ID
                  AND AWARD_ID = v_id;
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_op_relatedprogeamins` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_op_relatedprogeamins`(
   p_workflowid               integer,
   p_insdel                   integer,
   p_id                    integer,
   p_HIERARCHY                varchar(4000),
   p_RELATEDPROGRAMTEXT       varchar(4000),
   p_RELTYPE                  varchar(4000),
   x_id                    integer,
   x_RELTYPE                varchar(4000),
   x_RELATEDPROGRAMTEXT      varchar(4000)
)
BEGIN
   DECLARE v_id         INTEGER;
   DECLARE v_MODULEID   INTEGER;
   DECLARE v_value      integer;
   DECLARE v_count  integer;
   DECLARE d_count   integer;
 
   SELECT   ID, MODULEID
     INTO   v_id, v_MODULEID
     FROM   sci_workflow
    WHERE   WORKFLOWID = p_workflowid;

if v_moduleid=3
then

   IF p_insdel = 0
   THEN
      SELECT   COUNT(*)
        INTO   v_count
        FROM   relatedprograms
       WHERE   OPPORTUNITY_ID = v_id AND HIERARCHY = p_HIERARCHY;


      IF v_count > 0
      THEN
         SELECT   RELATEDPROGRAMS_ID
           INTO   v_value
           FROM   relatedprograms
          WHERE   OPPORTUNITY_ID = v_id AND HIERARCHY = p_HIERARCHY;
      ELSE
         SELECT   RELATEDPROGRAMSID_SEQ.NEXTVAL INTO v_value FROM DUAL;

         INSERT INTO relatedprograms (
                                         HIERARCHY,
                                         RELATEDPROGRAMS_ID,
                                         OPPORTUNITY_ID
                    )
           VALUES   (p_HIERARCHY, v_value, v_id);
      END IF;

      INSERT INTO relatedprogram (ID,
                                  RELTYPE,
                                  RELATEDPROGRAM_TEXT,
                                  RELATEDPROGRAMS_ID)
        VALUES   (p_id,
                  p_RELTYPE,
                  p_RELATEDPROGRAMTEXT,
                  v_value);

   ELSEIF p_insdel = 1
   THEN
      SELECT   RELATEDPROGRAMS_ID
        INTO   v_value
        FROM   relatedprograms
       WHERE   OPPORTUNITY_ID = v_id AND HIERARCHY = p_HIERARCHY;

      DELETE FROM   relatedprogram
            WHERE       RELATEDPROGRAMS_ID = v_value
                    AND ID = p_id
                    AND RELTYPE = p_RELTYPE
                    AND RELATEDPROGRAM_TEXT = p_RELATEDPROGRAMTEXT;
                    
                    
        select count(*) into d_count from  relatedprogram where  RELATEDPROGRAMS_ID= v_value; 
        
        if d_count=0
        then
        delete from  relatedprograms where  RELATEDPROGRAMS_ID= v_value; 
        end if;       
   ELSEIF p_insdel = 2
   THEN
      SELECT   RELATEDPROGRAMS_ID
        INTO   v_value
        FROM   relatedprograms
       WHERE   OPPORTUNITY_ID = v_id AND HIERARCHY = p_HIERARCHY;

      UPDATE   relatedprogram
         SET   ID = p_id,
               RELTYPE = p_RELTYPE,
               RELATEDPROGRAM_TEXT = p_RELATEDPROGRAMTEXT
       WHERE       RELATEDPROGRAMS_ID = v_value
               AND ID = x_id
               AND RELTYPE = x_RELTYPE
               AND RELATEDPROGRAM_TEXT = x_RELATEDPROGRAMTEXT;
   END IF;

--   OPEN mlist FOR
      SELECT   *
        FROM   relatedprograms
       WHERE   OPPORTUNITY_ID = v_id;

  -- OPEN mdata FOR
      SELECT   rs.HIERARCHY,
               rs.RELATEDPROGRAMS_ID,
               rm.id,
               rm.RELTYPE,
               rm.RELATEDPROGRAM_TEXT
        FROM   relatedprograms rs, relatedprogram rm
       WHERE   rs.RELATEDPROGRAMS_ID = rm.RELATEDPROGRAMS_ID
               AND OPPORTUNITY_ID = v_id;

elseif  v_moduleid=4
then
IF p_insdel = 0
   THEN
      SELECT   COUNT(*)
        INTO   v_count
        FROM   relatedprograms
       WHERE   AWARD_ID = v_id AND HIERARCHY = p_HIERARCHY;


      IF v_count > 0
      THEN
         SELECT   RELATEDPROGRAMS_ID
           INTO   v_value
           FROM   relatedprograms
          WHERE   AWARD_ID = v_id AND HIERARCHY = p_HIERARCHY;
      ELSE
         SELECT   RELATEDPROGRAMSID_SEQ.NEXTVAL INTO v_value FROM DUAL;

         INSERT INTO relatedprograms (
                                         HIERARCHY,
                                         RELATEDPROGRAMS_ID,
                                         AWARD_ID
                    )
           VALUES   (p_HIERARCHY, v_value, v_id);
      END IF;

      INSERT INTO relatedprogram (ID,
                                  RELTYPE,
                                  RELATEDPROGRAM_TEXT,
                                  RELATEDPROGRAMS_ID)
        VALUES   (p_id,
                  p_RELTYPE,
                  p_RELATEDPROGRAMTEXT,
                  v_value);

   ELSEIF p_insdel = 1
   THEN
      SELECT   RELATEDPROGRAMS_ID
        INTO   v_value
        FROM   relatedprograms
       WHERE   AWARD_ID = v_id AND HIERARCHY = p_HIERARCHY;

      DELETE FROM   relatedprogram
            WHERE       RELATEDPROGRAMS_ID = v_value
                    AND ID = p_id
                    AND RELTYPE = p_RELTYPE
                    AND RELATEDPROGRAM_TEXT = p_RELATEDPROGRAMTEXT;
                    
                    
        select count(*) into d_count from  relatedprogram where  RELATEDPROGRAMS_ID= v_value; 
        
        if d_count=0
        then
        delete from  relatedprograms where  RELATEDPROGRAMS_ID= v_value; 
        end if;       
   ELSEIF p_insdel = 2
   THEN
      SELECT   RELATEDPROGRAMS_ID
        INTO   v_value
        FROM   relatedprograms
       WHERE   AWARD_ID = v_id AND HIERARCHY = p_HIERARCHY;

      UPDATE   relatedprogram
         SET   ID = p_id,
               RELTYPE = p_RELTYPE,
               RELATEDPROGRAM_TEXT = p_RELATEDPROGRAMTEXT
       WHERE       RELATEDPROGRAMS_ID = v_value
               AND ID = x_id
               AND RELTYPE = x_RELTYPE
               AND RELATEDPROGRAM_TEXT = x_RELATEDPROGRAMTEXT;
   END IF;

--   OPEN mlist FOR
      SELECT   *
        FROM   relatedprograms
       WHERE   AWARD_ID = v_id;

  -- OPEN mdata FOR
      SELECT   rs.HIERARCHY,
               rs.RELATEDPROGRAMS_ID,
               rm.id,
               rm.RELTYPE,
               rm.RELATEDPROGRAM_TEXT
        FROM   relatedprograms rs, relatedprogram rm
       WHERE   rs.RELATEDPROGRAMS_ID = rm.RELATEDPROGRAMS_ID
               AND AWARD_ID = v_id;
        
   end if;            
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_OP_RELORGINS_yy` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_OP_RELORGINS_yy`(
   p_workflowid          INTEGER,
   p_amount              DOUBLE /* DEFAULT NULL */ ,  -- - changes version 4.0 schema
   p_currency            VARCHAR(4000) /* DEFAULT NULL */ ,
   p_insdel              INTEGER,
   p_HIERARCHY           VARCHAR(4000),            -- - can be 'lead' or 'component'
   p_orgdbid             VARCHAR(4000),
   p_RELTYPE             VARCHAR(4000),
   p_relatedorgsid       VARCHAR(4000) /* DEFAULT NULL */  
)
sp_lbl:

BEGIN
	DECLARE v_count                  INTEGER;
	DECLARE v_count2                 INTEGER;
	DECLARE v_count3                 INTEGER;
	DECLARE v_OPPORTUNITYID          INTEGER;
	DECLARE v_value                  INTEGER;
	DECLARE v_counter1               INTEGER  DEFAULT  0;
	DECLARE v_counter                INTEGER  DEFAULT  0;
	DECLARE v_orgcunt                INTEGER;
	DECLARE v_ORG_TEXT               VARCHAR (2000);
	DECLARE v_MODULEID               INTEGER;
	DECLARE l_relatedorgs_count      INTEGER;
	DECLARE v_validation             INTEGER  DEFAULT  0;
	DECLARE l_relatedfunbodies_seq   INTEGER;

	DECLARE v_totalamount            INTEGER;
	DECLARE v_totalcurrency          VARCHAR (200);
	DECLARE v_type                   VARCHAR (20);
	DECLARE v_leadcount              INTEGER  DEFAULT  0;
	DECLARE v_del_amount             INTEGER;

	DECLARE v_lead_currency          VARCHAR (200);
	DECLARE v_lead_amount            INTEGER;

	DECLARE v_leadiszero             INTEGER  DEFAULT  0;
	DECLARE NOT_FOUND INT DEFAULT 0;

	DECLARE CONTINUE HANDLER FOR NOT FOUND SET NOT_FOUND = 1; 
   
	SELECT   ID, MODULEID INTO   v_OPPORTUNITYID, v_MODULEID FROM   sci_workflow WHERE   WORKFLOWID = p_workflowid;

	IF v_moduleid = 3
	THEN
		IF p_insdel = 0
		THEN         
			IF p_HIERARCHY = 'component'
			THEN
				SELECT COUNT(*) INTO   l_relatedorgs_count FROM   relatedorgs
				WHERE   OPPORTUNITY_ID = v_OPPORTUNITYID AND HIERARCHY = 'lead';

				IF l_relatedorgs_count = 0
				THEN
					SET v_validation = 1;
				END IF;
				ELSEIF p_HIERARCHY = 'lead'
				THEN
					SELECT   COUNT(*) INTO   l_relatedorgs_count FROM   relatedorgs
					WHERE   OPPORTUNITY_ID = v_OPPORTUNITYID AND HIERARCHY = 'lead';

					IF l_relatedorgs_count > 0
					THEN
						SET v_validation = 1;
					END IF;
				END IF;
				
                IF v_validation = 0
				THEN
					/*DECLARE i CURSOR FOR SELECT   list FROM table (sci_getcsvtoLIST (p_orgdbid));
					OPEN i;
					FETCH i INTO;
					WHILE NOT_FOUND=0
					DO  */          
						IF p_HIERARCHY = 'lead'
						THEN
							IF v_leadcount > 0
							THEN
								SET v_validation = 1;
								ROLLBACK;
								LEAVE sp_lbl;
							END IF;
							SET v_leadcount = v_leadcount + 1;
						END IF;

						SELECT   RELATEDORGS_SEQ.NEXTVAL INTO v_value FROM DUAL;

						INSERT INTO relatedorgs (
                                           HIERARCHY,
                                           RELATEDORGS_ID,
                                           OPPORTUNITY_ID)
						VALUES   (p_HIERARCHY, v_value, v_OPPORTUNITYID);

/*						
                        SELECT   FUNDINGBODYNAME INTO v_ORG_TEXT FROM (
						SELECT   FUNDINGBODYNAME
						FROM   fundingbody_master
						WHERE  StatusCode <> 45 and  FUNDINGBODY_ID = (
						SELECT FUNDINGBODY_ID FROM fundingbody WHERE ORGDBID = i.list)
                UNION   
						SELECT  vendor_fundingbody_name FUNDINGBODYNAME
						FROM   sci_related_orgs_vendor where vendor_id = i.list
						) LIMIT 1;

						INSERT INTO org (ORGDBID,
                                RELTYPE,
                                ORG_TEXT,
                                RELATEDORGS_ID)
						VALUES   (i.list,
							   p_RELTYPE,
							   v_ORG_TEXT,
							   v_value);
				FETCH  INTO;
				END WHILE;
				CLOSE ;*/
				END IF;
			ELSEIF p_insdel = 1
			THEN
				SELECT   HIERARCHY
				INTO   v_type
				FROM   relatedorgs
				WHERE   RELATEDORGS_ID = p_relatedorgsid;

				DELETE FROM   org
				WHERE   RELATEDORGS_ID = p_relatedorgsid;
				
                DELETE FROM   relatedorgs
				WHERE   RELATEDORGS_ID = p_relatedorgsid;               
			END IF;

			SELECT   fb.ORGDBID, FUNDINGBODYNAME
			FROM   fundingbody fb, fundingbody_master fm
			WHERE   fb.FUNDINGBODY_ID = fm.FUNDINGBODY_ID
                  AND IFNULL (STATUSCODE, 1) <> 3
                  AND NOT EXISTS
                        (SELECT   *
                           FROM   org
                          WHERE   RELATEDORGS_ID IN
                                        (SELECT   RELATEDORGS_ID
                                           FROM   relatedorgs
                                          WHERE   OPPORTUNITY_ID =
                                                     v_OPPORTUNITYID)
                                  AND ORGDBID = fb.FUNDINGBODY_ID)
            UNION							
				SELECT vendor_id ORGDBID, vendor_fundingbody_name FUNDINGBODYNAME FROM   sci_related_orgs_vendor;

				SELECT   FUNDINGBODYNAME,
                  rd.HIERARCHY,
                  rd.RELATEDORGS_ID,
                  rd.FUNDINGBODY_ID,
                  o.ORGDBID,
                  o.RELTYPE,
                  (CASE WHEN fm.STATUSCODE = 3 THEN 1 ELSE 0 END) flag
				FROM   relatedorgs rd,
                  org o,
                  fundingbody fb,
                  fundingbody_master fm
				WHERE rd.RELATEDORGS_ID = o.RELATEDORGS_ID
                  AND O.ORGDBID = fb.ORGDBID
                  AND FB.FUNDINGBODY_ID = fm.FUNDINGBODY_ID
                  AND rd.OPPORTUNITY_ID = v_OPPORTUNITYID
                  And fm.StatusCode<>45
			UNION
                 SELECT   vendor_fundingbody_name FUNDINGBODYNAME,
                  rd.HIERARCHY,
                  rd.RELATEDORGS_ID,
                  rd.FUNDINGBODY_ID,
                  o.ORGDBID,
                  o.RELTYPE,
                  0 flag
				FROM   relatedorgs rd,
                  org o,
                  sci_related_orgs_vendor rov
				WHERE  rd.RELATEDORGS_ID = o.RELATEDORGS_ID
					AND O.ORGDBID = rov.vendor_id
					AND rd.OPPORTUNITY_ID =v_OPPORTUNITYID;
                  
		ELSEIF v_moduleid = 4
		THEN
			IF p_insdel = 0
			THEN
				IF p_HIERARCHY = 'component'
				THEN
					SELECT   COUNT(*)
					INTO   l_relatedorgs_count
					FROM   relatedorgs
					WHERE   AWARD_ID = v_OPPORTUNITYID AND HIERARCHY = 'lead';

				IF l_relatedorgs_count = 0
				THEN
					SET v_validation = 1;					
				END IF;
			ELSEIF p_HIERARCHY = 'lead'
			THEN
				SELECT   COUNT(*)
				INTO   l_relatedorgs_count
				FROM   relatedorgs
				WHERE   AWARD_ID = v_OPPORTUNITYID AND HIERARCHY = 'lead';

				IF l_relatedorgs_count > 0
				THEN
					SET v_validation = 1;					
				END IF;
			END IF;
         
			SET v_totalcurrency = NULL;
            
            SELECT   Currency
            INTO   v_totalcurrency
            FROM   TotalAmount ta, instalmentandamount ia
            WHERE   IA.INSTALLMENTANDAMOUNT_ID = TA.INSTALLMENTANDAMOUNT_ID
                     AND IA.AWARD_ID = v_OPPORTUNITYID;            

			SET v_lead_currency = NULL;
			SELECT   FBA.CURRENCY
            INTO   v_lead_currency
            FROM   FUNDINGBODYAMOUNT FBA, RELATEDFUNDINGBODIES RFB
            WHERE   RFB.RELEATEDFUNDINGBODIES_ID =
                        FBA.RELEATEDFUNDINGBODIES_ID
                     AND RFB.AWARD_ID = v_OPPORTUNITYID
                     AND RFB.HIERARCHY = 'lead';
            
			IF v_lead_currency IS NOT NULL
			THEN
				IF p_currency <> v_lead_currency
				THEN
					SET v_validation = 1;
				END IF;
			END IF;

			IF v_validation = 0
			THEN            
				/*DECLARE i CURSOR FOR SELECT   list FROM table (sci_getcsvtoLIST (p_orgdbid));
				OPEN i;
				FETCH i INTO;
				WHILE NOT_FOUND=0
				DO
				IF p_HIERARCHY = 'lead'
				THEN
					IF v_leadcount > 0
					THEN						 
						 SET v_validation = 1;						 
					END IF;

					SET v_leadcount = v_leadcount + 1;
			   END IF;*/

				SELECT   RELATEDORGS_SEQ.NEXTVAL INTO v_value FROM DUAL;

				INSERT INTO relatedorgs (HIERARCHY, RELATEDORGS_ID, AWARD_ID)
				VALUES   (p_HIERARCHY, v_value, v_OPPORTUNITYID);

				/*SELECT   FUNDINGBODYNAME INTO v_ORG_TEXT FROM ( SELECT   FUNDINGBODYNAME
					FROM   fundingbody_master
					WHERE  StatusCode <> 45 and  FUNDINGBODY_ID = (
					SELECT FUNDINGBODY_ID FROM fundingbody WHERE ORGDBID = i.list)
                    
                union  
                
				SELECT  vendor_fundingbody_name FUNDINGBODYNAME
					FROM   sci_related_orgs_vendor where vendor_id = i.list
                ) LIMIT 1;

				INSERT INTO org (ORGDBID,
                                RELTYPE,
                                ORG_TEXT,
                                RELATEDORGS_ID)
                VALUES   (i.list,
                           p_RELTYPE,
                           v_ORG_TEXT,
                           v_value);

				SELECT   relatedfunbodies_seq.NEXTVAL
                 INTO   l_relatedfunbodies_seq
                 FROM   DUAL;

               INSERT INTO relatedFundingBodies (HIERARCHY,
                                                 RELEATEDFUNDINGBODIES_ID,
                                                 AWARD_ID,
                                                 RELATEDORGSSS_ID)
                 VALUES   (p_HIERARCHY,
                           l_relatedfunbodies_seq,
                           v_OPPORTUNITYID,
                           v_value);

				IF p_HIERARCHY = 'lead'
               THEN
                  SELECT   COUNT(*)
                    INTO   v_count2
                    FROM   TotalAmount
                   WHERE   INSTALLMENTANDAMOUNT_ID IN
                                 (SELECT   INSTALLMENTANDAMOUNT_ID
                                    FROM   InstalmentAndAmount
                                   WHERE   Award_id = v_OPPORTUNITYID);

                  IF v_count2 > 0
                  THEN
                     SELECT   amount, currency
                       INTO   v_totalamount, v_totalcurrency
                       FROM   TotalAmount
                      WHERE   INSTALLMENTANDAMOUNT_ID =
                                 (SELECT   INSTALLMENTANDAMOUNT_ID
                                    FROM   InstalmentAndAmount
                                   WHERE   Award_id = v_OPPORTUNITYID);

                     INSERT INTO fundingBodyAmount (
                                                       AMOUNT,
                                                       CURRENCY,
                                                       RELEATEDFUNDINGBODIES_ID
                                )
                       VALUES   (
                                    v_totalamount,
                                    v_totalcurrency,
                                    l_relatedfunbodies_seq
                                );
                  ELSE
                     SET v_validation = 1;                     
                  END IF;
               ELSE
                  SELECT   Amount, Currency
                    INTO   v_totalamount, v_totalcurrency
                    FROM   fundingbodyamount
                   WHERE   RELEATEDFUNDINGBODIES_ID =
                              (SELECT   RELEATEDFUNDINGBODIES_ID
                                 FROM   relatedfundingbodies
                                WHERE   RELATEDORGSSS_ID =
                                           (SELECT   RELATEDORGS_ID
                                              FROM   relatedorgs
                                             WHERE   award_id =
                                                        v_OPPORTUNITYID
                                                     AND hierarchy = 'lead'));

                  IF v_totalamount IS NULL
                  THEN
                     SET v_totalamount = 0;
                  END IF;

                  IF v_totalcurrency IS NULL
                  THEN
                     SET v_totalcurrency = p_currency;

                     IF v_totalcurrency IS NULL
                     THEN
                        SET v_totalcurrency = 'USD';
                     END IF;
                  END IF;

                  IF p_amount IS NOT NULL
                  THEN
                     IF v_totalamount < p_amount
                     THEN
                        SET v_validation = 1;                     
                     ELSE
                        
                        UPDATE   fundingbodyamount
                           SET   Amount = (v_totalamount - p_amount)
                         WHERE   RELEATEDFUNDINGBODIES_ID =
                                    (SELECT   RELEATEDFUNDINGBODIES_ID
                                       FROM   relatedfundingbodies
                                      WHERE   RELATEDORGSSS_ID =
                                                 (SELECT   RELATEDORGS_ID
                                                    FROM   relatedorgs
                                                   WHERE   award_id =
                                                              v_OPPORTUNITYID
                                                           AND hierarchy =
                                                                 'lead'));

                        INSERT INTO fundingBodyAmount (
                                                          AMOUNT,
                                                          CURRENCY,
                                                          RELEATEDFUNDINGBODIES_ID
                                   )
                          VALUES   (
                                       p_amount,
                                       p_currency,
                                       l_relatedfunbodies_seq
                                   );
                     END IF;
                  ELSE                                   
                     INSERT INTO fundingBodyAmount (
                                                       AMOUNT,
                                                       CURRENCY,
                                                       RELEATEDFUNDINGBODIES_ID
                                )
                       VALUES   (0, v_totalcurrency, l_relatedfunbodies_seq);
                  END IF;
               END IF;
            
            FETCH  INTO;
            END WHILE;
            CLOSE ;*/

            SELECT   Amount, Currency
              INTO   v_totalamount, v_totalcurrency      
              FROM   fundingbodyamount
             WHERE   RELEATEDFUNDINGBODIES_ID =
                        (SELECT   RELEATEDFUNDINGBODIES_ID
                           FROM   relatedfundingbodies
                          WHERE   RELATEDORGSSS_ID =
                                     (SELECT   RELATEDORGS_ID
                                        FROM   relatedorgs
                                       WHERE   award_id = v_OPPORTUNITYID
                                               AND hierarchy = 'lead'));

            IF v_totalamount < 1
            THEN
               SET v_leadiszero = 1;
            END IF;
         END IF;
      
      ELSEIF p_insdel = 1
      THEN                                                           
                  
         SELECT   HIERARCHY
           INTO   v_type
           FROM   relatedorgs
          WHERE   RELATEDORGS_ID = p_relatedorgsid;
         
         SELECT   AMOUNT
           INTO   v_del_amount
           FROM   fundingBodyAmount
          WHERE   RELEATEDFUNDINGBODIES_ID =
                     (SELECT   RELEATEDFUNDINGBODIES_ID
                        FROM   relatedFundingBodies
                       WHERE   RELATEDORGSSS_ID = p_relatedorgsid);

         UPDATE   fundingbodyamount
            SET   Amount = (Amount + v_del_amount)
          WHERE   RELEATEDFUNDINGBODIES_ID =
                     (SELECT   RELEATEDFUNDINGBODIES_ID
                        FROM   relatedfundingbodies
                       WHERE   RELATEDORGSSS_ID =
                                  (SELECT   RELATEDORGS_ID
                                     FROM   relatedorgs
                                    WHERE   award_id = v_OPPORTUNITYID
                                            AND hierarchy = 'lead'));

         DELETE FROM   org
               WHERE   RELATEDORGS_ID = p_relatedorgsid;

         DELETE FROM  relatedFundingBodies
          WHERE   RELATEDORGSSS_ID = p_relatedorgsid;
      
         DELETE FROM   relatedorgs
               WHERE   RELATEDORGS_ID = p_relatedorgsid;

         DELETE FROM  fundingBodyAmount
          WHERE   RELEATEDFUNDINGBODIES_ID IN
                        (SELECT   RELEATEDFUNDINGBODIES_ID
                           FROM   relatedFundingBodies
                          WHERE   RELATEDORGSSS_ID = p_relatedorgsid);
      ELSEIF p_insdel = 2
      THEN
         IF p_relatedorgsid IS NULL
         THEN
            SET v_validation = 1;            
         END IF;

         IF p_HIERARCHY = 'lead'
         THEN
            SET v_validation = 1;            
         END IF;

         SELECT   HIERARCHY
           INTO   v_type
           FROM   relatedorgs
          WHERE   RELATEDORGS_ID = p_relatedorgsid;

         IF v_type = 'lead'
         THEN
            SET v_validation = 1;            
         END IF;

               SET v_totalcurrency = NULL;
            SELECT   Currency
              INTO   v_totalcurrency
              FROM   TotalAmount ta, instalmentandamount ia
             WHERE   IA.INSTALLMENTANDAMOUNT_ID = TA.INSTALLMENTANDAMOUNT_ID
                     AND IA.AWARD_ID = v_OPPORTUNITYID;
        
         
               SET v_lead_currency = NULL;
            SELECT   FBA.CURRENCY
              INTO   v_lead_currency
              FROM   FUNDINGBODYAMOUNT FBA, RELATEDFUNDINGBODIES RFB
             WHERE   RFB.RELEATEDFUNDINGBODIES_ID =
                        FBA.RELEATEDFUNDINGBODIES_ID
                     AND RFB.AWARD_ID = v_OPPORTUNITYID
                     AND RFB.HIERARCHY = 'lead';                 

         IF v_lead_currency IS NOT NULL
         THEN
            IF p_currency <> v_lead_currency
            THEN
               SET v_validation = 1;
            END IF;
         END IF;

         IF v_validation = 0
         THEN
            IF CHAR_LENGTH (LTRIM (RTRIM (p_RELTYPE))) > 0
            THEN
               /*DECLARE i CURSOR
               FOR SELECT   list FROM table (sci_getcsvtoLIST (p_orgdbid));
               OPEN i;
               FETCH i INTO;
               WHILE NOT_FOUND=0
               DO                 
                                              
            SELECT   FUNDINGBODYNAME INTO v_ORG_TEXT FROM (
               SELECT   FUNDINGBODYNAME
                 FROM   fundingbody_master
                WHERE  StatusCode <> 45 and  FUNDINGBODY_ID = (
                  SELECT FUNDINGBODY_ID FROM fundingbody WHERE ORGDBID = i.list)
                union  
                SELECT  vendor_fundingbody_name FUNDINGBODYNAME
                FROM   sci_related_orgs_vendor where vendor_id = i.list
                ) LIMIT 1;

                  IF CHAR_LENGTH (LTRIM (RTRIM (v_ORG_TEXT))) > 0
                  THEN
                     SELECT   COUNT(*)
                       INTO   v_count2
                       FROM   ORG
                      WHERE   RELATEDORGS_ID = p_relatedorgsid
                              AND ORGDBID = i.list;

                     IF v_count2 > 0
                     THEN
                        UPDATE   ORG
                           SET   RELTYPE = p_RELTYPE, ORG_TEXT = v_ORG_TEXT
                         WHERE   RELATEDORGS_ID = p_relatedorgsid
                                 AND ORGDBID = i.list;                     
                     ELSE                        
                        SET v_validation = 1;                        
                     END IF;
                  END IF;*/

                  SELECT   AMOUNT
                    INTO   v_del_amount
                    FROM   fundingBodyAmount
                   WHERE   RELEATEDFUNDINGBODIES_ID =
                              (SELECT   RELEATEDFUNDINGBODIES_ID
                                 FROM   relatedFundingBodies
                                WHERE   RELATEDORGSSS_ID = p_relatedorgsid);

                  IF v_del_amount IS NOT NULL
                  THEN
                     SET v_del_amount = p_amount - v_del_amount;      
                  ELSE
                     SET v_del_amount = p_amount;
                  END IF;
                  
                  SELECT   Amount
                    INTO   v_lead_amount
                    FROM   fundingbodyamount
                   WHERE   RELEATEDFUNDINGBODIES_ID =
                              (SELECT   RELEATEDFUNDINGBODIES_ID
                                 FROM   relatedfundingbodies
                                WHERE   RELATEDORGSSS_ID =
                                           (SELECT   RELATEDORGS_ID
                                              FROM   relatedorgs
                                             WHERE   award_id =
                                                        v_OPPORTUNITYID
                                                     AND hierarchy = 'lead'));

                  IF v_del_amount > v_lead_amount
                  THEN
                     SET v_validation = 1;					
                  END IF;

                  IF v_validation = 0
                  THEN
                     
                           SET l_relatedfunbodies_seq = NULL;
                       
                        SELECT   RELEATEDFUNDINGBODIES_ID
                          INTO   l_relatedfunbodies_seq
                          FROM   RELATEDFUNDINGBODIES
                         WHERE   RELATEDORGSSS_ID = p_relatedorgsid;
                     
                     IF l_relatedfunbodies_seq IS NULL
                     THEN
                        SELECT   relatedfunbodies_seq.NEXTVAL
                          INTO   l_relatedfunbodies_seq
                          FROM   DUAL;

                        INSERT INTO relatedFundingBodies (
                                                             HIERARCHY,
                                                             RELEATEDFUNDINGBODIES_ID,
                                                             AWARD_ID,
                                                             RELATEDORGSSS_ID
                                   )
                          VALUES   (p_HIERARCHY,
                                    l_relatedfunbodies_seq,
                                    v_OPPORTUNITYID,
                                    p_relatedorgsid);
                     END IF;

                     SET v_lead_amount = v_lead_amount - v_del_amount;

                     UPDATE   fundingbodyamount
                        SET   Amount = v_lead_amount
                      WHERE   RELEATEDFUNDINGBODIES_ID =
                                 (SELECT   RELEATEDFUNDINGBODIES_ID
                                    FROM   relatedfundingbodies
                                   WHERE   RELATEDORGSSS_ID =
                                              (SELECT   RELATEDORGS_ID
                                                 FROM   relatedorgs
                                                WHERE   award_id =
                                                           v_OPPORTUNITYID
                                                        AND hierarchy =
                                                              'lead'));
                     
                     SELECT   COUNT(*)
                       INTO   v_count2
                       FROM   fundingBodyAmount
                      WHERE   RELEATEDFUNDINGBODIES_ID =
                                 l_relatedfunbodies_seq;

                     IF v_count2 > 0
                     THEN
                        UPDATE   fundingBodyAmount
                           SET   AMOUNT = p_amount, CURRENCY = p_currency
                         WHERE   RELEATEDFUNDINGBODIES_ID =
                                    l_relatedfunbodies_seq;
                     ELSE
                        INSERT INTO fundingBodyAmount (
                                                          AMOUNT,
                                                          CURRENCY,
                                                          RELEATEDFUNDINGBODIES_ID
                                   )
                          VALUES   (
                                       p_amount,
                                       p_currency,
                                       l_relatedfunbodies_seq
                                   );
                     END IF;
                  END IF;
               /*FETCH  INTO;
               END WHILE;
               CLOSE ;*/
            END IF;
            
            SELECT   Amount, Currency
              INTO   v_totalamount, v_totalcurrency
              FROM   fundingbodyamount
             WHERE   RELEATEDFUNDINGBODIES_ID =
                        (SELECT   RELEATEDFUNDINGBODIES_ID
                           FROM   relatedfundingbodies
                          WHERE   RELATEDORGSSS_ID =
                                     (SELECT   RELATEDORGS_ID
                                        FROM   relatedorgs
                                       WHERE   award_id = v_OPPORTUNITYID
                                               AND hierarchy = 'lead'));

            IF v_totalamount < 1
            THEN
               SET v_leadiszero = 1;
            END IF;
         END IF;                                            
      
      END IF;

         SELECT   fb.ORGDBID, FUNDINGBODYNAME
           FROM   fundingbody fb, fundingbody_master fm
          WHERE   fb.FUNDINGBODY_ID = fm.FUNDINGBODY_ID
                  AND IFNULL (STATUSCODE, 1) <> 3
                  AND NOT EXISTS
                        (SELECT   *
                           FROM   org
                          WHERE   RELATEDORGS_ID IN
                                        (SELECT   RELATEDORGS_ID
                                           FROM   relatedorgs
                                          WHERE   AWARD_ID = v_OPPORTUNITYID)
                                  AND ORGDBID = fb.FUNDINGBODY_ID);

         SELECT   FUNDINGBODYNAME,
                  rd.HIERARCHY,
                  rd.RELATEDORGS_ID,
                  rd.FUNDINGBODY_ID,
                  o.ORGDBID,
                  o.RELTYPE,
                  FBA.AMOUNT,          -- - ADDED FOR VERSION 4.0 ON 7-JUN-2018
                  FBA.CURRENCY,        -- - ADDED FOR VERSION 4.0 ON 7-JUN-2018
                  (CASE WHEN fm.STATUSCODE = 3 THEN 1 ELSE 0 END) flag
           FROM   relatedorgs rd,
                  org o,
                  fundingbody fb,
                  fundingbody_master fm,
                  relatedFundingBodies RFB 
                  LEFT JOIN fundingBodyAmount FBA
                  ON FBA.RELEATEDFUNDINGBODIES_ID = RFB.RELEATEDFUNDINGBODIES_ID
          WHERE       rd.RELATEDORGS_ID = o.RELATEDORGS_ID
                  AND O.ORGDBID = fb.ORGDBID
                  AND FB.FUNDINGBODY_ID = fm.FUNDINGBODY_ID                  
                  AND RFB.RELATEDORGSSS_ID = RD.RELATEDORGS_ID
                  AND rd.AWARD_ID = v_OPPORTUNITYID;
   END IF;   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_ORGNELIGIBILITYY_DML_23MAY` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_ORGNELIGIBILITYY_DML_23MAY`(
P_WORKFLOWID                         INTEGER,
   P_NOT_SPECIFIED                      VARCHAR(4000) /* DEFAULT NULL */ ,
   P_ACADEMIC                           VARCHAR(4000) /* DEFAULT NULL */ ,
   P_COMMERCIAL                         VARCHAR(4000) /* DEFAULT NULL */ ,
   P_GOVERNMENT                         VARCHAR(4000) /* DEFAULT NULL */ ,
   P_NONPROFIT                          VARCHAR(4000) /* DEFAULT NULL */ ,
   P_SME                                VARCHAR(4000) /* DEFAULT NULL */ ,
   P_NORESTRICTION                      VARCHAR(4000) /* DEFAULT NULL */ ,
   P_CITY                               VARCHAR(4000) /* DEFAULT NULL */ ,
   P_STATE                              VARCHAR(4000) /* DEFAULT NULL */ ,
   P_COUNTRY                            VARCHAR(4000) /* DEFAULT NULL */ ,
   P_REGIONSPECIFIC_TEXT                VARCHAR(4000) /* DEFAULT NULL */ ,
   P_CITIZENSHIP_TEXT                   VARCHAR(4000) /* DEFAULT NULL */ ,
   P_ELIGIBILITYCLASSIFICATION_ID       INTEGER  /* DEFAULT NULL */ ,
   P_ORGANIZATIONELIGIBILITY_ID         INTEGER  /* DEFAULT NULL */ ,
   p_lang                               VARCHAR(4000) /* DEFAULT NULL */ ,
   P_MODE                               INTEGER              -- -*0 FOR INSERT
)
sp_lbl:

BEGIN
    DECLARE V_ID                             INTEGER;
   DECLARE V_TRANSITIONALID                 INTEGER;
   DECLARE V_MODULEID                       INTEGER;
   DECLARE V_TASKID                         INTEGER;
   DECLARE V_CYCLE                          INTEGER;
   DECLARE V_FUNDINGBODY_ID                 INTEGER;
   DECLARE V_COUNT                          INTEGER;
   DECLARE L_ELIGCLASSIFICATION_SEQ         INTEGER;
   DECLARE L_COUNT                          INTEGER;
   DECLARE L_ORGANIZATIONELIGIBILITY_SEQ    INTEGER;
   DECLARE L_ELIGIBILITYCLASSIFICATION_ID   INTEGER;
   DECLARE L_ORGANIZATION_ELIG              INTEGER  DEFAULT  0;
   DECLARE L_ORGANIZATIONELIGIBILITY_ID     INTEGER;
   DECLARE L_REGION_CNT                     INTEGER;
   DECLARE V_COUNTRY                        VARCHAR(500);

   SELECT   ID,
            MODULEID,
            TASKID,
            CYCLE
     INTO   V_ID,
            V_MODULEID,
            V_TASKID,
            V_CYCLE
     FROM   SCI_WORKFLOW
    WHERE   WORKFLOWID = P_WORKFLOWID;

   IF V_MODULEID = 3 AND P_MODE = 0
   THEN
     
      SELECT   ELIGIBILITYCLASSIFICATION_SEQ.NEXTVAL
        INTO   L_ELIGCLASSIFICATION_SEQ
        FROM   DUAL;

      INSERT INTO ELIGIBILITYCLASSIFICATION (
                                                ELIGIBILITYCLASSIFICATION_ID,
                                                OPPORTUNITY_ID,lang
                 )
        VALUES   (L_ELIGCLASSIFICATION_SEQ, V_ID,p_lang);

      SELECT   ORGANIZATIONELIGIBILITY_SEQ.NEXTVAL
        INTO   L_ORGANIZATIONELIGIBILITY_SEQ
        FROM   DUAL;


      INSERT INTO ORGANIZATIONELIGIBILITY (NOT_SPECIFIED,
                                           ACADEMIC,
                                           COMMERCIAL,
                                           GOVERNMENT,
                                           NONPROFIT,
                                           SME,
                                           ORGANIZATIONELIGIBILITY_ID,
                                           ELIGIBILITYCLASSIFICATION_ID)
        VALUES   (P_NOT_SPECIFIED,
                  P_ACADEMIC,
                  P_COMMERCIAL,
                  P_GOVERNMENT,
                  P_NONPROFIT,
                  P_SME,
                  L_ORGANIZATIONELIGIBILITY_SEQ,
                  L_ELIGCLASSIFICATION_SEQ);
  
         INSERT INTO REGIONSPECIFIC (NORESTRICTION,
                                     CITY,
                                     STATE,
                                     COUNTRY,
                                     REGIONSPECIFIC_TEXT,
                                     ORGANIZATIONELIGIBILITY_ID)
           VALUES   (P_NORESTRICTION,
                     P_CITY,
                     P_STATE,
                     P_COUNTRY,
                     P_REGIONSPECIFIC_TEXT,
                     L_ORGANIZATIONELIGIBILITY_SEQ);
   
   ELSEIF V_MODULEID = 3 AND P_MODE = 1                        -- --------UPDATE
   THEN
      UPDATE   ORGANIZATIONELIGIBILITY
         SET   NOT_SPECIFIED = P_NOT_SPECIFIED,
               ACADEMIC = P_ACADEMIC,
               COMMERCIAL = P_COMMERCIAL,
               GOVERNMENT = P_GOVERNMENT,
               NONPROFIT = P_NONPROFIT,
               SME = P_SME
       WHERE   ELIGIBILITYCLASSIFICATION_ID = P_ELIGIBILITYCLASSIFICATION_ID
               AND ORGANIZATIONELIGIBILITY_ID = P_ORGANIZATIONELIGIBILITY_ID;


      SELECT   COUNT( * )
        INTO   L_REGION_CNT
        FROM   REGIONSPECIFIC
       WHERE   ORGANIZATIONELIGIBILITY_ID = P_ORGANIZATIONELIGIBILITY_ID;

      IF L_REGION_CNT > 0
      THEN
         IF P_COUNTRY <> '0' THEN
           UPDATE   REGIONSPECIFIC
              SET   NORESTRICTION = P_NORESTRICTION,
                    CITY = P_CITY,
                    STATE = P_STATE,
                    COUNTRY = P_COUNTRY,
                    REGIONSPECIFIC_TEXT = P_REGIONSPECIFIC_TEXT
           WHERE    ORGANIZATIONELIGIBILITY_ID = P_ORGANIZATIONELIGIBILITY_ID;
         ELSE
           UPDATE   REGIONSPECIFIC
              SET   NORESTRICTION = P_NORESTRICTION,
                    CITY = P_CITY,
                    STATE = P_STATE,
                    -- COUNTRY = P_COUNTRY,
                    REGIONSPECIFIC_TEXT = P_REGIONSPECIFIC_TEXT
           WHERE    ORGANIZATIONELIGIBILITY_ID = P_ORGANIZATIONELIGIBILITY_ID;
         END IF;
      
      ELSEIF L_REGION_CNT = 0-- AND P_COUNTRY IS NOT NULL      --if condation is comment on 25 oct 2018 now values will be inserted in all case
      THEN
         INSERT INTO REGIONSPECIFIC (NORESTRICTION,
                                     CITY,
                                     STATE,
                                     COUNTRY,
                                     REGIONSPECIFIC_TEXT,
                                     ORGANIZATIONELIGIBILITY_ID)
           VALUES   (P_NORESTRICTION,
                     P_CITY,
                     P_STATE,
                     P_COUNTRY,
                     P_REGIONSPECIFIC_TEXT,
                     P_ORGANIZATIONELIGIBILITY_ID);
      END IF;
   ELSEIF V_MODULEID = 3 AND P_MODE = 2                        -- --------DELETE
   THEN
      DELETE  FROM REGIONSPECIFIC
       WHERE   ORGANIZATIONELIGIBILITY_ID = P_ORGANIZATIONELIGIBILITY_ID;


      DELETE  FROM ORGANIZATIONELIGIBILITY
       WHERE   ELIGIBILITYCLASSIFICATION_ID = P_ELIGIBILITYCLASSIFICATION_ID
               AND ORGANIZATIONELIGIBILITY_ID = P_ORGANIZATIONELIGIBILITY_ID;

      DELETE  FROM ELIGIBILITYCLASSIFICATION
       WHERE   ELIGIBILITYCLASSIFICATION_ID = P_ELIGIBILITYCLASSIFICATION_ID;
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_ORGNELIGIBILITYY_DML_25APR` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_ORGNELIGIBILITYY_DML_25APR`(
 P_WORKFLOWID                         INTEGER,
   P_NOT_SPECIFIED                      VARCHAR(4000) /* DEFAULT NULL */ ,
   P_ACADEMIC                           VARCHAR(4000) /* DEFAULT NULL */ ,
   P_COMMERCIAL                         VARCHAR(4000) /* DEFAULT NULL */ ,
   P_GOVERNMENT                         VARCHAR(4000) /* DEFAULT NULL */ ,
   P_NONPROFIT                          VARCHAR(4000) /* DEFAULT NULL */ ,
   P_SME                                VARCHAR(4000) /* DEFAULT NULL */ ,
   P_NORESTRICTION                      VARCHAR(4000) /* DEFAULT NULL */ ,
   P_CITY                               VARCHAR(4000) /* DEFAULT NULL */ ,
   P_STATE                              VARCHAR(4000) /* DEFAULT NULL */ ,
   P_COUNTRY                            VARCHAR(4000) /* DEFAULT NULL */ ,
   P_REGIONSPECIFIC_TEXT                VARCHAR(4000) /* DEFAULT NULL */ ,
   P_CITIZENSHIP_TEXT                   VARCHAR(4000) /* DEFAULT NULL */ ,
   P_ELIGIBILITYCLASSIFICATION_ID       INTEGER /* DEFAULT NULL */ ,
   P_ORGANIZATIONELIGIBILITY_ID         INTEGER /* DEFAULT NULL */ ,
   p_lang                                VARCHAR(4000) /* DEFAULT NULL */ ,
   P_MODE                               INTEGER             -- -*0 FOR INSERT
)
BEGIN
  DECLARE V_ID                             INTEGER;
   DECLARE V_TRANSITIONALID                 INTEGER;
   DECLARE V_MODULEID                       INTEGER;
   DECLARE V_TASKID                         INTEGER;
   DECLARE V_CYCLE                          INTEGER;
   DECLARE V_FUNDINGBODY_ID                 INTEGER;
   DECLARE V_COUNT                          INTEGER;
   DECLARE L_ELIGCLASSIFICATION_SEQ         INTEGER;
   DECLARE L_COUNT                          INTEGER;
   DECLARE L_ORGANIZATIONELIGIBILITY_SEQ    INTEGER;
   DECLARE L_ELIGIBILITYCLASSIFICATION_ID   INTEGER;
   DECLARE L_ORGANIZATION_ELIG              INTEGER  DEFAULT  0;
   DECLARE L_ORGANIZATIONELIGIBILITY_ID     INTEGER;
   DECLARE L_REGION_CNT                     INTEGER;
   DECLARE V_COUNTRY                        VARCHAR(500);

   SELECT   ID,
            MODULEID,
            TASKID,
            CYCLE
     INTO   V_ID,
            V_MODULEID,
            V_TASKID,
            V_CYCLE
     FROM   SCI_WORKFLOW
    WHERE   WORKFLOWID = P_WORKFLOWID;

   IF V_MODULEID = 3 AND P_MODE = 0
   THEN
 
      SELECT   ELIGIBILITYCLASSIFICATION_SEQ.NEXTVAL
        INTO   L_ELIGCLASSIFICATION_SEQ
        FROM   DUAL;

      INSERT INTO ELIGIBILITYCLASSIFICATION (
                                                ELIGIBILITYCLASSIFICATION_ID,
                                                OPPORTUNITY_ID,lang
                 )
        VALUES   (L_ELIGCLASSIFICATION_SEQ, V_ID,p_lang);

      SELECT   ORGANIZATIONELIGIBILITY_SEQ.NEXTVAL
        INTO   L_ORGANIZATIONELIGIBILITY_SEQ
        FROM   DUAL;


      INSERT INTO ORGANIZATIONELIGIBILITY (NOT_SPECIFIED,
                                           ACADEMIC,
                                           COMMERCIAL,
                                           GOVERNMENT,
                                           NONPROFIT,
                                           SME,
                                           ORGANIZATIONELIGIBILITY_ID,
                                           ELIGIBILITYCLASSIFICATION_ID)
        VALUES   (P_NOT_SPECIFIED,
                  P_ACADEMIC,
                  P_COMMERCIAL,
                  P_GOVERNMENT,
                  P_NONPROFIT,
                  P_SME,
                  L_ORGANIZATIONELIGIBILITY_SEQ,
                  L_ELIGCLASSIFICATION_SEQ);

 
         INSERT INTO REGIONSPECIFIC (NORESTRICTION,
                                     CITY,
                                     STATE,
                                     COUNTRY,
                                     REGIONSPECIFIC_TEXT,
                                     ORGANIZATIONELIGIBILITY_ID)
           VALUES   (P_NORESTRICTION,
                     P_CITY,
                     P_STATE,
                     P_COUNTRY,
                     P_REGIONSPECIFIC_TEXT,
                     L_ORGANIZATIONELIGIBILITY_SEQ);
    
   ELSEIF V_MODULEID = 3 AND P_MODE = 1                        -- --------UPDATE
   THEN
      UPDATE   ORGANIZATIONELIGIBILITY
         SET   NOT_SPECIFIED = P_NOT_SPECIFIED,
               ACADEMIC = P_ACADEMIC,
               COMMERCIAL = P_COMMERCIAL,
               GOVERNMENT = P_GOVERNMENT,
               NONPROFIT = P_NONPROFIT,
               SME = P_SME
       WHERE   ELIGIBILITYCLASSIFICATION_ID = P_ELIGIBILITYCLASSIFICATION_ID
               AND ORGANIZATIONELIGIBILITY_ID = P_ORGANIZATIONELIGIBILITY_ID;


      SELECT   COUNT( * )
        INTO   L_REGION_CNT
        FROM   REGIONSPECIFIC
       WHERE   ORGANIZATIONELIGIBILITY_ID = P_ORGANIZATIONELIGIBILITY_ID;

      IF L_REGION_CNT > 0
      THEN
         UPDATE   REGIONSPECIFIC
            SET   NORESTRICTION = P_NORESTRICTION,
                  CITY = P_CITY,
                  STATE = P_STATE,
                  COUNTRY = P_COUNTRY,
                  REGIONSPECIFIC_TEXT = P_REGIONSPECIFIC_TEXT
          WHERE   ORGANIZATIONELIGIBILITY_ID = P_ORGANIZATIONELIGIBILITY_ID;
      ELSEIF L_REGION_CNT = 0-- AND P_COUNTRY IS NOT NULL      --if condation is comment on 25 oct 2018 now values will be inserted in all case
      THEN
         INSERT INTO REGIONSPECIFIC (NORESTRICTION,
                                     CITY,
                                     STATE,
                                     COUNTRY,
                                     REGIONSPECIFIC_TEXT,
                                     ORGANIZATIONELIGIBILITY_ID)
           VALUES   (P_NORESTRICTION,
                     P_CITY,
                     P_STATE,
                     P_COUNTRY,
                     P_REGIONSPECIFIC_TEXT,
                     P_ORGANIZATIONELIGIBILITY_ID);
      END IF;
   ELSEIF V_MODULEID = 3 AND P_MODE = 2                        -- --------DELETE
   THEN
      DELETE FROM  REGIONSPECIFIC
       WHERE   ORGANIZATIONELIGIBILITY_ID = P_ORGANIZATIONELIGIBILITY_ID;


      DELETE FROM  ORGANIZATIONELIGIBILITY
       WHERE   ELIGIBILITYCLASSIFICATION_ID = P_ELIGIBILITYCLASSIFICATION_ID
               AND ORGANIZATIONELIGIBILITY_ID = P_ORGANIZATIONELIGIBILITY_ID;

      DELETE  FROM ELIGIBILITYCLASSIFICATION
       WHERE   ELIGIBILITYCLASSIFICATION_ID = P_ELIGIBILITYCLASSIFICATION_ID;
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_ORGNELIGIBILITYY_DML_S` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_ORGNELIGIBILITYY_DML_S`(
P_DELETEGROUPID                      INTEGER /* DEFAULT NULL */ ,
   P_WORKFLOWID                         INTEGER,
   P_NOT_SPECIFIED                      VARCHAR(4000) /* DEFAULT NULL */ ,
   P_ACADEMIC                           VARCHAR(4000) /* DEFAULT NULL */ ,
   P_COMMERCIAL                         VARCHAR(4000) /* DEFAULT NULL */ ,
   P_GOVERNMENT                         VARCHAR(4000) /* DEFAULT NULL */ ,
   P_NONPROFIT                          VARCHAR(4000) /* DEFAULT NULL */ ,
   P_SME                                VARCHAR(4000) /* DEFAULT NULL */ ,
   P_NORESTRICTION                      VARCHAR(4000) /* DEFAULT NULL */ ,
   P_CITY                               VARCHAR(4000) /* DEFAULT NULL */ ,
   P_STATE                              VARCHAR(4000) /* DEFAULT NULL */ ,
   P_COUNTRY                            VARCHAR(4000) /* DEFAULT NULL */ ,
   P_REGIONSPECIFIC_TEXT                VARCHAR(4000) /* DEFAULT NULL */ ,
   P_CITIZENSHIP_TEXT                   VARCHAR(4000) /* DEFAULT NULL */ ,
   P_ELIGIBILITYCLASSIFICATION_ID       INTEGER /* DEFAULT NULL */ ,
   P_ORGANIZATIONELIGIBILITY_ID         INTEGER /* DEFAULT NULL */ ,
   p_lang                                VARCHAR(4000) /* DEFAULT NULL */ ,
   P_MODE                               INTEGER             -- -*0 FOR INSERT
)
sp_lbl:

BEGIN
     DECLARE V_ID                             INTEGER;
   DECLARE V_TRANSITIONALID                 INTEGER;
   DECLARE V_MODULEID                       INTEGER;
   DECLARE V_TASKID                         INTEGER;
   DECLARE V_CYCLE                          INTEGER;
   DECLARE V_FUNDINGBODY_ID                 INTEGER;
   DECLARE V_COUNT                          INTEGER;
   DECLARE L_ELIGCLASSIFICATION_SEQ         INTEGER;
   DECLARE L_COUNT                          INTEGER;
   DECLARE L_ORGANIZATIONELIGIBILITY_SEQ    INTEGER;
   DECLARE L_ELIGIBILITYCLASSIFICATION_ID   INTEGER;
   DECLARE L_ORGANIZATION_ELIG              INTEGER  DEFAULT  0;
   DECLARE L_ORGANIZATIONELIGIBILITY_ID     INTEGER;
   DECLARE L_REGION_CNT                     INTEGER;
   DECLARE V_COUNTRY                        VARCHAR(500);
DECLARE NOT_FOUND INT DEFAULT 0;  

   IF V_MODULEID = 3 AND P_MODE = 0
   THEN
  
      SELECT   ELIGIBILITYCLASSIFICATION_SEQ.NEXTVAL
        INTO   L_ELIGCLASSIFICATION_SEQ
        FROM   DUAL;

      INSERT INTO ELIGIBILITYCLASSIFICATION (
                                                ELIGIBILITYCLASSIFICATION_ID,
                                                OPPORTUNITY_ID,lang
                 )
        VALUES   (L_ELIGCLASSIFICATION_SEQ, V_ID,p_lang);

      SELECT   ORGANIZATIONELIGIBILITY_SEQ.NEXTVAL
        INTO   L_ORGANIZATIONELIGIBILITY_SEQ
        FROM   DUAL;


      INSERT INTO ORGANIZATIONELIGIBILITY (NOT_SPECIFIED,
                                           ACADEMIC,
                                           COMMERCIAL,
                                           GOVERNMENT,
                                           NONPROFIT,
                                           SME,
                                           ORGANIZATIONELIGIBILITY_ID,
                                           ELIGIBILITYCLASSIFICATION_ID)
        VALUES   (P_NOT_SPECIFIED,
                  P_ACADEMIC,
                  P_COMMERCIAL,
                  P_GOVERNMENT,
                  P_NONPROFIT,
                  P_SME,
                  L_ORGANIZATIONELIGIBILITY_SEQ,
                  L_ELIGCLASSIFICATION_SEQ);

         INSERT INTO REGIONSPECIFIC (NORESTRICTION,
                                     CITY,
                                     STATE,
                                     COUNTRY,
                                     REGIONSPECIFIC_TEXT,
                                     ORGANIZATIONELIGIBILITY_ID)
           VALUES   (P_NORESTRICTION,
                     P_CITY,
                     P_STATE,
                     P_COUNTRY,
                     P_REGIONSPECIFIC_TEXT,
                     L_ORGANIZATIONELIGIBILITY_SEQ);
   
   ELSEIF V_MODULEID = 3 AND P_MODE = 1                        -- --------UPDATE
   THEN
      UPDATE   ORGANIZATIONELIGIBILITY
         SET   NOT_SPECIFIED = P_NOT_SPECIFIED,
               ACADEMIC = P_ACADEMIC,
               COMMERCIAL = P_COMMERCIAL,
               GOVERNMENT = P_GOVERNMENT,
               NONPROFIT = P_NONPROFIT,
               SME = P_SME
       WHERE   ELIGIBILITYCLASSIFICATION_ID = P_ELIGIBILITYCLASSIFICATION_ID
               AND ORGANIZATIONELIGIBILITY_ID = P_ORGANIZATIONELIGIBILITY_ID;


      SELECT   COUNT( * )
        INTO   L_REGION_CNT
        FROM   REGIONSPECIFIC
       WHERE   ORGANIZATIONELIGIBILITY_ID = P_ORGANIZATIONELIGIBILITY_ID;

      IF L_REGION_CNT > 0
      THEN
         UPDATE   REGIONSPECIFIC
            SET   NORESTRICTION = P_NORESTRICTION,
                  CITY = P_CITY,
                  STATE = P_STATE,
                  COUNTRY = P_COUNTRY,
                  REGIONSPECIFIC_TEXT = P_REGIONSPECIFIC_TEXT
          WHERE   ORGANIZATIONELIGIBILITY_ID = P_ORGANIZATIONELIGIBILITY_ID;
      ELSEIF L_REGION_CNT = 0-- AND P_COUNTRY IS NOT NULL      --if condation is comment on 25 oct 2018 now values will be inserted in all case
      THEN
         INSERT INTO REGIONSPECIFIC (NORESTRICTION,
                                     CITY,
                                     STATE,
                                     COUNTRY,
                                     REGIONSPECIFIC_TEXT,
                                     ORGANIZATIONELIGIBILITY_ID)
           VALUES   (P_NORESTRICTION,
                     P_CITY,
                     P_STATE,
                     P_COUNTRY,
                     P_REGIONSPECIFIC_TEXT,
                     P_ORGANIZATIONELIGIBILITY_ID);
      END IF;
           
      
   ELSEIF V_MODULEID = 3 AND P_MODE = 2              -- --------DELETE
   THEN
      IF P_DELETEGROUPID IS NULL THEN
        DELETE FROM  REGIONSPECIFIC
          WHERE   ORGANIZATIONELIGIBILITY_ID = P_ORGANIZATIONELIGIBILITY_ID;


        DELETE FROM  ORGANIZATIONELIGIBILITY
          WHERE   ELIGIBILITYCLASSIFICATION_ID = P_ELIGIBILITYCLASSIFICATION_ID
               AND ORGANIZATIONELIGIBILITY_ID = P_ORGANIZATIONELIGIBILITY_ID;

        DELETE  FROM ELIGIBILITYCLASSIFICATION
           WHERE   ELIGIBILITYCLASSIFICATION_ID = P_ELIGIBILITYCLASSIFICATION_ID;
      ELSE
        delete FROM REGIONSPECIFIC where organizationeligibility_id in
           (select ORGANIZATIONELIGIBILITY_ID from ORGANIZATIONELIGIBILITY
            where eligibilityclassification_id in
             (select ELIGIBILITYCLASSIFICATION_ID from ELIGIBILITYCLASSIFICATION
              where opportunity_id = V_ID));

        delete FROM ORGANIZATIONELIGIBILITY where eligibilityclassification_id in
          (select ELIGIBILITYCLASSIFICATION_ID from ELIGIBILITYCLASSIFICATION where opportunity_id = V_ID);

        
      END IF;
   END IF;   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_pageurls` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_pageurls`(
	p_workflowid       integer,
  p_pagename         varchar(4000),
  p_url              varchar(4000),
  p_userid           integer,
  p_mode             integer -- 0 for insert ,1 for delete
)
BEGIN
   DECLARE v_moduleid   integer;
   DECLARE v_id         bigint;
   DECLARE v_count      integer;
   
   SELECT   moduleid, id
     INTO   v_moduleid, v_id
     FROM   sci_workflow
    WHERE   workflowid = p_workflowid;

   IF p_mode = 0
   THEN
      INSERT INTO sci_urls (moduleid,
                            id,
                            PAGENAME,
                            URL,
                            USERID)
        VALUES   (v_moduleid,
                  v_id,
                  p_PAGENAME,
                  p_URL,
                  p_USERID);
   ELSEIF p_mode = 1
   THEN
      UPDATE   sci_urls
         SET   ISACTIVE = 1, DELETEDBY = p_userid
       WHERE       MODULEID = v_MODULEID
               AND ID = v_ID
               AND PAGENAME = p_PAGENAME
               AND URL = p_URL;
   END IF;

      SELECT   URL
        FROM   sci_urls
       WHERE   moduleid = v_moduleid AND id = v_id AND PAGENAME =p_pagename and ISACTIVE = '0';

   COMMIT;
  
      UPDATE   sci_urls
         SET   ISACTIVE = '0', USERID = p_userid,DELETEDBY=null
       WHERE       MODULEID = v_MODULEID
               AND ID = v_ID
               AND PAGENAME = p_PAGENAME
               AND URL = p_URL              
               AND ISACTIVE = '1';

      -- set v_count = ROW_COUNT;
       SELECT ROW_COUNT() into v_count;

      IF v_count > 0
      THEN
           SELECT   URL
              FROM   sci_urls
             WHERE   moduleid = v_moduleid AND id = v_id AND PAGENAME =p_pagename and ISACTIVE = '0';
      ELSE
      
            SELECT   URL
              FROM   sci_urls
             WHERE   moduleid = v_moduleid AND id = v_id AND PAGENAME =p_pagename and ISACTIVE = '0';
      END IF;
   END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_PROC_AWARDBASE` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_PROC_AWARDBASE`(
p_workflowid  INTEGER
)
begin
   declare V_ID         integer;
   declare V_MODULEID   integer;
  
   SELECT   ID, MODULEID INTO   V_ID, V_MODULEID FROM   SCI_WORKFLOW WHERE   WORKFLOWID = P_WORKFLOWID;
   IF v_moduleid = 4
   THEN
         SELECT *  FROM   AWARD WHERE   AWARD_ID = v_ID;	   
   END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_PROC_AWARDPROGRESS` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_PROC_AWARDPROGRESS`(
p_workflowid       INTEGER
)
BEGIN
   declare V_ID         bigint;
   declare V_MODULEID   bigint;
   SELECT   ID, MODULEID INTO V_ID, V_MODULEID FROM SCI_WORKFLOW WHERE WORKFLOWID = P_WORKFLOWID;
   IF V_MODULEID = 4
   THEN
         SELECT * from 
         (SELECT 'Award' TAB,'awardbase.aspx' page,( case when COUNT(*) = 0 then 0 else 1 end) flag FROM   AWARD WHERE   AWARD_ID = v_ID
		UNION ALL
		SELECT 'AwardAmount' TAB, 'Amount.aspx?pid=4' page,( case when COUNT(*)=0 then 0 else 1 end) flag FROM   AMOUNT WHERE   AWARD_ID = v_ID
        UNION ALL
		SELECT 'Classification Group' TAB,'CLASSIFICATIONinfo.aspx' page, ( case when a=0 then 0 else 1 end) flag from (select COUNT(*) a FROM   CLASSIFICATIONGROUP WHERE   AWARD_ID = v_ID) C
		UNION ALL
		SELECT  'Awardees' TAB,'AWARDEES.aspx' page,( case when COUNT(*)=0 then 0 else 1 end) flag FROM  AWARDEES WHERE   AWARD_ID = v_ID
		UNION ALL
        SELECT 'Award Manager' TAB,'Contact.aspx?pid=4' page,( case when COUNT(*)=0 then 0 else 1 end) flag FROM AWARDMANAGERS WHERE   AWARD_ID = v_ID
		UNION ALL
        SELECT 'Related Programs' TAB,'Relatedprograms.aspx' page,( case when COUNT(*)=0 then 0 else 1 end) flag FROM RELATEDPROGRAMS WHERE   AWARD_ID = v_ID
		UNION ALL
        SELECT 'Relatedpportunities' tab,'RelatedOpportunities.aspx' page,(CASE WHEN COUNT( * ) = 0 THEN 0 ELSE 1 END) flag FROM sci_related_opportunity WHERE Award_ID = v_id
	    UNION ALL
        SELECT 'Related Fundingbodies' TAB,'RelatedOrg.aspx' page,( case when COUNT(*)=0 then 0 else 1 end) flag FROM RELATEDORGS WHERE AWARD_ID = v_ID
        UNION ALL
        SELECT 'AwardLocation' TAB,'AwardLocation.aspx' page, ( case when COUNT(*)=0 then 0 else 1 end) flag FROM award_location WHERE AWARD_ID = v_ID
        UNION ALL 
        SELECT 'RelatedItems' TAB, 'RelatedItems.aspx' page,( case when COUNT(*)=0 then 0 else 1 end) flag FROM RelatedItems WHERE AWARD_ID = v_ID
		UNION ALL
        SELECT 'Publication' TAB,'Publication.aspx' page,( case when COUNT(*)=0 then 0 else 1 end) flag FROM PublicationData WHERE AWARD_ID = v_ID
        UNION ALL
        SELECT 'Publication identifier' TAB,'ScholarlyOutput.aspx' page,( case when COUNT(*)=0 then 0 else 1 end) flag FROM   RESEARCHOUTCOME WHERE   AWARD_ID = v_ID
        UNION ALL  
        SELECT 'Funds' TAB,'Funds.aspx' page,( case when COUNT(*)=0 then 0 else 1 end) flag FROM FundedProjectDetail WHERE   AWARD_ID = v_ID
        ) as AwardProg;
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_proc_backtask` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_proc_backtask`(
	P_USERID         INTEGER,
	P_ID             bigint,
	P_moduleid       INTEGER,
	P_taskid         INTEGER,
	P_CYCLE          INTEGER
)
SP: BEGIN
	IF P_taskid = 7
	THEN
		DELETE FROM sci_workflow WHERE moduleid = P_moduleid AND id = P_ID AND taskid = 7;
		COMMIT;
		LEAVE SP;
	END IF;
   
	IF P_moduleid = 2
	THEN
		UPDATE SCI_WORKFLOW SET STARTDATE = NULL, STARTBY = NULL, STATUSID = NULL
		WHERE STARTBY = P_USERID AND MODULEID = P_moduleid AND ID = P_ID AND CYCLE = P_CYCLE AND TASKID = P_taskid AND ASSIGNBY IS NULL;
    
		IF ROW_COUNT() = 0
			THEN
				UPDATE SCI_WORKFLOW SET STARTDATE = NULL, STARTBY = NULL, STATUSID = 9
				WHERE STARTBY = P_USERID AND MODULEID = P_moduleid AND ID = P_ID AND CYCLE = P_CYCLE AND TASKID = P_taskid AND ASSIGNBY IS NOT NULL;
		END IF;
	ELSE
		UPDATE SCI_WORKFLOW SET STARTDATE = NULL, STARTBY = NULL, STATUSID = NULL
		WHERE STARTBY = P_USERID AND WORKFLOWID = P_ID AND ASSIGNBY IS NULL;

		IF ROW_COUNT() = 0
		THEN
			UPDATE SCI_WORKFLOW SET STARTDATE = NULL, STARTBY = NULL, STATUSID = 9
            WHERE STARTBY = P_USERID AND WORKFLOWID = P_ID AND ASSIGNBY IS NOT NULL;
		END IF;
	END IF;

	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_proc_dummy_tasklist` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_proc_dummy_tasklist`(
	IN pUserId		BIGINT,
    IN pModuleId	BIGINT,
    IN pTaskId		BIGINT,
    IN pAllocation	BIGINT,
    IN pCycle		BIGINT
)
BEGIN
	DECLARE	userAssignmentCount INT DEFAULT 0;    
    SELECT COUNT(1) INTO userAssignmentCount FROM userassignment WHERE userid = pUserId AND moduleid = pModuleId;
    
    IF pModuleId = 2 AND pAllocation != 0
    THEN
		IF userAssignmentCount = 0
        THEN
			SELECT DISTINCT modulename, ma.moduleid, fundingbodyname, ma.id, taskname, ma.taskid, ma.cycle, duedate
            FROM (
				SELECT moduleid, id, cycle, taskid FROM sci_workflow sw 
				WHERE taskid = pTaskId and moduleid = pModuleId AND assignby IS NULL and completeddate IS NULL
                AND CYCLE != 0 AND IFNULL(sw.statusid, 0) NOT IN (7, 9)
                AND NOT EXISTS (
					SELECT 1 FROM sci_workflow WHERE id = sw.id AND cycle = sw.cycle 
					AND sequence < sw.sequence AND completeddate IS NULL)) ma,
			sci_modules sm, sci_tasks st, fundingbody_master fm
            WHERE hidden_flag = 0 AND ma.taskid = st.taskid and ma.moduleid = sm.moduleid
            AND fm.fundingbody_id = ma.id
            ORDER BY duedate, fundingbodyname;
        ELSE
			SELECT COUNT(1) INTO userAssignmentCount FROM userassignment WHERE userid = pUserId AND moduleid = pModuleId;
        END IF;
    END IF;
    
    IF pModuleId = 3 AND pAllocation != 0
    THEN
		IF userAssignmentCount = 0
        THEN
			SELECT COUNT(1) INTO userAssignmentCount FROM userassignment WHERE userid = pUserId AND moduleid = pModuleId;
        ELSE
			SELECT COUNT(1) INTO userAssignmentCount FROM userassignment WHERE userid = pUserId AND moduleid = pModuleId;
        END IF;
    END IF;
    
    IF pModuleId = 4 AND pAllocation != 0
    THEN
		IF userAssignmentCount = 0
        THEN
			SELECT COUNT(1) INTO userAssignmentCount FROM userassignment WHERE userid = pUserId AND moduleid = pModuleId;
        ELSE
			SELECT COUNT(1) INTO userAssignmentCount FROM userassignment WHERE userid = pUserId AND moduleid = pModuleId;
        END IF;
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_proc_fundingbodyprogres_S5` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_proc_fundingbodyprogres_S5`(
   p_id             bigint  
)
BEGIN
      
		SELECT   *
		FROM   (SELECT   'Fundingbody' tab, 'FundingBase.aspx' page,
                         ( case when COUNT(*)=0 then 0 else 1 end) flag
					FROM   fundingbody
					WHERE   fundingbody_id = p_id
                
		UNION ALL
                
		SELECT  'Discription' tab, 'Item.aspx?pid=1' page,
                         ( case when COUNT(*)=0 then 0 else 1 end) flag
					FROM   about                  
					WHERE   fundingbody_id = p_id
                 
		UNION ALL
                
		SELECT   'Related Orgs' tab, 'RelatedOrg.aspx' page,
                         ( case when COUNT(*)=0 then 0 else 1 end) flag
					FROM   relatedorgs
					WHERE   fundingbody_id = p_id
		
		UNION ALL
        
        SELECT   'Establishment Info' tab, 'establish.aspx' page,
                         ( case when COUNT(*)=0 then 0 else 1 end) flag
					FROM   establishmentinfo
					WHERE   fundingbody_id = p_id
                
		UNION ALL
		
		SELECT   'Contacts' tab, 'Contact.aspx?pid=1' page,
                        ( case when COUNT(*)=0 then 0 else 1 end) flag
					FROM   contacts
					WHERE   fundingbody_id = p_id
                
		UNION ALL
                
		SELECT   'Funding Policy' tab, 'Item.aspx?pid=2' page,
                        ( case when COUNT(*)=0 then 0 else 1 end) flag
					FROM   Fundingpolicy ,item 
					WHERE   item.FUNDINGPOLICY_ID=Fundingpolicy.FUNDINGPOLICY_ID and fundingbody_id = p_id
                 
		UNION ALL
                
		SELECT   'Opportunities Source' tab, 'Opportunitiessource.aspx' page,
                        ( case when COUNT(*)=0 then 0 else 1 end) flag
					 FROM   OPPORTUNITIESSOURCE
					 WHERE   fundingbody_id = p_id
                 
		UNION ALL
		 
        SELECT   'Awards Source' tab, 'Awardssource.aspx' page,
                        ( case when COUNT(*)=0 then 0 else 1 end) flag
					 FROM   AWARDSSOURCE
					 WHERE   fundingbody_id = p_id
                 
		UNION ALL
                 
		SELECT   'Fundingbodies Source' tab, 'fundingBodyDataSource.aspx' page,
                        ( case when COUNT(*)=0 then 0 else 1 end) flag
					 FROM   fundingBodyDataset
					 WHERE   fundingbody_id = p_id
                 
		UNION ALL
                 
		SELECT   'Publications Source' tab, 'publicationDataSource.aspx' page,
                        ( case when COUNT(*)=0 then 0 else 1 end) flag
					 FROM   publicationDataset
					 WHERE   fundingbody_id = p_id
					
		UNION ALL
        
		SELECT   'AwardSuccessRate Description' tab, 'AwardSuccessRateDescription.aspx' page,
                        ( case when COUNT(*)=0 then 0 else 1 end) flag
					 FROM   awardSuccessRatedesc
					  WHERE   fundingbody_id = p_id
                  
		UNION ALL                                                     
        
		SELECT   'Identifier' tab, 'identifier.aspx' page,
                        ( case when COUNT(*)=0 then 0 else 1 end) flag
					 FROM   identifier
					 WHERE   fundingbody_id = p_id
                     ) as a;
                                
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_proc_gettaskforuser` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_proc_gettaskforuser`(
	IN USER_ID BIGINT
)
BEGIN
	SELECT MODULENAME, MA.MODULEID, FUNDINGBODYNAME, MA.ID, TASKNAME, MA.TASKID, ASSIGNBY, ASSIGNDATE, MA.CYCLE,
    WORKFLOWID, STATUSID, NULL AS OPPORTUNITYNAME, NULL AS OPURL
    FROM 
    (SELECT MODULEID, ID, CYCLE, TASKID, ASSIGNBY, ASSIGNDATE, WORKFLOWID, STATUSID
	FROM sci_workflow WHERE STARTBY = USER_ID AND COMPLETEDDATE IS NULL AND STATUSID IN (7, 9)) MA, 
    sci_modules SM, sci_tasks ST, fundingbody_master FM
    WHERE
    MA.TASKID = ST.TASKID AND MA.MODULEID = SM.MODULEID AND MA.MODULEID = 2
    AND IFNULL(FM.STATUSCODE, 0) <> 4 AND FM.FUNDINGBODY_ID = MA.ID
    UNION ALL
    SELECT MODULENAME, MA.MODULEID, FUNDINGBODYNAME, MA.ID, TASKNAME, MA.TASKID, ASSIGNBY, ASSIGNDATE, MA.CYCLE,
    WORKFLOWID, STATUSID, OPPORTUNITYNAME, OP.URL AS OPURL
    FROM 
    (SELECT MODULEID, ID, CYCLE, TASKID, ASSIGNBY, ASSIGNDATE, WORKFLOWID, STATUSID
	FROM sci_workflow WHERE STARTBY = USER_ID AND COMPLETEDDATE IS NULL AND STATUSID IN (7, 9)) MA, 
    sci_modules SM, sci_tasks ST, fundingbody_master FM, opportunity_master OP
    WHERE
    MA.TASKID = ST.TASKID AND MA.MODULEID = SM.MODULEID AND MA.MODULEID = 3
    AND IFNULL(FM.STATUSCODE, 0) <> 4 AND FM.FUNDINGBODY_ID = OP.FUNDINGBODYID AND OPPORTUNITYID = MA.ID
    UNION ALL
    SELECT MODULENAME, MA.MODULEID, FUNDINGBODYNAME, MA.ID, TASKNAME, MA.TASKID, ASSIGNBY, ASSIGNDATE, MA.CYCLE,
    WORKFLOWID, STATUSID, AWARDNAME, AM.URL AS OPURL
    FROM 
    (SELECT MODULEID, ID, CYCLE, TASKID, ASSIGNBY, ASSIGNDATE, WORKFLOWID, STATUSID
	FROM sci_workflow WHERE STARTBY = USER_ID AND COMPLETEDDATE IS NULL AND STATUSID IN (7, 9)) MA, 
    sci_modules SM, sci_tasks ST, fundingbody_master FM, award_master AM
    WHERE
    MA.TASKID = ST.TASKID AND MA.MODULEID = SM.MODULEID AND MA.MODULEID = 4
    AND IFNULL(FM.STATUSCODE, 0) <> 4 AND FM.FUNDINGBODY_ID = AM.FUNDINGBODYID AND AWARDID = MA.ID;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_proc_tasklist_new` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_proc_tasklist_new`(
	p_userid       	INTEGER,
	P_moduleid      INTEGER,
	P_taskid        INTEGER,
	P_CYCLE         INTEGER,
	P_ALLOCATION    INTEGER
)
BEGIN
	DECLARE lCount	INTEGER;
    
    SELECT COUNT(1) INTO lCount FROM userassignment WHERE userid = p_userid AND moduleid = p_moduleid; 
    
    IF P_taskid = 1
	THEN
		IF P_ALLOCATION = 0
		THEN   -- TO_CHAR(DUEDATE, 'DD-Mon-YYYY')
			IF lCount = 0 
            THEN
				SELECT modulename, moduleid, fundingbodyname, ID, taskname, taskid, CYCLE, DUEDATE FROM
					(SELECT modulename, ma.moduleid, fundingbodyname, ma.ID, taskname, ma.taskid, ma.CYCLE, DATE_FORMAT(DUEDATE, '%d-%M-%y') DUEDATE, DUEDATE due FROM 
						(SELECT moduleid, ID, CYCLE, taskid FROM sci_workflow sw 
						WHERE taskid = P_taskid AND moduleid = P_moduleid AND ASSIGNBY IS NULL AND completeddate IS NULL AND CYCLE = p_CYCLE 
						AND IFNULL(sw.STATUSID, 0) NOT IN (7, 9) AND NOT EXISTS 
							(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
						) ma, sci_modules sm, sci_tasks st, fundingbody_master fm
					WHERE fm.HIDDEN_FLAG = 0 and ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND IFNULL(fm.STATUSCODE, 0) <> 4 AND fm.fundingbody_id = ma.ID 
					ORDER BY fundingbodyname) table1
				 LIMIT 2 ; -- WHERE ROWNUM < 2;
            ELSE
				SELECT modulename, moduleid, fundingbodyname, ID, taskname, taskid, CYCLE, DUEDATE FROM
					(SELECT modulename, ma.moduleid, fundingbodyname, ma.ID, taskname, ma.taskid, ma.CYCLE, DATE_FORMAT(DUEDATE, '%d-%M-%y') DUEDATE, DUEDATE due FROM
						(SELECT moduleid, ID, CYCLE, taskid FROM sci_workflow sw 
						WHERE taskid = P_taskid AND moduleid = P_moduleid AND ASSIGNBY IS NULL AND completeddate IS NULL AND CYCLE = p_CYCLE 
                        AND IFNULL(sw.STATUSID, 0) NOT IN (7, 9) AND NOT EXISTS 
							(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
						) ma, sci_modules sm, sci_tasks st, fundingbody_master fm  
					WHERE HIDDEN_FLAG = 0 AND ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND IFNULL(fm.STATUSCODE, 0) <> 4 AND fm.fundingbody_id = ma.ID 
                    AND fm.fundingbody_id IN 
						(SELECT FUNDINGBODYID FROM userassignment WHERE userid = p_userid and moduleid = p_moduleid)
					ORDER BY fundingbodyname) table1
				LIMIT 2 ; -- WHERE ROWNUM < 2;
            END IF;
        ELSEIF P_ALLOCATION = 1
        THEN
			IF lCount = 0 
            THEN
				SELECT modulename, moduleid, fundingbodyname, ID, taskname, taskid, CYCLE, DUEDATE FROM
					(SELECT modulename, ma.moduleid, fundingbodyname, ma.ID, taskname, ma.taskid, ma.CYCLE, DATE_FORMAT(DUEDATE, '%d-%M-%y') DUEDATE, DUEDATE due FROM
						(SELECT moduleid, ID, CYCLE, taskid FROM sci_workflow sw 
						WHERE taskid = P_taskid AND moduleid = P_moduleid AND ASSIGNBY IS NULL AND completeddate IS NULL AND CYCLE = p_CYCLE
                        AND IFNULL(sw.STATUSID, 0) NOT IN (7, 9) AND NOT EXISTS 
							(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
						) ma, sci_modules sm, sci_tasks st, fundingbody_master fm 
					WHERE HIDDEN_FLAG = 0 AND ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND IFNULL(fm.STATUSCODE, 0) <> 4 AND fm.fundingbody_id = ma.ID 
                    ORDER BY fundingbodyname) table1;
            ELSE
				SELECT modulename, moduleid, fundingbodyname, ID, taskname, taskid, CYCLE, DUEDATE FROM
					(SELECT modulename, ma.moduleid, fundingbodyname, ma.ID, taskname, ma.taskid, ma.CYCLE, DATE_FORMAT(DUEDATE, '%d-%M-%y') DUEDATE, DUEDATE due FROM 
						(SELECT moduleid, ID, CYCLE, taskid FROM sci_workflow sw 
                        WHERE taskid = P_taskid AND moduleid = P_moduleid AND ASSIGNBY IS NULL AND completeddate IS NULL AND CYCLE = p_CYCLE 
                        AND IFNULL(sw.STATUSID, 0) NOT IN (7, 9) AND NOT EXISTS 
							(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
						) ma, sci_modules sm, sci_tasks st, fundingbody_master fm 
					WHERE HIDDEN_FLAG = 0 AND ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND IFNULL(fm.STATUSCODE, 0) <> 4 AND fm.fundingbody_id = ma.ID
                    and fm.fundingbody_id IN 
						(SELECT FUNDINGBODYID FROM userassignment WHERE userid = p_userid and moduleid=p_moduleid)
					ORDER BY fundingbodyname) table1;
            END IF;
        END IF;
    ELSEIF P_taskid = 2
    THEN
		IF P_ALLOCATION = 0
		THEN
			IF lCount = 0 
            THEN
				SELECT modulename, moduleid, fundingbodyname, ID, taskname, taskid, CYCLE, DUEDATE FROM
					(SELECT modulename, ma.moduleid, fundingbodyname, ma.ID, taskname, ma.taskid, ma.CYCLE, DATE_FORMAT(DUEDATE, '%d-%M-%y') DUEDATE, DUEDATE due FROM 
						(SELECT moduleid, ID, CYCLE, taskid FROM sci_workflow sw 
						WHERE taskid = P_taskid AND moduleid = P_moduleid AND ASSIGNBY IS NULL AND completeddate IS NULL AND CYCLE = 0 
                        AND IFNULL(sw.STATUSID, 0) NOT IN (7, 9) AND NOT EXISTS 
							(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
						) ma, sci_modules sm, sci_tasks st, fundingbody_master fm 
					WHERE HIDDEN_FLAG = 0 AND ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND IFNULL(fm.STATUSCODE, 0) <> 4 AND fm.fundingbody_id = ma.ID 
                    ORDER BY fundingbodyname) table1
				LIMIT 2 ; -- WHERE ROWNUM < 2;
            ELSE
				SELECT modulename, moduleid, fundingbodyname, ID, taskname, taskid, CYCLE, DUEDATE FROM
					(SELECT modulename, ma.moduleid, fundingbodyname, ma.ID, taskname, ma.taskid, ma.CYCLE, DATE_FORMAT(DUEDATE, '%d-%M-%y') DUEDATE, DUEDATE due FROM 
						(SELECT moduleid, ID, CYCLE, taskid FROM sci_workflow sw  
                        WHERE taskid = P_taskid AND moduleid = P_moduleid AND ASSIGNBY IS NULL AND completeddate IS NULL AND CYCLE = 0 
                        AND IFNULL(sw.STATUSID, 0) NOT IN (7, 9) AND NOT EXISTS 
							(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
						) ma, sci_modules sm, sci_tasks st, fundingbody_master fm 
                        WHERE HIDDEN_FLAG = 0 AND ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND IFNULL(fm.STATUSCODE, 0) <> 4 AND fm.fundingbody_id = ma.ID 
                        and fm.fundingbody_id IN 
							(SELECT FUNDINGBODYID FROM userassignment WHERE userid = p_userid and moduleid = p_moduleid)
						ORDER BY fundingbodyname) table1
					LIMIT 2 ; -- WHERE ROWNUM < 2;
            END IF;
        ELSEIF P_ALLOCATION = 1
        THEN
			IF lCount = 0 
            THEN
				SELECT modulename, moduleid, fundingbodyname, ID, taskname, taskid, CYCLE, DUEDATE FROM
					(SELECT modulename, ma.moduleid, fundingbodyname, ma.ID, taskname, ma.taskid, ma.CYCLE, DATE_FORMAT(DUEDATE, '%d-%M-%y') DUEDATE, DUEDATE due FROM 
						(SELECT moduleid, ID, CYCLE, taskid FROM sci_workflow sw  
                        WHERE taskid = P_taskid AND moduleid = P_moduleid AND ASSIGNBY IS NULL AND completeddate IS NULL AND CYCLE = 0 
                        AND IFNULL(sw.STATUSID, 0) NOT IN  (7, 9) AND NOT EXISTS 
							(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
						) ma, sci_modules sm, sci_tasks st, fundingbody_master fm  
					WHERE HIDDEN_FLAG = 0 AND ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND IFNULL(fm.STATUSCODE, 0) <> 4 AND fm.fundingbody_id = ma.ID 
                    ORDER BY fundingbodyname) table1;
            ELSE
				SELECT modulename, moduleid, fundingbodyname, ID, taskname, taskid, CYCLE, DUEDATE FROM
					(SELECT modulename, ma.moduleid, fundingbodyname, ma.ID, taskname, ma.taskid, ma.CYCLE, DATE_FORMAT(DUEDATE, '%d-%M-%y') DUEDATE, DUEDATE due FROM 
						(SELECT moduleid, ID, CYCLE, taskid FROM sci_workflow sw 
						WHERE taskid = P_taskid AND moduleid = P_moduleid AND ASSIGNBY IS NULL AND completeddate IS NULL AND CYCLE = 0 AND 
                        IFNULL(sw.STATUSID, 0) NOT IN (7, 9) AND NOT EXISTS 
							(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
						) ma, sci_modules sm, sci_tasks st, fundingbody_master fm 
                        WHERE HIDDEN_FLAG = 0 AND ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND IFNULL(fm.STATUSCODE, 0) <> 4 AND fm.fundingbody_id = ma.ID 
                        and fm.fundingbody_id IN 
							(SELECT FUNDINGBODYID FROM userassignment WHERE userid = p_userid and moduleid=p_moduleid)
						ORDER BY fundingbodyname) table1;
            END IF;
        END IF;
	ELSE
		IF P_ALLOCATION = 0
		THEN
			IF lCount = 0 
            THEN
				SELECT modulename, ma.moduleid, fundingbodyname, ma.ID, taskname, ma.taskid, ma.CYCLE, DATE_FORMAT(DUEDATE, '%d-%M-%y') DUEDATE, DUEDATE due FROM 
						(SELECT moduleid, ID, CYCLE, taskid FROM sci_workflow sw  
                        WHERE taskid = P_taskid AND moduleid = P_moduleid AND ASSIGNBY IS NULL AND completeddate IS NULL 
                        AND IFNULL(sw.STATUSID, 0) NOT IN (7, 9) AND NOT EXISTS 
							(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
						) ma, sci_modules sm, sci_tasks st, fundingbody_master fm  
				WHERE HIDDEN_FLAG = 0 AND ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND fm.fundingbody_id = ma.ID LIMIT 2 ; --  ROWNUM < 2;
            ELSE
				SELECT modulename, ma.moduleid, fundingbodyname, ma.ID, taskname, ma.taskid, ma.CYCLE, DATE_FORMAT(DUEDATE, '%d-%M-%y') DUEDATE, DUEDATE due FROM 
						(SELECT moduleid, ID, CYCLE, taskid FROM sci_workflow sw 
                        WHERE taskid = P_taskid AND moduleid = P_moduleid AND ASSIGNBY IS NULL AND completeddate IS NULL AND IFNULL(sw.STATUSID, 0) NOT IN (7, 9) 
                        AND NOT EXISTS 
							(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
						) ma, sci_modules sm, sci_tasks st, fundingbody_master fm 
					WHERE HIDDEN_FLAG = 0 AND ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND fm.fundingbody_id = ma.ID and fm.fundingbody_id IN 
						(SELECT FUNDINGBODYID FROM userassignment WHERE userid = p_userid and moduleid=p_moduleid)
                     LIMIT 2 ; --  ROWNUM < 2;
            END IF;
        ELSEIF P_ALLOCATION = 1
        THEN
			IF lCount = 0 
            THEN
				SELECT modulename, ma.moduleid, fundingbodyname, ma.ID, taskname, ma.taskid, ma.CYCLE, DATE_FORMAT(DUEDATE, '%d-%M-%y') DUEDATE, DUEDATE due FROM 
					(SELECT moduleid, ID, CYCLE, taskid FROM sci_workflow sw 
                    WHERE taskid = P_taskid AND moduleid = P_moduleid AND ASSIGNBY IS NULL AND completeddate IS NULL AND IFNULL(sw.STATUSID, 0) NOT IN (7, 9) 
                    AND NOT EXISTS
						(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
					) ma, sci_modules sm, sci_tasks st, fundingbody_master fm 
				WHERE HIDDEN_FLAG = 0 AND ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND fm.fundingbody_id = ma.ID;
            ELSE
				SELECT modulename, ma.moduleid, fundingbodyname, ma.ID, taskname, ma.taskid, ma.CYCLE, DATE_FORMAT(DUEDATE, '%d-%M-%y') DUEDATE, DUEDATE due FROM 
					(SELECT moduleid, ID, CYCLE, taskid FROM sci_workflow sw 
                    WHERE taskid = P_taskid AND moduleid = P_moduleid AND ASSIGNBY IS NULL AND completeddate IS NULL AND IFNULL(sw.STATUSID, 0) NOT IN (7, 9)
                    AND NOT EXISTS
						(SELECT 1 FROM sci_workflow WHERE ID = sw.ID AND CYCLE = sw.CYCLE AND SEQUENCE < sw.SEQUENCE AND completeddate IS NULL)
					) ma, sci_modules sm, sci_tasks st, fundingbody_master fm
				WHERE HIDDEN_FLAG = 0 AND ma.taskid = st.taskid AND ma.moduleid = sm.moduleid AND fm.fundingbody_id = ma.ID and fm.fundingbody_id IN 
					(SELECT FUNDINGBODYID FROM userassignment WHERE userid = p_userid and moduleid=p_moduleid);
            END IF;
        END IF;
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_proc_updateexpirealert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_proc_updateexpirealert`()
BEGIN
	DECLARE	alertCount INT DEFAULT 0;
    
    SELECT COUNT(OPPORTUNITYID) INTO alertCount FROM sci_expire_alert WHERE DATE(CREATEDDATE) = CURDATE();
    
    IF alertCount = 0
    THEN
		INSERT INTO sci_expire_alert(OPPORTUNITYID, DUEDATE, CREATEDDATE, FLAG)
        SELECT od.OPPORTUNITY_ID, DUEDATE, CREATEDDATE, FLAG FROM 
        (
			SELECT DISTINCT soldd.OPPORTUNITY_ID,
            CASE
				WHEN 
                (
					SELECT YEAR(LOI_DUE_DATE) FROM sci_opp_loi_duedate_detail sodd WHERE sodd.OPPORTUNITY_ID = soldd.OPPORTUNITY_ID AND sodd.DATE_TYPE = 2
                    AND SEQUENCE_ID = (SELECT MAX(SEQUENCE_ID) FROM sci_opp_loi_duedate_detail soldd2 WHERE soldd2.OPPORTUNITY_ID = sodd.OPPORTUNITY_ID AND soldd2.DATE_TYPE = 2)
				)
				IN ('1900')
                THEN
                (
					SELECT LOI_DUE_DATE FROM sci_opp_loi_duedate_detail sodd WHERE sodd.OPPORTUNITY_ID = soldd.OPPORTUNITY_ID AND sodd.DATE_TYPE = 1
                    AND SEQUENCE_ID = (SELECT MAX(SEQUENCE_ID) FROM sci_opp_loi_duedate_detail soldd2 WHERE soldd2.OPPORTUNITY_ID = sodd.OPPORTUNITY_ID AND soldd2.DATE_TYPE = 1)
                )
                ELSE
                (
					SELECT LOI_DUE_DATE FROM sci_opp_loi_duedate_detail sodd WHERE sodd.OPPORTUNITY_ID = soldd.OPPORTUNITY_ID AND sodd.DATE_TYPE = 2
                    AND SEQUENCE_ID = (SELECT MAX(SEQUENCE_ID) FROM sci_opp_loi_duedate_detail soldd2 WHERE soldd2.OPPORTUNITY_ID = sodd.OPPORTUNITY_ID AND soldd2.DATE_TYPE = 2)
                )
                END DUEDATE, CURDATE() AS CREATEDDATE, 0 AS FLAG
                FROM sci_opp_loi_duedate_detail soldd, oppotunity o
                WHERE o.OPPORTUNITY_ID = soldd.OPPORTUNITY_ID
                AND LTRIM(RTRIM(LOWER(o.OPPORTUNITYSTATUS))) = 'active'
                AND NOT EXISTS (SELECT 1 FROM sci_expire_alert e WHERE e.OPPORTUNITYID = soldd.OPPORTUNITY_ID AND e.FLAG = 0)
		) od
        WHERE DUEDATE IS NOT NULL AND DUEDATE < CURDATE();
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_Publication_out_insupdel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_Publication_out_insupdel`(
   p_workflowid             INTEGER,
   p_insdel                 INTEGER,
   p_publication_ID         INTEGER ,
   p_FundingBodyProjectId   VARCHAR(4000) ,
   p_PublishedDate          Datetime,
   p_PublicationURL         VARCHAR(4000),
   p_PublicationOutputId    INTEGER,
   p_IngestionId            VARCHAR(4000),
   p_JournalTitle           VARCHAR(4000),
   p_Journalidentifier      VARCHAR(4000),
   p_Authors                VARCHAR(4000),
   p_Description            LONGTEXT
)
BEGIN
   DECLARE v_id                     INTEGER;
   DECLARE v_MODULEID               INTEGER;
   DECLARE v_value                  INTEGER;
   DECLARE v_count                  INTEGER;
   DECLARE d_count                  INTEGER;
   DECLARE v_count1                 INTEGER;
   DECLARE l_scolarly_id            INTEGER;
   DECLARE l_output_item_type       INTEGER;
   DECLARE l_publication_SEQ        INTEGER;
   DECLARE l_IDENTIFIERTITLE_SEQ    INTEGER;
   DECLARE L_ID                     INTEGER;
   DECLARE L_ITEMTEST_ID            INTEGER;
   DECLARE l_researchoutcome_id     INTEGER;
   DECLARE l_count                  INTEGER;
 
   SELECT   ID, MODULEID
     INTO   v_id, v_MODULEID
     FROM   sci_workflow
    WHERE   WORKFLOWID = p_workflowid;


   IF v_moduleid = 4
   THEN
      IF p_insdel = 0
      THEN
         SELECT   COUNT(*)
           INTO   v_count
           FROM   publicationdata
          WHERE   AWARD_ID = v_id;

         IF v_count > 0
         THEN
         UPDATE PUBLICATIONDATA
SET 
 PUBLICATIONOUTPUTID  = p_PublicationOutputId,
 PUBLISHEDDATE        = p_PublishedDate,
 LASTUPDATEON         = sysdate(),
 PUBLICATION_AUTHOR   = p_Authors,
 JOURNAL_IDENTIFIER   = p_Journalidentifier,
 PUBLICATION_URL      = p_PublicationURL,
 FUNDINGBODYPROJECTID = p_FundingBodyProjectId,
 PUB_DESCRIPTION      = p_Description
WHERE award_id=v_id;

   UPDATE IDENTIFIERTITLE
   SET TITLE=  p_JournalTitle
WHERE PUBLICATION_ID in (Select PUBLICATION_ID from PUBLICATIONDATA where award_id=v_id);
           -- OPEN p_PublicationData FOR
            SELECT PD.PUBLICATION_ID,
  AWARD_ID,
  INGESTIONID,
  PUBLICATIONOUTPUTID,
  PUBLISHEDDATE,
  CREATEDON,
  LASTUPDATEON,
  PUBLICATION_AUTHOR,
  JOURNAL_IDENTIFIER,
  PUBLICATION_URL,
  FUNDINGBODYPROJECTID,
  PUB_DESCRIPTION,
  Title
    FROM PUBLICATIONDATA PD , IDENTIFIERTITLE  IT where PD.publication_id=IT.publication_id and  award_id=v_id;
            
         ELSE
            SELECT  PUBLICATION_SEQ.NEXTVAL
              INTO   l_publication_SEQ
              FROM   DUAL;
              
              SELECT  IDENTIFIERTITLE_SEQ.NEXTVAL
              INTO   l_IDENTIFIERTITLE_SEQ
              FROM   DUAL;
              


 INSERT
INTO PUBLICATIONDATA
  (
    PUBLICATION_ID,
    AWARD_ID,
    INGESTIONID,
    PUBLICATIONOUTPUTID,
    PUBLISHEDDATE,
    CREATEDON,
    LASTUPDATEON,
    PUBLICATION_AUTHOR,
    JOURNAL_IDENTIFIER,
    PUBLICATION_URL,
    FUNDINGBODYPROJECTID,
    PUB_DESCRIPTION
  )
  VALUES
  (
   l_publication_SEQ,
    v_id,
    p_IngestionId,
    p_PublicationOutputId,
    p_PublishedDate,
    sysdate(),
    sysdate(),
    p_Authors,
    p_Journalidentifier,
    p_PublicationURL,
    p_FundingBodyProjectId,
    p_Description
  );   
  
  INSERT
INTO IDENTIFIERTITLE
  (
    ID,
    PUBLICATION_ID,
    TITLE,
    LANG,
    CREATEDDATE
  )
  VALUES
  (
    l_IDENTIFIERTITLE_SEQ,
    l_publication_SEQ,
    p_JournalTitle,
    'en',
    sysdate()
  );
            END IF;
         END IF;
         
      ELSEIF P_INSDEL = 1
      THEN
         IF p_publication_ID <> 0
         THEN
          UPDATE PUBLICATIONDATA
SET 
 PUBLICATIONOUTPUTID  = p_PublicationOutputId,
 PUBLISHEDDATE        = p_PublishedDate,
 LASTUPDATEON         = sysdate(),
 PUBLICATION_AUTHOR   = p_Authors,
 JOURNAL_IDENTIFIER   = p_Journalidentifier,
 PUBLICATION_URL      = p_PublicationURL,
 FUNDINGBODYPROJECTID = p_FundingBodyProjectId,
 PUB_DESCRIPTION      = p_Description
WHERE award_id=v_id;

   UPDATE IDENTIFIERTITLE
   SET TITLE=  p_JournalTitle
WHERE PUBLICATION_ID in (Select PUBLICATION_ID from PUBLICATIONDATA where award_id=v_id); 
         END IF;
          ELSEIF P_INSDEL = 3
         THEN
         Delete FROM publicationdata where award_id=v_id;
         
          --     OPEN p_PublicationData FOR
     
      
           SELECT PD.PUBLICATION_ID,
  AWARD_ID,
  INGESTIONID,
  PUBLICATIONOUTPUTID,
  PUBLISHEDDATE,
  CREATEDON,
  LASTUPDATEON,
  PUBLICATION_AUTHOR,
  JOURNAL_IDENTIFIER,
  PUBLICATION_URL,
  FUNDINGBODYPROJECTID,
  PUB_DESCRIPTION,
  Title
    FROM PUBLICATIONDATA PD , IDENTIFIERTITLE  IT where PD.publication_id=IT.publication_id and  award_id=v_id;
     
      END IF;

      -- OPEN p_PublicationData FOR
           SELECT PD.PUBLICATION_ID,
  AWARD_ID,
  INGESTIONID,
  PUBLICATIONOUTPUTID,
  PUBLISHEDDATE,
  CREATEDON,
  LASTUPDATEON,
  PUBLICATION_AUTHOR,
  JOURNAL_IDENTIFIER,
  PUBLICATION_URL,
  FUNDINGBODYPROJECTID,
  PUB_DESCRIPTION,
  Title
    FROM PUBLICATIONDATA PD , IDENTIFIERTITLE  IT where PD.publication_id=IT.publication_id and  award_id=v_id;
         
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_relatedorglist` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_relatedorglist`(
   p_workflowid       integer
)
BEGIN
   DECLARE v_fundingbodyid   bigint;
   DECLARE v_moduleid        integer;
    
   SELECT   ID, moduleid
     INTO   v_fundingbodyid, v_moduleid
     FROM   sci_workflow
    WHERE   WORKFLOWID = p_workflowid;
   
   SELECT * FROM SCI_BINARYRELATIONTYPE
   where value in (
   'partOf', 
   'parentOf',
   'hasPart',
   'CHANGE',
   'affiliatedWith', 
   'renamedAs', 
   'continuationOf', 
   'mergedWith', 
   'mergerOf', 
   'incrorporatedInto', 
   'incorporates', 
   'splitInto', 
   'splitFrom', 
   'isReplacedBy', 
   'replaces') ;
   
	SELECT   * FROM sci_hierarchymaster;

   IF v_moduleid = 2
   THEN
            
      SELECT   FUNDINGBODYNAME,
         rd.HIERARCHY,
         rd.RELATEDORGS_ID,
         rd.FUNDINGBODY_ID,
         o.ORGDBID,
         o.RELTYPE,
         (CASE WHEN fm.STATUSCODE = 3 THEN 1 ELSE 0 END) flag
  FROM   relatedorgs rd,
         org o,
         fundingbody fb,
         fundingbody_master fm
 WHERE       rd.RELATEDORGS_ID = o.RELATEDORGS_ID
         AND O.ORGDBID = fb.ORGDBID
         AND FB.FUNDINGBODY_ID = fm.FUNDINGBODY_ID
         AND rd.FUNDINGBODY_ID = v_fundingbodyid
UNION
SELECT   VENDOR_FUNDINGBODY_NAME FUNDINGBODYNAME,
         rd.HIERARCHY,
         rd.RELATEDORGS_ID,
         rd.FUNDINGBODY_ID,
         o.ORGDBID,
         o.RELTYPE,
         0 flag
  FROM   sci_related_orgs_vendor rov, relatedorgs rd, org o
 WHERE   rd.RELATEDORGS_ID = o.RELATEDORGS_ID AND rov.vendor_id = o.ORGDBID
          AND rd.FUNDINGBODY_ID = v_fundingbodyid
   ORDER BY   FUNDINGBODYNAME;
      
      SELECT   fb.ORGDBID, FUNDINGBODYNAME
           FROM   fundingbody fb, fundingbody_master fm
          WHERE       fb.FUNDINGBODY_ID = fm.FUNDINGBODY_ID
                  AND IFNULL (STATUSCODE, 1) <> 3
                  AND NOT EXISTS
                        (SELECT   *
                           FROM   org
                          WHERE   RELATEDORGS_ID IN
                                        (SELECT   RELATEDORGS_ID
                                           FROM   relatedorgs
                                          WHERE   FUNDINGBODY_ID =
                                                     v_fundingbodyid)
                                  AND ORGDBID = fb.FUNDINGBODY_ID);
      
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_relatedorgsinsert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_relatedorgsinsert`(
   p_workflowid       integer,
   p_insdel           integer,              
   p_HIERARCHY        varchar(4000),
   p_orgdbid          varchar(4000),
   p_RELTYPE          varchar(4000)
)
BEGIN
	DECLARE v_count           integer;
	DECLARE v_fundingbodyid   integer;
	DECLARE v_value           integer;
	DECLARE v_counter1        integer  DEFAULT  0;
	DECLARE v_counter         integer  DEFAULT  0;
	DECLARE v_orgcunt         integer;
	DECLARE v_ORG_TEXT        varchar (2000);
	DECLARE NOT_FOUND INT DEFAULT 0;

	DECLARE CONTINUE HANDLER FOR NOT FOUND SET NOT_FOUND = 1; 
   
	SELECT ID INTO v_fundingbodyid FROM sci_workflow
    WHERE WORKFLOWID = p_workflowid;

	IF p_insdel = 0
	THEN
		SELECT   COUNT(*) INTO   v_count FROM   relatedorgs
		WHERE   FUNDINGBODY_ID = v_fundingbodyid;

		IF v_count > 0
		THEN
			SELECT   RELATEDORGS_ID INTO   v_value FROM   relatedorgs
			WHERE   FUNDINGBODY_ID = v_fundingbodyid;
		ELSE
			SELECT   RELATEDORGS_SEQ.NEXTVAL INTO v_value FROM DUAL;

			INSERT INTO relatedorgs (HIERARCHY, RELATEDORGS_ID, FUNDINGBODY_ID)
			VALUES   (p_HIERARCHY, v_value, v_fundingbodyid);
		END IF;

		/*CLARE i CURSOR FOR SELECT list FROM table (sci_getcsvtoLIST (p_orgdbid));
		OPEN i;
		FETCH i INTO
		WHILE NOT_FOUND=0
		DO
		begin declare exit handler for not found begin
            SET v_ORG_TEXT=null;
		END;
        
		SELECT   FUNDINGBODYNAME
           INTO   v_ORG_TEXT
           FROM   fundingbody_master
		WHERE   FUNDINGBODY_ID = (SELECT FUNDINGBODY_ID
							  FROM   fundingbody
                              WHERE   ORGDBID = i.list);
	    END;                           
          
	if  v_ORG_TEXT is null then
          
           SELECT  vendor_fundingbody_name
               into v_ORG_TEXT
              FROM   sci_related_orgs_vendor
                    where VENDOR_ID= i.list;  
                    end if;   
                            
			INSERT INTO org (ORGDBID,
                          RELTYPE,
                          ORG_TEXT,
                          RELATEDORGS_ID)
           VALUES   (i.list,
                     p_RELTYPE,
                     v_ORG_TEXT,
                     v_value);
      FETCH  INTO;
      END WHILE;
      CLOSE ;
   ELSEIF p_insdel = 1
   THEN
      DECLARE i CURSOR FOR SELECT   list FROM table (sci_getcsvtoLIST (p_orgdbid));
      OPEN i;
      FETCH i INTO;
      WHILE NOT_FOUND=0
      DO
         DELETE FROM   org
               WHERE   ORGDBID = i.list and RELATEDORGS_ID in(select RELATEDORGS_ID from relatedorgs where  FUNDINGBODY_ID= v_fundingbodyid );

         SELECT   COUNT(*)
           INTO   v_orgcunt
           FROM   org
          WHERE   RELATEDORGS_ID =
                     (SELECT   RELATEDORGS_ID
                        FROM   relatedorgs
                       WHERE   FUNDINGBODY_ID = v_fundingbodyid);


         IF v_orgcunt = 0
         THEN
            DELETE FROM   relatedorgs
                  WHERE   FUNDINGBODY_ID = v_fundingbodyid;
         END IF;
      FETCH  INTO;
      END WHILE;
      CLOSE ;*/
   ELSEIF p_insdel = 2
   THEN
      UPDATE   relatedorgs
         SET   HIERARCHY = p_HIERARCHY
       WHERE   FUNDINGBODY_ID = v_fundingbodyid;
      
   END IF;
      
         SELECT   fb.ORGDBID, FUNDINGBODYNAME
           FROM   fundingbody fb, fundingbody_master fm
          WHERE       fb.FUNDINGBODY_ID = fm.FUNDINGBODY_ID
                  AND IFNULL (STATUSCODE, 1) <> 3
	
                  AND NOT EXISTS
                        (SELECT   *
                           FROM   org
                          WHERE   RELATEDORGS_ID IN
                                        (SELECT   RELATEDORGS_ID
                                           FROM   relatedorgs
                                          WHERE   FUNDINGBODY_ID =
                                                     v_fundingbodyid)
                                  AND ORGDBID = fb.FUNDINGBODY_ID);

   SET NOT_FOUND = 0;
   
      SELECT   FUNDINGBODYNAME,
               rd.HIERARCHY,
               rd.RELATEDORGS_ID,
               rd.FUNDINGBODY_ID,
               o.ORGDBID,
               o.RELTYPE,
   
               (CASE WHEN fm.STATUSCODE = 3 THEN 1 ELSE 0 END) flag
        FROM   relatedorgs rd,
               org o,
               fundingbody fb,
               fundingbody_master fm
       WHERE       rd.RELATEDORGS_ID = o.RELATEDORGS_ID
               AND O.ORGDBID = fb.ORGDBID
               AND FB.FUNDINGBODY_ID = fm.FUNDINGBODY_ID
               AND rd.FUNDINGBODY_ID = v_fundingbodyid
               UNION
SELECT   VENDOR_FUNDINGBODY_NAME FUNDINGBODYNAME,
         rd.HIERARCHY,
         rd.RELATEDORGS_ID,
         rd.FUNDINGBODY_ID,
         o.ORGDBID,
         o.RELTYPE,
   
         0 flag
  FROM   sci_related_orgs_vendor rov, relatedorgs rd, org o
 WHERE   rd.RELATEDORGS_ID = o.RELATEDORGS_ID AND rov.vendor_id = o.ORGDBID
          AND rd.FUNDINGBODY_ID = v_fundingbodyid ;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_related_vendor_dml_prc` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_related_vendor_dml_prc`(
   p_rel_orgs_vendorid             INTEGER /* default null */ ,
   p_vendor_id                     INTEGER /* default null */ ,
   p_vendor_fundingbody_name       VARCHAR(4000) /* default null */ ,
   p_mode                          VARCHAR(4000)
)
BEGIN
   DECLARE v_count   INTEGER;
   DECLARE l_namecount   integer;
   DECLARE l_rel_orgs_vendorid  integer;
      
   IF p_mode = 'I'
   THEN
		SELECT   COUNT(*) INTO v_count FROM sci_related_orgs_vendor WHERE vendor_id=p_vendor_id;
      
        select ifnull(max(REL_ORGS_VENDORID),0)+1 into l_rel_orgs_vendorid  from sci_related_orgs_vendor;
        
        INSERT INTO sci_related_orgs_vendor (   rel_orgs_vendorid,
                                                 vendor_id,
                                                 vendor_fundingbody_name
                    )
        VALUES   (l_rel_orgs_vendorid,
           p_vendor_id, 
           p_vendor_fundingbody_name);
         
		SELECT 
			rel_orgs_vendorid, VENDOR_ID, VENDOR_FUNDINGBODY_NAME
		FROM
		sci_related_orgs_vendor;
               
   ELSEIF p_mode = 'U'
   THEN
		SELECT   COUNT(*)
        INTO   v_count
        FROM   sci_related_orgs_vendor
		WHERE   vendor_id = p_vendor_id
		and rel_orgs_vendorid <> p_rel_orgs_vendorid;
       
		SELECT 
		COUNT(*)
		INTO l_namecount FROM
		sci_related_orgs_vendor
		WHERE
		UPPER(vendor_fundingbody_name) = UPPER(p_vendor_fundingbody_name)
        AND rel_orgs_vendorid <> p_rel_orgs_vendorid;
       			
		IF v_count =0 and l_namecount=0
		THEN
			UPDATE   sci_related_orgs_vendor
            SET   vendor_fundingbody_name = p_vendor_fundingbody_name,
             vendor_id = p_vendor_id
              WHERE  rel_orgs_vendorid=p_rel_orgs_vendorid ;
            
			SELECT 
			rel_orgs_vendorid, vendor_id, vendor_fundingbody_name
			FROM
			sci_related_orgs_vendor;         
                         
			SELECT 
			rel_orgs_vendorid, vendor_id, vendor_fundingbody_name
			FROM
			sci_related_orgs_vendor;

		END IF;      
	ELSEIF p_mode = 'V'
	THEN
          
		SELECT   rel_orgs_vendorid,vendor_id, vendor_fundingbody_name
              FROM   sci_related_orgs_vendor
              where VENDOR_ID= (CASE
                               WHEN p_vendor_id  is null  THEN VENDOR_ID
                               ELSE p_vendor_id
                            END);
                            
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_taxids` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_taxids`(p_workflowid            integer,
                             p_insdel                integer, 
                             p_type                  varchar(4000),
                             p_taxids_text           varchar(4000),
                             p_userid                integer,
                             p_FINANCIALINFO_ID       integer)
BEGIN
   DECLARE v_fundingbody_id     integer;
   DECLARE v_financialinfo_id   integer;
   DECLARE v_count              integer;
   DECLARE v_count1             integer;
   DECLARE v_count2             integer;
  
   SELECT   ID
     INTO   v_fundingbody_id
     FROM   sci_workflow
    WHERE   WORKFLOWID = p_workflowid;
   
   IF p_insdel = 0
   THEN
      SELECT   COUNT(*)
        INTO   v_count
        FROM   financialinfo
       WHERE   fundingbody_id = v_fundingbody_id;
             
      IF (v_count = 0)
      THEN
         SELECT   financial_seq.NEXTVAL INTO v_financialinfo_id FROM DUAL;
         
         insert into financialinfo values(v_financialinfo_id,v_fundingbody_id);

         INSERT INTO taxids (TYPE, taxids_text, financialinfo_id)
           VALUES   (p_type, p_taxids_text, v_financialinfo_id);
        
      ELSE        
      
         SELECT   FINANCIALINFO_ID
           INTO   v_FINANCIALINFO_ID
           FROM   financialinfo
          WHERE   fundingbody_id = v_fundingbody_id;
          
          select count(*) into v_count  from taxids where financialinfo_id=v_financialinfo_id and type=p_type;
          if(v_count=0)
           then
         INSERT INTO taxids (TYPE, taxids_text, financialinfo_id)
           VALUES   (p_type, p_taxids_text, v_financialinfo_id);
                    
         end if;
         
      END IF;
   
   ELSEIF p_insdel = 2
   THEN
      SELECT   COUNT(*)
        INTO   v_count1
        FROM   taxids
       WHERE   FINANCIALINFO_ID = p_FINANCIALINFO_ID;
       
       SET v_financialinfo_id=p_FINANCIALINFO_ID;

      IF (v_count1 >0)
      THEN
         UPDATE   taxids
            SET   TYPE = p_type, taxids_text = p_taxids_text
          WHERE  FINANCIALINFO_ID = p_FINANCIALINFO_ID and TYPE = p_type;
         
      END IF;
  
   ELSEIF p_insdel = 1
   THEN
      SELECT   COUNT(*)
        INTO   v_count2
        FROM   taxids
       WHERE   FINANCIALINFO_ID = p_FINANCIALINFO_ID;
       
        SET v_financialinfo_id=p_FINANCIALINFO_ID;

      IF (v_count2>0)
      THEN
         DELETE FROM   taxids
               WHERE   FINANCIALINFO_ID = p_FINANCIALINFO_ID and TYPE = p_type;
         
      END IF;
   END IF;

      SELECT   *
        FROM   taxids
       WHERE   financialinfo_id = v_financialinfo_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_timesheetstop` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_timesheetstop`(
 p_workflowid           INTEGER,
   p_userid               INTEGER,
   p_transitionalid       INTEGER,
   p_mode                 INTEGER,   -- 8 * stop, 5 * pause, 6 * pause and stop, 10 * exit ,4* hold
   p_remarks              VARCHAR(4000)
)
BEGIN
   DECLARE v_check               INTEGER;
   DECLARE v_moduleid            INTEGER;
   DECLARE v_id                  bigint;
   DECLARE v_cycle               INTEGER;
   DECLARE v_sequence            INTEGER;
   DECLARE vm_sequence           INTEGER;
   DECLARE v_taskid              INTEGER;
   DECLARE x_revisionhistoryid   INTEGER;
   DECLARE xx_count              INTEGER;
   DECLARE v_count               INTEGER;
   DECLARE v_transitionalid      INTEGER  DEFAULT  0;
   DECLARE v_awardid             INTEGER;
   DECLARE v_opportunityid       INTEGER;
 
   SELECT   moduleid,
            ID,
            CYCLE,
            SEQUENCE,
            taskid
     INTO   v_moduleid,
            v_id,
            v_cycle,
            v_sequence,
            v_taskid
     FROM   sci_workflow
    WHERE   workflowid = p_workflowid;


   IF v_moduleid = 3 AND P_MODE IN (5, 6)
   THEN
      UPDATE   SCI_EXPIRED_OPPLIST
         SET   FLAG = 0
       WHERE   ID = V_ID;
   END IF;



   SELECT   MAX(SEQUENCE)
     INTO   vm_sequence
     FROM   sci_workflow
    WHERE   moduleid = v_moduleid AND ID = v_id AND CYCLE = v_cycle;

   IF p_mode = 8                                                        -- stop
   THEN
      UPDATE   sci_timesheet
         SET   enddate = SYSDATE(), statuscode = p_mode
       WHERE       transitionalid = p_transitionalid
               AND workflowid = p_workflowid
               AND userid = p_userid;

      UPDATE   sci_workflow
         SET   completeddate = SYSDATE(),
               completedby = p_userid,
               statusid = p_mode
       WHERE   workflowid = p_workflowid;
       commit;-- -suraj

      -- -------------------------------------------------------------------------------------
      -- Fundingbody
      IF v_taskid = 2 AND v_moduleid = 2 AND IFNULL (v_cycle, 0) <> 0
      THEN
         UPDATE   fundingbody_master
            SET   cyclecompletedby = p_userid, cyclecompletiondate = SYSDATE()
          WHERE   fundingbody_id = v_id;

         SELECT   MAX(revisionhistory_id)
           INTO   x_revisionhistoryid
           FROM   revisionhistory
          WHERE   fundingbody_id = v_id;

         UPDATE   revisionhistory
            SET   status = 'update'
          WHERE   revisionhistory_id = x_revisionhistoryid;

         SELECT   IFNULL(MAX(VERSION), 0) + 1
           INTO   xx_count
           FROM   reviseddate
          WHERE   revisionhistory_id = x_revisionhistoryid;

         IF xx_count = 1
         THEN
            INSERT INTO reviseddate (
                                        VERSION,
                                        reviseddate_text,
                                        revisionhistory_id
                       )
              VALUES   (xx_count, SYSDATE(), x_revisionhistoryid);
         ELSE
            UPDATE   reviseddate
               SET   VERSION = xx_count, reviseddate_text = SYSDATE()
             WHERE   revisionhistory_id = x_revisionhistoryid;
         END IF;
      END IF;

      -- ------------------------------------------------------------------------------------------------------------------
      -- Opportunity
      IF v_taskid IN (2, 7) AND v_moduleid = 3 AND IFNULL (v_cycle, 0) <> 0
      THEN
         UPDATE   opportunity_master
            SET   cyclecompletedby = p_userid, cyclecompletiondate = SYSDATE()
          WHERE   opportunityid = v_id;

         SELECT   MAX (revisionhistory_id)
           INTO   x_revisionhistoryid
           FROM   revisionhistory
          WHERE   opportunity_id = v_id;

         UPDATE   revisionhistory
            SET   status = 'update'
          WHERE   revisionhistory_id = x_revisionhistoryid;

         SELECT   IFNULL(MAX(VERSION), 0) + 1
           INTO   xx_count
           FROM   reviseddate
          WHERE   revisionhistory_id = x_revisionhistoryid;

         IF xx_count = 1
         THEN
            INSERT INTO reviseddate (
                                        VERSION,
                                        reviseddate_text,
                                        revisionhistory_id
                       )
              VALUES   (xx_count, SYSDATE(), x_revisionhistoryid);
         ELSE
            UPDATE   reviseddate
               SET   VERSION = xx_count, reviseddate_text = SYSDATE()
             WHERE   revisionhistory_id = x_revisionhistoryid;
         END IF;

         -- Update on 24 April 2019 by S.S.Shah, because opportunity was visible even after stopping with p_mode=8
         UPDATE   SCI_EXPIRED_OPPLIST
            SET   FLAG = 1
          WHERE   ID = V_ID;
      END IF;

      -- -------------------------------------------------------------
      -- Award
      IF v_taskid = 2 AND v_moduleid = 4 AND IFNULL (v_cycle, 0) <> 0
      THEN
         UPDATE   award_master
            SET   cyclecompletedby = p_userid, cyclecompletiondate = SYSDATE()
          WHERE   awardid = v_id;

         SELECT   MAX(revisionhistory_id)
           INTO   x_revisionhistoryid
           FROM   revisionhistory
          WHERE   award_id = v_id;

         UPDATE   revisionhistory
            SET   status = 'update'
          WHERE   revisionhistory_id = x_revisionhistoryid;

         SELECT   IFNULL(MAX(VERSION), 0) + 1
           INTO   xx_count
           FROM   reviseddate
          WHERE   revisionhistory_id = x_revisionhistoryid;

         IF xx_count = 1
         THEN
            INSERT INTO reviseddate (
                                        VERSION,
                                        reviseddate_text,
                                        revisionhistory_id
                       )
              VALUES   (xx_count, SYSDATE(), x_revisionhistoryid);
         ELSE
            UPDATE   reviseddate
               SET   VERSION = xx_count, reviseddate_text = SYSDATE()
             WHERE   revisionhistory_id = x_revisionhistoryid;
         END IF;
      END IF;

      -- ----------------------------------------------------------------------------------
      IF v_taskid = 2 AND v_moduleid = 2
      THEN
         UPDATE   fundingbody_master
            SET   cyclecompletedby = p_userid, cyclecompletiondate = SYSDATE()
          WHERE   fundingbody_id = v_id;
      END IF;

      IF v_taskid = 2 AND v_moduleid = 3
      THEN
         UPDATE   opportunity_master
            SET   cyclecompletedby = p_userid, cyclecompletiondate = SYSDATE()
          WHERE   opportunityid = v_id;
      END IF;

      IF v_taskid = 2 AND v_moduleid = 4
      THEN
         UPDATE   award_master
            SET   cyclecompletedby = p_userid, cyclecompletiondate = SYSDATE()
          WHERE   awardid = v_id;
      END IF;
   ELSEIF p_mode = 5                                                   -- -pause
   THEN
      UPDATE   sci_timesheet
         SET   enddate = SYSDATE()
       WHERE       transitionalid = p_transitionalid
               AND workflowid = p_workflowid
               AND userid = p_userid;

      IF v_moduleid = 3
      THEN
         SELECT   COUNT(*)
           INTO   v_count
           FROM   opportunity
          WHERE   opportunity_id = v_id;

         IF v_count = 0
         THEN
            SELECT   transitionalid
              INTO   v_transitionalid
              FROM   sci_timesheet
             WHERE   ID = v_id AND moduleid = 3;

            DELETE FROM   sci_timesheetremarks
                  WHERE   transitionalid = v_transitionalid;

            DELETE FROM   sci_timesheet
                  WHERE   ID = v_id AND moduleid = 3;

            UPDATE   sci_workflow
               SET   statusid = NULL, startdate = NULL, startby = NULL
             WHERE   workflowid = p_workflowid;
             commit;
         END IF;
      END IF;

      IF v_moduleid = 4
      THEN                                                  -- pause and logoff
         SELECT   COUNT(*)
           INTO   v_count
           FROM   award
          WHERE   award_id = v_id;

         IF v_count = 0
         THEN
            SELECT   transitionalid
              INTO   v_transitionalid
              FROM   sci_timesheet
             WHERE   ID = v_id AND moduleid = 4;

            DELETE FROM   sci_timesheetremarks
                  WHERE   transitionalid = v_transitionalid;

            DELETE FROM   sci_timesheet
                  WHERE   ID = v_id AND moduleid = 4;

            UPDATE   sci_workflow
               SET   statusid = NULL, startdate = NULL, startby = NULL
             WHERE   workflowid = p_workflowid;
             commit;-- --suraj
         END IF;
      END IF;
   ELSEIF p_mode = 6                                         -- pause and logoff
   THEN
      UPDATE   sci_timesheet
         SET   enddate = SYSDATE(), statuscode = p_mode
       WHERE       transitionalid = p_transitionalid
               AND workflowid = p_workflowid
               AND userid = p_userid;

      UPDATE   sci_workflow
         SET   statusid = p_mode
       WHERE   workflowid = p_workflowid;
       commit;-- ---suraj

      IF v_moduleid = 3
      THEN
         SELECT   COUNT(*)
           INTO   v_count
           FROM   opportunity
          WHERE   opportunity_id = v_id;

         IF v_count = 0
         THEN
            SELECT   transitionalid
              INTO   v_transitionalid
              FROM   sci_timesheet
             WHERE   ID = v_id AND moduleid = 3;

            DELETE FROM   sci_timesheetremarks
                  WHERE   transitionalid = v_transitionalid;

            DELETE FROM   sci_timesheet
                  WHERE   ID = v_id AND moduleid = 3;

            UPDATE   sci_workflow
               SET   statusid = NULL, startdate = NULL, startby = NULL
             WHERE   workflowid = p_workflowid;
             commit;-- -suraj
         END IF;
      END IF;

      IF v_moduleid = 4
      THEN                                                  -- pause and logoff
         SELECT   COUNT(*)
           INTO   v_count
           FROM   award
          WHERE   award_id = v_id;

         IF v_count = 0
         THEN
            SELECT   transitionalid
              INTO   v_transitionalid
              FROM   sci_timesheet
             WHERE   ID = v_id AND moduleid = 4;

            DELETE FROM   sci_timesheetremarks
                  WHERE   transitionalid = v_transitionalid;

            DELETE FROM   sci_timesheet
                  WHERE   ID = v_id AND moduleid = 4;

            UPDATE   sci_workflow
               SET   statusid = NULL, startdate = NULL, startby = NULL
             WHERE   workflowid = p_workflowid;
             commit;-- -suraj
         END IF;
      END IF;
   ELSEIF p_mode = 10                                                -- not save
   THEN
      UPDATE   sci_timesheet
         SET   enddate = SYSDATE(), statuscode = p_mode
       WHERE       transitionalid = p_transitionalid
               AND workflowid = p_workflowid
               AND userid = p_userid;

      UPDATE   sci_workflow
         SET   assignby = NULL,
               assigndate = NULL,
               statusid = NULL,
               startby = NULL,
               startdate = NULL
       WHERE   workflowid = p_workflowid;
       commit;-- -suraj
   ELSEIF p_mode = 4
   THEN
      UPDATE   sci_timesheet
         SET   enddate = SYSDATE(), statuscode = p_mode
       WHERE       transitionalid = p_transitionalid
               AND workflowid = p_workflowid
               AND userid = p_userid;

      UPDATE   sci_workflow
         SET   assignby = NULL,
               assigndate = NULL,
               statusid = NULL,
               startby = NULL,
               startdate = NULL
       WHERE   workflowid = p_workflowid;
       commit;-- -suraj

      IF v_moduleid = 2
      THEN
         UPDATE   fundingbody_master
            SET   statuscode = p_mode
          WHERE   fundingbody_id = v_id;
      END IF;
   END IF;

   IF v_moduleid = 3
   THEN
      SELECT   COUNT(*)
        INTO   v_count
        FROM   opportunity
       WHERE   opportunity_id = v_id;
   ELSEIF v_moduleid = 4
   THEN
      SELECT   COUNT(*)
        INTO   v_count
        FROM   AWARD
       WHERE   AWARD_id = v_id;
   ELSEIF v_moduleid = 2
   THEN
      SELECT   COUNT(*)
        INTO   v_count
        FROM   FUNDINGBODY
       WHERE   FUNDINGBODY_id = v_id;
   END IF;

   IF p_remarks IS NOT NULL AND v_count <> 0
   THEN
      INSERT INTO sci_timesheetremarks (workflowid,
                                        transitionalid,
                                        statuscode,
                                        userid,
                                        remarks)
        VALUES   (p_workflowid,
                  p_transitionalid,
                  p_mode,
                  p_userid,
                  p_remarks);
   END IF;

   -- ------------------------------------------------------
   /* Change made by Yogita Johar */
   IF v_moduleid = 3 AND v_cycle = 0
   THEN
      SELECT   COUNT(*)
        INTO   v_check
        FROM   sci_oldsequence
       WHERE   opportunityid IN (SELECT   ID
                                   FROM   opportunity
                                  WHERE   opportunity_id = v_id);

      IF (v_check) = 0
      THEN
         SELECT   COUNT(*)
           INTO   v_count
           FROM   sci_backtoqa
          WHERE   ID = v_id;

         IF v_count = 0
         THEN
                    IF v_opportunityid <> 0
            THEN
               UPDATE   opportunity
                  SET   ID = v_id
                WHERE   opportunity_id = v_id;

               UPDATE   sci_missedsequence
                  SET   OPPORTUNITYFLAG = 1
                WHERE   OPPORTUNITYID = v_opportunityid;
            ELSE
               UPDATE   opportunity
                       SET   ID = v_id
                WHERE   opportunity_id = v_id AND 1 = 2;
            END IF;
         END IF;
      END IF;
   ELSEIF v_moduleid = 4 AND v_cycle = 0
   THEN
      SELECT   COUNT(*)
        INTO   v_check
        FROM   sci_oldsequence
       WHERE   awardid IN (SELECT   ID
                             FROM   award
                            WHERE   award_id = v_id);

      IF (v_check) = 0
      THEN
         SELECT   COUNT(*)
           INTO   v_count
           FROM   sci_backtoqa
          WHERE   ID = v_id;

         IF v_count > 0
         THEN
            SELECT   IFNULL(MIN (awardid), 0)
              INTO   v_awardid
              FROM   sci_missedsequence
             WHERE   awardflag = 0;

            IF v_awardid <> 0
            THEN
               UPDATE   award
                  SET   ID = v_awardid
                WHERE   award_id = v_id;

               UPDATE   sci_missedsequence
                  SET   AWARDFLAG = 1
                WHERE   AWARDID = v_AWARDID;
            ELSE
               UPDATE   award
                             SET   ID = v_id
                WHERE   award_id = v_id;
            END IF;
         END IF;
      END IF;
   END IF;

   -- --------------------------------------------------------------------------
   COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_timesheetstopcontinue_QA` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_timesheetstopcontinue_QA`(
p_workflowid           INTEGER,
                                      p_userid               INTEGER,
                                      p_transitionalid       INTEGER,
                                      p_remarks              VARCHAR(4000)
)
BEGIN
   DECLARE v_moduleid         integer;
   DECLARE v_id               integer;
   DECLARE v_FUNDINGBODY_ID   integer;
   
   CALL sci_timesheetstop(p_workflowid,
                      p_userid,
                      p_transitionalid,
                      8,
                      p_remarks,
                      p_o_status,
                      p_o_error);

   SELECT   moduleid, id
     INTO   v_moduleid, v_id
     FROM   sci_workflow
    WHERE   workflowid = p_workflowid;

   IF v_moduleid = 3
   THEN
      SELECT   FUNDINGBODY_ID
        INTO   v_FUNDINGBODY_ID
        FROM   opportunity
       WHERE   OPPORTUNITY_ID = v_id;

         SELECT   WORKFLOWID,
                  OPPORTUNITY_ID,
                  FUNDINGBODYOPPORTUNITYID,
                  NAME
           FROM   OPPORTUNITY op, sci_workflow sw
          WHERE       FUNDINGBODY_ID = v_FUNDINGBODY_ID
                  AND op.OPPORTUNITY_ID = sw.id
                  AND MODULEID = 3
                  AND taskid = 2
                  AND sw.cycle = 0
                  AND IFNULL(STATUSID, 0) NOT IN (8, 7)
                  AND COMPLETEDDATE IS NULL
                  AND NOT EXISTS
                        (SELECT   1
                           FROM   sci_workflow
                          WHERE       ID = sw.ID
                                  AND CYCLE = sw.CYCLE
                                  AND SEQUENCE < sw.SEQUENCE
                                  AND completeddate IS NULL)
         UNION ALL
         SELECT   WORKFLOWID,
                  OPPORTUNITYID,
                  NULL FUNDINGBODYOPPORTUNITYID,
                  OPPORTUNITYNAME name
           FROM   OPPORTUNITY_master om, sci_workflow sw
          WHERE       OM.OPPORTUNITYID = sw.id
                  AND OM.CYCLE = sw.cycle
                  AND sw.taskid = 2
                  AND sw.MODULEID = 3
                  AND FUNDINGBODYID = v_FUNDINGBODY_ID
                  AND isautomated = 1
                  AND om.cycle = 0
                  AND statuscode = 1
                  AND IFNULL(STATUSID, 0) NOT IN (7, 8)
                  AND COMPLETEDDATE IS NULL
                  AND NOT EXISTS (SELECT   1
                                    FROM   OPPORTUNITY
                                   WHERE   OPPORTUNITY_ID = om.OPPORTUNITYID)
                  AND NOT EXISTS
                        (SELECT   1
                           FROM   sci_workflow
                          WHERE       ID = sw.ID
                                  AND CYCLE = sw.CYCLE
                                  AND SEQUENCE < sw.SEQUENCE
                                  AND completeddate IS NULL)
         ORDER BY   name
         LIMIT 1;
   ELSEIF v_moduleid = 4
   THEN
      SELECT   FUNDINGBODY_ID
        INTO   v_FUNDINGBODY_ID
        FROM   award
       WHERE   AWARD_ID = v_id;

         SELECT   workflowid,
                  award_id,
                  fundingbodyawardid,
                  NAME
           FROM   award op, sci_workflow sw,award_master am
          WHERE       fundingbody_id = v_fundingbody_id
                  AND op.award_id = sw.ID
                  And am.awardid=op.award_id
                  And am.statuscode in (1,2)
                  AND moduleid = 4
                  AND sw.CYCLE = 0
                  AND taskid = 2
                  AND IFNULL (statusid, 0) NOT IN (8, 7)
                  AND COMPLETEDDATE IS NULL
                  AND NOT EXISTS
                        (SELECT   1
                           FROM   sci_workflow
                          WHERE       ID = sw.ID
                                  AND CYCLE = sw.CYCLE
                                  AND SEQUENCE < sw.SEQUENCE
                                  AND completeddate IS NULL)
         UNION ALL
         SELECT   WORKFLOWID,
                  AWARDID,
                  NULL FUNDINGBODYOPPORTUNITYID,
                  AWARDNAME name
           FROM   award_master om, sci_workflow sw
          WHERE       OM.awardID = sw.id
                  AND OM.CYCLE = sw.cycle
                  AND sw.taskid = 2
                  AND sw.MODULEID = 4
                  AND FUNDINGBODYID = v_FUNDINGBODY_ID
                  AND isautomated = 1
                  AND om.cycle = 0
                  AND statuscode = 1
                  AND IFNULL (STATUSID, 0) NOT IN (7, 8)
                  AND COMPLETEDDATE IS NULL
                  AND NOT EXISTS (SELECT   1
                                    FROM   AWARD
                                   WHERE   AWARD_ID = om.AWARDID)
                  AND NOT EXISTS
                        (SELECT   1
                           FROM   sci_workflow
                          WHERE       ID = sw.ID
                                  AND CYCLE = sw.CYCLE
                                  AND SEQUENCE < sw.SEQUENCE
                                  AND completeddate IS NULL)
         ORDER BY   name
         LIMIT 1;
   END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_timesheetstoP_CONTINUE` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_timesheetstoP_CONTINUE`(
p_workflowid           INTEGER,
   p_userid               INTEGER,
   p_transitionalid       INTEGER,
   p_remarks              VARCHAR(4000)
)
BEGIN
	DECLARE V_mode                INTEGER  DEFAULT  8;
	DECLARE v_check               INTEGER;
	DECLARE v_moduleid            INTEGER;
	DECLARE v_id                  INTEGER;
	DECLARE v_cycle               INTEGER;
	DECLARE v_sequence            INTEGER;
	DECLARE vm_sequence           INTEGER;
	DECLARE v_taskid              INTEGER;
	DECLARE x_revisionhistoryid   INTEGER;
	DECLARE xx_count              INTEGER;
	DECLARE v_count               INTEGER;
	DECLARE v_transitionalid      INTEGER  DEFAULT  0;
	DECLARE v_awardid             INTEGER;
	DECLARE v_opportunityid       INTEGER;
	DECLARE x_WORKFLOWID1      INTEGER ;
	DECLARE P_O_STATUS1 INTEGER ;
	DECLARE P_O_ERROR1 VARCHAR(500) ;
	DECLARE v_fb integer;

    SELECT   moduleid,
            ID,
            CYCLE,
            SEQUENCE,
            taskid
     INTO   v_moduleid,
            v_id,
            v_cycle,
            v_sequence,
            v_taskid
     FROM   sci_workflow
    WHERE   workflowid = p_workflowid;
    
    if  v_moduleid=4  then
    select FUNDINGBODY_ID into v_fb from award where AWARD_ID=v_id ;
   end if;
   
   if  v_moduleid=3  then
    select FUNDINGBODY_ID into v_fb from OPPORTUNITY where OPPORTUNITY_ID=v_id ;
    end if;
    
    CALL sci_timesheetstop (p_workflowid,
                      p_userid,
                      p_transitionalid,
                      8,
                      p_remarks,
                      p_o_status,
                      p_o_error);
   
    
   
   IF v_moduleid = 4
   THEN
      CALL SCI_AW_AWNEW (v_fb,
                    p_userid,
                    x_WFLOWID,
                    P_O_STATUS1,
                    P_O_ERROR1);
   END IF;

   IF v_moduleid = 3
   THEN
      CALL SCI_OP_OPNEW (v_fb,
                    p_userid,
                    x_WFLOWID,
                    P_O_STATUS1,
                    P_O_ERROR1);
   END IF;

   COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_TrackUnstoppedFbAwardOpp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_TrackUnstoppedFbAwardOpp`(
	P_WORKFLOWID       INTEGER,
	P_USERID           INTEGER,
	P_PAGENAME         VARCHAR(4000)
)
sp_lbl:

BEGIN
   DECLARE V_MODULEID        INTEGER;
   DECLARE V_SEQ             INTEGER;
   DECLARE V_TASKID          INTEGER;
   DECLARE V_SEQUENCE        INTEGER;
   DECLARE V_STARTDATE       DATETIME;
   DECLARE V_STARTBY         INTEGER;
   DECLARE V_COMPLETEDDATE   DATETIME;
   DECLARE V_COMPLETEDBY     INTEGER;
   DECLARE V_STATUSID        INTEGER;
   DECLARE V_ID              bigint;
   DECLARE V_COUNT           INTEGER;
   DECLARE V_STATUS          VARCHAR (50);
   SET V_SEQ=0;
   IF P_WORKFLOWID IS NULL OR P_USERID IS NULL OR P_PAGENAME IS NULL
   THEN
      LEAVE sp_lbl;
   ELSE
      SELECT   COUNT( * )
        INTO   V_COUNT
        FROM   SCI_WORKFLOW
       WHERE   WORKFLOWID = P_WORKFLOWID;

      IF V_COUNT < 1
      THEN
         LEAVE sp_lbl;
      END IF;
   END IF;

   SELECT   MODULEID,
            ID,
            TASKID,
            SEQUENCE,
            STARTDATE,
            STARTBY,
            COMPLETEDDATE,
            COMPLETEDBY,
            STATUSID
     INTO   V_MODULEID,
            V_ID,
            V_TASKID,
            V_SEQUENCE,
            V_STARTDATE,
            V_STARTBY,
            V_COMPLETEDDATE,
            V_COMPLETEDBY,
            V_STATUSID
     FROM   SCI_WORKFLOW
    WHERE   WORKFLOWID = P_WORKFLOWID;


  -- SET V_SEQ = TRACKINGLOG_SEQ.NEXTVAL;
   select max(TLOGID)+1 into V_SEQ from TRACKING_LOG;
   SELECT COUNT(TLOGID) INTO V_SEQ FROM   TRACKING_LOG;

   INSERT INTO TRACKING_LOG (TLOGID,
                             MODULEID,
                             TASKID,
                             SEQUENCE,
                             STARTDATE,
                             STARTBY,
                             COMPLETEDDATE,
                             COMPLETEDBY,
                             STATUSID)
     VALUES   (V_SEQ,
               V_MODULEID,
               V_TASKID,
               V_SEQUENCE,
               V_STARTDATE,
               V_STARTBY,
               V_COMPLETEDDATE,
               V_COMPLETEDBY,
               V_STATUSID);


   IF V_MODULEID = 2
   THEN
      SELECT   (SELECT   STATUSCODE
                  FROM   FUNDINGBODY_MASTER
                 WHERE   FUNDINGBODY_ID = V_ID)
        INTO   V_STATUS
        FROM   DUAL;

      IF V_STATUS IS NULL
      THEN
         LEAVE sp_lbl;
      END IF;

      IF UPPER (V_STATUS) = '2'
      THEN
         INSERT INTO TRACKING_FB (TID,
                                  WORKFLOWID,
                                  USERID,
                                  PAGENAME,
                                  FUNDINGBODYID)
           VALUES   (V_SEQ,
                     P_WORKFLOWID,
                     P_USERID,
                     LTRIM (RTRIM (P_PAGENAME)),
                     V_ID);
      END IF;
   ELSEIF V_MODULEID = 3
   THEN
      SELECT   (SELECT   STATUSCODE
                  FROM   OPPORTUNITY_MASTER
                 WHERE   OPPORTUNITYID = V_ID)
        INTO   V_STATUS
        FROM   DUAL;

      IF V_STATUS IS NULL
      THEN
         LEAVE sp_lbl;
      END IF;

      IF UPPER (V_STATUS) = '2'
      THEN
         INSERT INTO TRACKING_OPP (TID,
                                   WORKFLOWID,
                                   USERID,
                                   PAGENAME,
                                   OPPORTUNITYID)
           VALUES   (V_SEQ,
                     P_WORKFLOWID,
                     P_USERID,
                     LTRIM (RTRIM (P_PAGENAME)),
                     V_ID);
      END IF;
   ELSEIF V_MODULEID = 4
   THEN
      -- SELECT (SELECT STATUS FROM REVISIONHISTORY WHERE AWARD_ID=V_ID) INTO V_STATUS FROM DUAL;
      SELECT   (SELECT   STATUSCODE
                  FROM   AWARD_MASTER
                 WHERE   AWARDID = V_ID)
        INTO   V_STATUS
        FROM   DUAL;

      IF V_STATUS IS NULL
      THEN
         LEAVE sp_lbl;
      END IF;

      IF UPPER (V_STATUS) = '2'
      THEN
         INSERT INTO TRACKING_AWARD (TID,
                                     WORKFLOWID,
                                     USERID,
                                     PAGENAME,
                                     AWARDID)
           VALUES   (V_SEQ,
                     P_WORKFLOWID,
                     P_USERID,
                     LTRIM (RTRIM (P_PAGENAME)),
                     V_ID);
      END IF;
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SCI_UPD_OPP_DATE_FLG` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `SCI_UPD_OPP_DATE_FLG`(
	P_WORKFLOWID                     INTEGER  
)
BEGIN
	DECLARE V_MODULEID   INTEGER;
	DECLARE V_CYCLE      INTEGER;
	DECLARE V_ID         INTEGER;
 
	SELECT   MODULEID, ID, CYCLE INTO   V_MODULEID, V_ID, V_CYCLE FROM   SCI_WORKFLOW WHERE   WORKFLOWID = P_WORKFLOWID;

	UPDATE   OPPORTUNITY SET   DATE_FLAG = 0 WHERE   OPPORTUNITY_ID = v_id;
   
	SELECT   opportunity_id,
               DATE_FORMAT (loi_due_date, '%d-%m-%Y') loi_DATE,
               sequence_id,
               DATE_REMARKS
    FROM   sci_opp_loi_duedate_detail
    WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 1;
   
	SELECT   opportunity_id,
               (CASE
                   WHEN loi_due_date IS NULL THEN DATE_REMARKS
                   ELSE to_clob(DATE_FORMAT (loi_due_date, '%d-%m-%Y'))
                END)
                  DUE_DATE,
               sequence_id,
               DATE_REMARKS
    FROM   sci_opp_loi_duedate_detail
    WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 2;
   
	SELECT   opportunity_id,
               DATE_FORMAT (loi_due_date, '%d-%m-%Y') expiration_date,
               sequence_id,
               DATE_REMARKS
    FROM   sci_opp_loi_duedate_detail
    WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 3;
   
	SELECT   opportunity_id,
               DATE_FORMAT (loi_due_date, '%d-%m-%Y') firstpost_date,
               sequence_id,
               DATE_REMARKS
    FROM   sci_opp_loi_duedate_detail
    WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 4;
   
	SELECT   opportunity_id,
               DATE_FORMAT (loi_due_date, '%d-%m-%Y') lastmodifedpost_date,
               sequence_id,
               DATE_REMARKS
    FROM   sci_opp_loi_duedate_detail
    WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 5;
   
	SELECT   opportunity_id,
               DATE_FORMAT (loi_due_date, '%d-%m-%Y') open_date,
               sequence_id,
               DATE_REMARKS
    FROM   sci_opp_loi_duedate_detail
    WHERE   OPPORTUNITY_ID = V_ID AND DATE_TYPE = 6;
   
	SELECT   OPPORTUNITYSTATUS FROM   opportunity WHERE   OPPORTUNITY_ID = V_ID;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sci_urllinks` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sci_urllinks`(
	p_workflowid       integer,
	p_pagename         varchar(4000)
)
BEGIN
   DECLARE v_moduleid   integer;
   DECLARE v_id         bigint;
  
   SELECT   moduleid, id
     INTO   v_moduleid, v_id
     FROM   sci_workflow
    WHERE   workflowid = p_workflowid;

      SELECT   URL
        FROM   sci_urls
       WHERE       moduleid = v_moduleid
               AND id = v_id
               AND PAGENAME = p_pagename
               AND ISACTIVE = '0';
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `update_award_title` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `update_award_title`(
   IN p_trans_id       INTEGER,
   IN p_title          VARCHAR(4000)
   )
BEGIN
   DECLARE v_count   INTEGER;
   -- DECLARE excp EXCEPTION;
 
   
   SELECT   COUNT(*)
     INTO   v_count
     FROM   sci_language_detail
    WHERE   tran_id = p_trans_id;

   
   UPDATE   sci_language_detail
      SET   column_desc = p_title
    WHERE   tran_id = p_trans_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `update_fbdetails_multilanguage` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `update_fbdetails_multilanguage`(

   IN p_trans_id       INTEGER,
   IN p_languagecode     VARCHAR(4000),
   IN p_title          VARCHAR(4000))
BEGIN
	DECLARE v_count   INTEGER;
	DECLARE v_languageid integer;
	   
	SELECT   COUNT(*) INTO   v_count FROM   sci_language_detail WHERE   tran_id = p_trans_id;

	SELECT language_id INTO v_languageid from sci_language_master where LANGUAGE_CODE=p_languagecode;

	UPDATE   sci_language_detail SET   column_desc = p_title, language_id = IFNULL (v_languageid, language_id)    
	WHERE   tran_id = p_trans_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2020-09-06  9:53:24
